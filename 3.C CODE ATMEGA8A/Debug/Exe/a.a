;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <i2c.h>
;#include <ds1307.h>
;#include <stdio.h>
;eeprom unsigned char alMinute,alHour,brightnessMem,alarmSet;
;enum commandType
;{
;	HOME ,
;	MENU ,
;    SETTIME ,
;    SETALARM ,
;    EXIT,
;    BRIGHTNESS,
;    ALARM,
;    MUTE
;};
;
;unsigned char brightnessPercent=99,positionNumber=1,n[4],temp[2],i=50,h=0,m=0,s=0,left=0,right=0,clock=1,timeStopClock=0 ...

	.DSEG
;unsigned char counterBlinkNumber=0,blinkNumberChageState=0,portEnable[5]={1,1,1,1,1},brightnessSet=99;
;int z=0;
;
;void brightness(unsigned char timeBR);
;void portConfig();
;void stopIntrupts();
;void startIntrupts();
;void startTimers();
;void stopTimers() ;
;void stopClock(unsigned char timeStop);
;void startCounterTimer();
;void stopCounterTimer();
;void showBrightness();
;void brightnessCheck();
;void blinkNumberChangeTimer();
;void digitalWritePortC (unsigned char portNumber);
;
;void buzzer(unsigned int timeBuzz){
; 0000 0025 void buzzer(unsigned int timeBuzz){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0026 //PORTD.1=1;
; 0000 0027 delay_ms(timeBuzz);
;PCODE: $0000000F VOL: 0
;	timeBuzz -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0028 PORTD.1=0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0029 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;void changePositionNumber(unsigned char position){
; 0000 002B void changePositionNumber(unsigned char position){
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002C PORTC=PORTC&0xf0;
;PCODE: $00000019 VOL: 0
;	position -> Y+0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002D  switch (position) {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002E     case 1 :
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002F     digitalWritePortC(1);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0030     break;
;PCODE: $00000023 VOL: 0
; 0000 0031     case 2 :
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0032     digitalWritePortC(2);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0033     break;
;PCODE: $00000029 VOL: 0
; 0000 0034     case 3 :
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0035     digitalWritePortC(3);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0036     break;
;PCODE: $0000002F VOL: 0
; 0000 0037     case 4 :
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0038     digitalWritePortC(4);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0039     break;
;PCODE: $00000035 VOL: 0
; 0000 003A     };
;PCODE: $00000036 VOL: 0
; 0000 003B }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
;void digitalWritePortC (unsigned char portNumber){
; 0000 003D void digitalWritePortC (unsigned char portNumber){
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003E      switch (portNumber) {
;PCODE: $0000003C VOL: 0
;	portNumber -> Y+0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003F     case 1 :
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0040     if(portEnable[1])PORTC.0=1;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0041     break;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0042     case 2 :
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0043     if(portEnable[2])PORTC.1=1;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0044     break;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0045     case 3 :
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0046     if(portEnable[3])PORTC.2=1;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0047     break;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0048     case 4 :
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0049     if(portEnable[4])PORTC.3=1;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 004A     break;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004B     };
;PCODE: $0000006A VOL: 0
; 0000 004C }
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;
;unsigned char digitalWritePort ( unsigned char input){
; 0000 004E unsigned char digitalWritePort ( unsigned char input){
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 004F  switch (input) {
;PCODE: $00000070 VOL: 0
;	input -> Y+0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0050     case 1:
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0051     return 6 ;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0052     case 2:
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0053     return 91 ;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0054     case 3:
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0055     return 79 ;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0056     case 4:
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0057     return 102 ;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0058     case 5:
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0059     return 109 ;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 005A     case 6:
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 005B     return 125 ;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 005C     case 7:
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 005D     return 7 ;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 005E     case 8:
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 005F     return 127 ;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0060     case 9:
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0061     return 111 ;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0062     case 0:
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0063     return 63 ;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0064     case 'e':
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0065     return 121 ;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0066     case 'r':
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0067     return 112 ;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0068     case 'b':
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0069     return 124 ;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 006A     case 'p':
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 006B     return 115 ;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 006C     case 'o':
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 006D     return 92 ;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 006E     case 'f':
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 006F     return 113 ;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0070     case 'l':
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0071     return 56 ;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0072     case 'c':
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0073     return 88 ;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0074     case 't':
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0075     return 120 ;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0076     case 'x':
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0077     return 118 ;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0078     case 'a':
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0079     return 119 ;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 007A     case 'i':
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 007B     return 48 ;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 007C     case 'n':
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 007D     return 116 ;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 007E     case 'v':
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 007F     return 62 ;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 0080     case '.':
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0081     return 0 ;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 0082     };
;PCODE: $00000108 VOL: 0
; 0000 0083 }
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;
;void showTwoNumber(unsigned char input,unsigned char nu)
; 0000 0086 {
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0087     switch (nu) {
;PCODE: $0000010E VOL: 0
;	input -> Y+1
;	nu -> Y+0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0088     case 1 :
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0089     n[nu-1]= digitalWritePort(input/10);
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 008A     n[nu]= digitalWritePort(input%10);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 008B     break;
;PCODE: $0000012C VOL: 0
; 0000 008C     case 2 :
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 008D     n[nu]= digitalWritePort(input/10);
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 008E     n[nu+1]= digitalWritePort(input%10);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 008F     break;
;PCODE: $00000149 VOL: 0
; 0000 0090     };
;PCODE: $0000014A VOL: 0
; 0000 0091 }
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;
;void showOneNumber(unsigned char input,char nu)
; 0000 0094 {
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0095   n[nu-1]= digitalWritePort(input);
;PCODE: $00000150 VOL: 0
;	input -> Y+1
;	nu -> Y+0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0096 }
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;
;void blinkNumber(){
; 0000 0098 void blinkNumber(){
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 0099     switch (positionNumber) {
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 009A     case 1 :
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 009B     PORTB=n[0];
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 009C     changePositionNumber(positionNumber);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 009D     positionNumber=2;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 009E     break;
;PCODE: $00000169 VOL: 0
; 0000 009F     case 2 :
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00A0     PORTB=n[1];
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00A1     changePositionNumber(positionNumber);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00A2     positionNumber=3;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00A3     break;
;PCODE: $00000174 VOL: 0
; 0000 00A4     case 3 :
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00A5     PORTB=n[2];
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00A6     changePositionNumber(positionNumber);
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00A7     positionNumber=4;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00A8     break;
;PCODE: $0000017F VOL: 0
; 0000 00A9     case 4 :
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00AA     PORTB=n[3];
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 00AB     changePositionNumber(positionNumber);
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00AC     positionNumber=1;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00AD     break;
;PCODE: $0000018A VOL: 0
; 0000 00AE     };
;PCODE: $0000018B VOL: 0
; 0000 00AF }
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;
;void clickCheck(){
; 0000 00B1 void clickCheck(){
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00B2             if(!PIND.0){
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00B3             while(!PIND.0);
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00B4             buzzer(100);
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00B5             click=1;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00B6             if(runnigState==HOME){
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 00B7                 runnigState=MENU;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 00B8                 click=0;
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00B9             }
; 0000 00BA              }
;PCODE: $000001A5 VOL: 0
; 0000 00BB }
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;
;void brightnessCheck(){
; 0000 00BD void brightnessCheck(){
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 00BE                if(right==2){
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00BF                buzzer(3);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00C0                if(brightnessSet>1)brightnessSet--;
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 00C1                if(brightnessSet>1)brightnessSet--;
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 00C2                if(brightnessSet>1)brightnessSet--;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 00C3                if(brightnessSet>1)brightnessSet--;
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00C4                if(brightnessSet>1)brightnessSet--;
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 00C5                brightness(brightnessSet);
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 00C6                showBrightness();
;PCODE: $000001D6 VOL: 0
; 0000 00C7                left=0;right=0;
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 00C8               }
; 0000 00C9               if(left==2){
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 00CA                buzzer(3);
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 00CB                if(brightnessSet<99)brightnessSet++;
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 00CC                if(brightnessSet<99)brightnessSet++;
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 00CD                if(brightnessSet<99)brightnessSet++;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 00CE                if(brightnessSet<99)brightnessSet++;
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 00CF                if(brightnessSet<99)brightnessSet++;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 00D0                brightness(brightnessSet);
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 00D1                showBrightness();
;PCODE: $00000205 VOL: 0
; 0000 00D2                left=0;right=0;
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00D3               }
; 0000 00D4 }
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;
;void showBrightness(){
; 0000 00D6 void showBrightness(){
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 00D7                stopClock(5);
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 00D8                showTwoNumber(brightnessSet,2);
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 00D9                showOneNumber('b',1);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00DA                showOneNumber('r',2);
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00DB }
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;void stopClock(unsigned char timeStop){
; 0000 00DC void stopClock(unsigned char timeStop){
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 00DD  clock=0;
;PCODE: $0000021F VOL: 0
;	timeStop -> Y+0
;PCODE: $00000220 VOL: 0
; 0000 00DE  timeStopClock = timeStop;
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 00DF  startCounterTimer();
;PCODE: $00000223 VOL: 0
; 0000 00E0  stopClockState=1;
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 00E1 }
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;
;void checkTimeForClock(){
; 0000 00E3 void checkTimeForClock(){
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 00E4 if(stopClockState){
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 00E5   if(timeStopClock>0){
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 00E6    timeStopClock-- ;
;PCODE: $00000231 VOL: 0
; 0000 00E7    }else{
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 00E8    clock=1;
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 00E9    stopCounterTimer();
;PCODE: $00000236 VOL: 0
; 0000 00EA    stopClockState=0;
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 00EB    }
;PCODE: $00000239 VOL: 0
; 0000 00EC }
; 0000 00ED }
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;unsigned char right1(){
; 0000 00EE unsigned char right1(){
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 00EF     if(left==2){
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 00F0         right=0;left=0;
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 00F1         return 1;
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 00F2     }else{
;PCODE: $00000246 VOL: 0
; 0000 00F3         return 0;
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 00F4     }
;PCODE: $00000249 VOL: 0
; 0000 00F5 }
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;unsigned char left1(){
; 0000 00F6 unsigned char left1(){
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 00F7     if(right==2){
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 00F8         right=0;left=0;
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
; 0000 00F9         return 1;
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 00FA     }else{
;PCODE: $00000255 VOL: 0
; 0000 00FB         return 0;
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 00FC     }
;PCODE: $00000258 VOL: 0
; 0000 00FD }
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 00FF {
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 0100     switch (left) {
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
; 0000 0101     case 0 :
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 0102     right=1;
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0103     break;
;PCODE: $00000263 VOL: 0
; 0000 0104     case 1 :
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0105     right=2;
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 0106     break;
;PCODE: $00000269 VOL: 0
; 0000 0107     };
;PCODE: $0000026A VOL: 0
; 0000 0108 }
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 010B {
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 010C     switch (right) {
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 010D     case 0 :
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 010E     left=1;
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 010F     break;
;PCODE: $00000276 VOL: 0
; 0000 0110     case 1 :
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
; 0000 0111     left=2;
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 0112     break;
;PCODE: $0000027C VOL: 0
; 0000 0113     };
;PCODE: $0000027D VOL: 0
; 0000 0114 }
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0117 {
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 0118 checkTimeForClock();
;PCODE: $00000283 VOL: 0
; 0000 0119 blinkNumberChangeTimer();
;PCODE: $00000284 VOL: 0
; 0000 011A TCNT1H=0x9E58 >> 8;
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 011B TCNT1L=0x9E58 & 0xff;
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 011C }
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 011F {
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 0120     blinkNumber();
;PCODE: $0000028E VOL: 0
; 0000 0121 }
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;
;interrupt [TIM2_COMP] void timer2_comp_isr(void)
; 0000 0124 {
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 0125     changePositionNumber(0);
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 0126 }
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;
;void brightness(unsigned char timeBR){
; 0000 0128 void brightness(unsigned char timeBR){
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 0129     unsigned char temp=0;
; 0000 012A     OCR2=0;
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;	timeBR -> Y+1
;	temp -> R17
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 012B     timeBR=(timeBR*255)/100  ;
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 012C     for(temp=0;temp<timeBR;temp++){
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 012D         if(OCR2<255){
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 012E          OCR2= OCR2+1;
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 012F         }}
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 0130 }
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;
;void blinkNumberChangeTimer(){
; 0000 0132 void blinkNumberChangeTimer(){
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 0133     if(blinkNumberChageState){
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0134     if(counterBlinkNumber<1){
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 0135     counterBlinkNumber++;
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 0136     switch (seqNumber)
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 0137     {
; 0000 0138     case 1:
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 0139         portEnable[1]=0; portEnable[2]=0;
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0000 013A         break;
;PCODE: $000002D7 VOL: 0
; 0000 013B     case 2 :
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 013C         portEnable[3]=0; portEnable[4]=0;
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 013D     break;
;PCODE: $000002E1 VOL: 0
; 0000 013E     }
;PCODE: $000002E2 VOL: 0
; 0000 013F     } else{if(counterBlinkNumber<4){
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 0140         counterBlinkNumber++;
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 0141     switch (seqNumber)
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
; 0000 0142     {
; 0000 0143     case 1:
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 0144         portEnable[1]=1; portEnable[2]=1;
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 0145         break;
;PCODE: $000002F5 VOL: 0
; 0000 0146     case 2 :
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 0147         portEnable[3]=1; portEnable[4]=1;
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 0148     break;
;PCODE: $000002FF VOL: 0
; 0000 0149     }
;PCODE: $00000300 VOL: 0
; 0000 014A     }else{counterBlinkNumber=0;}}}
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 014B }
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;
;void blinkEditNumber(unsigned char seqNu){
; 0000 014D void blinkEditNumber(unsigned char seqNu){
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0000 014E     if(blinkNumberChageState){
;PCODE: $0000030C VOL: 0
;	seqNu -> Y+0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 014F         stopCounterTimer();
;PCODE: $00000310 VOL: 0
; 0000 0150         blinkNumberChageState=0;
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
; 0000 0151         portEnable[1]=1; portEnable[2]=1;
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 0152         portEnable[3]=1; portEnable[4]=1;
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
; 0000 0153     }
; 0000 0154     if(seqNu>0){
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
; 0000 0155     seqNumber = seqNu ;
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 0156     startCounterTimer();
;PCODE: $00000325 VOL: 0
; 0000 0157     blinkNumberChageState=1;
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0000 0158         }
; 0000 0159     }
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;
;void showClock(){
; 0000 015B void showClock(){
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0000 015C     rtc_get_time(&h,&m,&s);
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 015D     if(alarmSet==1|alarmSet==2){
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
; 0000 015E         if(alHour==h & alMinute==m ){
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
; 0000 015F         runnigState=ALARM;
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0000 0160         if(alarmSet==1)alarmSet=0;
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 0161         }}
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
; 0000 0162   if(clock){
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0000 0163     showTwoNumber(h,1);
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 0164     showTwoNumber(m,2);
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
; 0000 0165     }
; 0000 0166 }
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;void playAlarm(){
; 0000 0167 void playAlarm(){
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
; 0000 0168     showTwoNumber(alHour,1);
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
; 0000 0169     showTwoNumber(alMinute,2);
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
; 0000 016A     runnigState = HOME;
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
; 0000 016B     stopClock(100);
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
; 0000 016C     buzzer(1000);
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 016D }
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;void exitMenu(){
; 0000 016E void exitMenu(){
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 016F         runnigState=HOME;
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 0170         menuPosition = SETTIME;
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
; 0000 0171         click=0;
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 0172       blinkEditNumber(0);
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 0173 }
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;void showStringClock(){
; 0000 0174 void showStringClock(){
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 0175        showOneNumber('c',1);
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
; 0000 0176        showOneNumber('l',2);
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 0177        showOneNumber('o',3);
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 0178        showOneNumber('c',4);
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
; 0000 0179 }
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;void showStringExit(){
; 0000 017A void showStringExit(){
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
; 0000 017B        showOneNumber('e',1);
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
; 0000 017C        showOneNumber('x',2);
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0000 017D        showOneNumber('i',3);
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 017E        showOneNumber('t',4);
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 017F }
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;void showStringAlarm(){
; 0000 0180 void showStringAlarm(){
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 0181        showOneNumber('a',1);
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
; 0000 0182        showOneNumber('l',2);
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 0183        showOneNumber('a',3);
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
; 0000 0184        showOneNumber('r',4);
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 0185 }
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;void showStringBrightness(){
; 0000 0186 void showStringBrightness(){
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 0187        showOneNumber('b',1);
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
; 0000 0188        showOneNumber('r',2);
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 0189        showOneNumber('i',3);
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 018A        showOneNumber(9,4);
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
; 0000 018B }
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;void showStringOne(){
; 0000 018C void showStringOne(){
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0000 018D     showOneNumber('o',2);
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
; 0000 018E     showOneNumber('n',3);
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 018F     showOneNumber('e',4);
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 0190 }
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;void showStringOff(){
; 0000 0191 void showStringOff(){
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
; 0000 0192     showOneNumber('.',1);
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
; 0000 0193     showOneNumber('o',2);
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 0194     showOneNumber('f',3);
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0000 0195     showOneNumber('f',4);
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
; 0000 0196 }
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;void showStringBip(){
; 0000 0197 void showStringBip(){
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 0198     showOneNumber('.',1);
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
; 0000 0199     showOneNumber('b',2);
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
; 0000 019A     showOneNumber('i',3);
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
; 0000 019B     showOneNumber('p',4);
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
; 0000 019C }
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;void showStringEvery(){
; 0000 019D void showStringEvery(){
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
; 0000 019E     showOneNumber('e',1);
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 019F     showOneNumber('v',2);
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 01A0     showOneNumber('e',3);
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0000 01A1     showOneNumber('r',4);
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
; 0000 01A2 }
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;void setBrightnessMenu(){
; 0000 01A3 void setBrightnessMenu(){
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 01A4     click=0;
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0000 01A5     blinkEditNumber(2);
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
; 0000 01A6         while (click==0 & runnigState==MENU)
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
; 0000 01A7     {
; 0000 01A8         clickCheck();
;PCODE: $0000042F VOL: 0
; 0000 01A9         if(right1()){if(brightnessSet<99)brightnessSet++;}
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
; 0000 01AA         if(left1()){if(brightnessSet>1)brightnessSet--;}
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0000 01AB         showTwoNumber(brightnessSet,2);
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
; 0000 01AC     }
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
; 0000 01AD     brightness(brightnessSet);
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
; 0000 01AE     brightnessMem=brightnessSet;
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
; 0000 01AF     exitMenu();
;PCODE: $00000451 VOL: 0
; 0000 01B0 }
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;void setTimeMenu(){
; 0000 01B1 void setTimeMenu(){
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
; 0000 01B2     unsigned char hour=h,minute=m;
; 0000 01B3         click=0;
;PCODE: $00000456 VOL: 0
;	hour -> R17
;	minute -> R16
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
; 0000 01B4         showTwoNumber(h,1);
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
; 0000 01B5         showTwoNumber(m,2);
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
; 0000 01B6         blinkEditNumber(1);
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0000 01B7     while (click==0 & runnigState==MENU)
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
; 0000 01B8     {
; 0000 01B9         clickCheck();
;PCODE: $0000046F VOL: 0
; 0000 01BA         if(right1()){if(hour<24)hour++;}
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
; 0000 01BB         if(left1()){if(hour>0)hour--;}
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0000 01BC         showTwoNumber(hour,1);
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
; 0000 01BD     }
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0000 01BE     click=0;
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
; 0000 01BF     blinkEditNumber(2);
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
; 0000 01C0     while (click==0 & runnigState==MENU)
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
; 0000 01C1     {
; 0000 01C2         clickCheck();
;PCODE: $00000497 VOL: 0
; 0000 01C3         if(right1()){if(minute<59)minute++;}
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
; 0000 01C4         if(left1()){if(minute>0)minute--;}
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
; 0000 01C5         showTwoNumber(minute,2);
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
; 0000 01C6     }
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
; 0000 01C7     rtc_set_time(hour,minute,0);
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
; 0000 01C8     exitMenu();
;PCODE: $000004B5 VOL: 0
; 0000 01C9 }
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;void setAlarmMenu(){
; 0000 01CA void setAlarmMenu(){
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
; 0000 01CB    unsigned char alHour1=0,alMinute1=0;
; 0000 01CC    alHour1=h;alMinute1=m;
;PCODE: $000004BB VOL: 0
;	alHour1 -> R17
;	alMinute1 -> R16
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
; 0000 01CD     click=0;
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
; 0000 01CE     alarmSet=0;
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
; 0000 01CF     while (click==0 & runnigState==MENU)
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
; 0000 01D0     {   switch (alarmSet)
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
; 0000 01D1          {
; 0000 01D2         case 0:
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
; 0000 01D3         showStringOff();
;PCODE: $000004D8 VOL: 0
; 0000 01D4         if(right1()){alarmSet=1;}
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
; 0000 01D5         if(left1()){alarmSet=2;}
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
; 0000 01D6         break;
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
; 0000 01D7         case 1:
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
; 0000 01D8         showStringOne();
;PCODE: $000004EB VOL: 0
; 0000 01D9         if(right1()){alarmSet=2;}
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
; 0000 01DA         if(left1()){alarmSet=0;}
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
; 0000 01DB         break;
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
; 0000 01DC         case 2:
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
; 0000 01DD         showStringEvery();
;PCODE: $000004FE VOL: 0
; 0000 01DE         if(right1()){alarmSet=0;}
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
; 0000 01DF         if(left1()){alarmSet=1;}
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
; 0000 01E0         break;
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
; 0000 01E1         }
;PCODE: $0000050E VOL: 0
; 0000 01E2         clickCheck();
;PCODE: $0000050F VOL: 0
; 0000 01E3     }
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
; 0000 01E4         click=0;
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0000 01E5         showTwoNumber(h,1);
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
; 0000 01E6         showTwoNumber(m,2);
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
; 0000 01E7         blinkEditNumber(1);
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
; 0000 01E8     while (click==0 & runnigState==MENU)
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
; 0000 01E9     {
; 0000 01EA         clickCheck();
;PCODE: $00000526 VOL: 0
; 0000 01EB         if(right1()){if(alHour1<24)alHour1++;}
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
; 0000 01EC         if(left1()){if(alHour1>0)alHour1--;}
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
; 0000 01ED         showTwoNumber(alHour1,1);
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
; 0000 01EE     }
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
; 0000 01EF     click=0;
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
; 0000 01F0     blinkEditNumber(2);
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
; 0000 01F1     while (click==0 & runnigState==MENU)
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
; 0000 01F2     {
; 0000 01F3         clickCheck();
;PCODE: $0000054E VOL: 0
; 0000 01F4         if(right1()){if(alMinute1<59)alMinute1++;}
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
; 0000 01F5         if(left1()){if(alMinute1>0)alMinute1--;}
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
; 0000 01F6         showTwoNumber(alMinute1,2);
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
; 0000 01F7     }
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
; 0000 01F8     alHour=alHour1;alMinute=alMinute1;
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
; 0000 01F9     exitMenu();
;PCODE: $0000056E VOL: 0
; 0000 01FA }
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;void setMuteMenu(){
; 0000 01FB void setMuteMenu(){
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
; 0000 01FC 
; 0000 01FD }
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;void showMenu(){
; 0000 01FE void showMenu(){
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
; 0000 01FF     switch (menuPosition)
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
; 0000 0200     {
; 0000 0201     case SETTIME:
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
; 0000 0202         showStringClock();
;PCODE: $0000057C VOL: 0
; 0000 0203         if(click)setTimeMenu();
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
; 0000 0204         if(right1())menuPosition=SETALARM;
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
; 0000 0205         if(left1())menuPosition=EXIT;
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
; 0000 0206         break;
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
; 0000 0207     case SETALARM:
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
; 0000 0208         showStringAlarm();
;PCODE: $00000592 VOL: 0
; 0000 0209         if(click)setAlarmMenu();
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
; 0000 020A         if(right1())menuPosition=BRIGHTNESS;
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
; 0000 020B         if(left1())menuPosition=SETTIME;
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
; 0000 020C         break;
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
; 0000 020D     case BRIGHTNESS:
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
; 0000 020E         showStringBrightness();
;PCODE: $000005A8 VOL: 0
; 0000 020F         if(click)setBrightnessMenu();
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
; 0000 0210         if(right1())menuPosition=MUTE;
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
; 0000 0211         if(left1())menuPosition=SETALARM;
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
; 0000 0212         break;
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
; 0000 0213         case MUTE:
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
; 0000 0214         showStringBip();
;PCODE: $000005BE VOL: 0
; 0000 0215         if(click)setMuteMenu();
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
; 0000 0216         if(right1())menuPosition=EXIT;
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
; 0000 0217         if(left1())menuPosition=BRIGHTNESS;
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
; 0000 0218         break;
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
; 0000 0219     case EXIT:
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
; 0000 021A         showStringExit();
;PCODE: $000005D4 VOL: 0
; 0000 021B         if(click)exitMenu();
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
; 0000 021C         if(right1())menuPosition=SETTIME;
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
; 0000 021D         if(left1())menuPosition=SETALARM;
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
; 0000 021E         break;
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
; 0000 021F     }
;PCODE: $000005E7 VOL: 0
; 0000 0220 }
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;void main(void)
; 0000 0222 {
;PCODE: $000005EA VOL: 0
; 0000 0223 
; 0000 0224 portConfig();
;PCODE: $000005EB VOL: 0
; 0000 0225 startTimers();
;PCODE: $000005EC VOL: 0
; 0000 0226 startIntrupts();
;PCODE: $000005ED VOL: 0
; 0000 0227 
; 0000 0228 #asm("sei")
;PCODE: $000005EE VOL: 0
	sei
;PCODE: $000005EF VOL: 0
; 0000 0229 
; 0000 022A i2c_init();
;PCODE: $000005F0 VOL: 0
; 0000 022B rtc_init(0,0,0);
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
; 0000 022C brightness(brightnessMem);
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
; 0000 022D buzzer(500);
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
; 0000 022E brightnessSet=brightnessMem;
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
; 0000 022F 
; 0000 0230 while (1)
;PCODE: $00000600 VOL: 0
; 0000 0231       {
; 0000 0232             clickCheck();
;PCODE: $00000601 VOL: 0
; 0000 0233             switch (runnigState)
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
; 0000 0234             {
; 0000 0235             case HOME:
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
; 0000 0236             brightnessCheck();
;PCODE: $00000606 VOL: 0
; 0000 0237             showClock();
;PCODE: $00000607 VOL: 0
; 0000 0238             break;
;PCODE: $00000608 VOL: 0
; 0000 0239             case MENU:
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
; 0000 023A             showMenu();
;PCODE: $0000060C VOL: 0
; 0000 023B             break;
;PCODE: $0000060D VOL: 0
; 0000 023C             case ALARM:
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
; 0000 023D             playAlarm();
;PCODE: $00000611 VOL: 0
; 0000 023E             break;
;PCODE: $00000612 VOL: 0
; 0000 023F             }
;PCODE: $00000613 VOL: 0
; 0000 0240       }
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
; 0000 0241 }
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
;
;
;
;
;void stopTimers(){
; 0000 0246 void stopTimers(){
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
; 0000 0247 ASSR=0<<AS2;
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
; 0000 0248 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
; 0000 0249 TCNT2=0x00;
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
; 0000 024A TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
; 0000 024B }
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
;
;void startTimers(){
; 0000 024D void startTimers(){
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
; 0000 024E ASSR=0<<AS2;
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
; 0000 024F TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (1<<CS21) | (1<<CS20);
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
; 0000 0250 TCNT2=0x00;
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
; 0000 0251 OCR2=0xff;
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
; 0000 0252 TIMSK=(1<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<TOIE0);
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
; 0000 0253 }
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;
;void startCounterTimer(){
; 0000 0255 void startCounterTimer(){
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
; 0000 0256 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
; 0000 0257 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
; 0000 0258 TCNT1H=0x9E;
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
; 0000 0259 TCNT1L=0x58;
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
; 0000 025A ICR1H=0x00;
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
; 0000 025B ICR1L=0x00;
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
; 0000 025C OCR1AH=0x00;
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
; 0000 025D OCR1AL=0x00;
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
; 0000 025E OCR1BH=0x00;
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
; 0000 025F OCR1BL=0x00;
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
; 0000 0260 }
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
;
;void stopCounterTimer(){
; 0000 0262 void stopCounterTimer(){
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
; 0000 0263 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
; 0000 0264 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
; 0000 0265 TCNT1H=0x00;
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
; 0000 0266 TCNT1L=0x00;
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
; 0000 0267 ICR1H=0x00;
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
; 0000 0268 ICR1L=0x00;
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
; 0000 0269 OCR1AH=0x00;
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
; 0000 026A OCR1AL=0x00;
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
; 0000 026B OCR1BH=0x00;
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
; 0000 026C OCR1BL=0x00;
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
; 0000 026D }
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;
;void startIntrupts(){
; 0000 026F void startIntrupts(){
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
; 0000 0270 GICR|=(1<<INT1) | (1<<INT0);
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
; 0000 0271 MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
; 0000 0272 GIFR=(1<<INTF1) | (1<<INTF0);
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
; 0000 0273 }
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
;
;void stopIntrupts(){
; 0000 0275 void stopIntrupts(){
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
; 0000 0276  GICR|=(0<<INT1) | (0<<INT0);
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
; 0000 0277 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
; 0000 0278 GIFR=(0<<INTF1) | (0<<INTF0);
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
; 0000 0279 }
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;
;void portConfig(){
; 0000 027B void portConfig(){
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
; 0000 027C DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
; 0000 027D PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
; 0000 027E DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
; 0000 027F PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
; 0000 0280 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (1<<DDD1) | (0<<DDD0);
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
; 0000 0281 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (0<<PORTD1) | (1<<PORTD0);
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
; 0000 0282 }
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
