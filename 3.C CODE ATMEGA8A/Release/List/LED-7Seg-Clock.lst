
AVRASM ver. 2.1.30  C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm Mon Aug 22 15:10:56 2022

C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1086): warning: Register r5 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1087): warning: Register r4 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1088): warning: Register r7 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1089): warning: Register r6 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1090): warning: Register r9 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1091): warning: Register r8 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1092): warning: Register r11 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1093): warning: Register r10 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1094): warning: Register r13 already defined by the .DEF directive
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1095): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega8A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8A
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _positionNumber=R5
                 	.DEF _h=R4
                 	.DEF _m=R7
                 	.DEF _s=R6
                 	.DEF _left=R9
                 	.DEF _right=R8
                 	.DEF _timedisabeHomeTemp=R11
                 	.DEF _runnigState=R10
                 	.DEF _menuPosition=R13
                 	.DEF _clickState=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c032      	RJMP __RESET
000001 c2f8      	RJMP _ext_int0_isr
000002 c303      	RJMP _ext_int1_isr
000003 c319      	RJMP _timer2_comp_isr
000004 c315      	RJMP _timer2_ovf_isr
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 c309      	RJMP _timer1_ovf_isr
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G101:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G101:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00001c 0100
00001d 0000      	.DB  0x0,0x1,0x0,0x0
00001e 0000
00001f 0000      	.DB  0x0,0x0,0x0,0x0
000020 0400      	.DB  0x0,0x4
                 
                 _0x3:
000021 0101
000022 0101
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1137): warning: .cseg .db misalignment - padding zero byte
000023 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0x4:
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1139): warning: .cseg .db misalignment - padding zero byte
000024 0063      	.DB  0x63
                 _0x5:
C:\Users\Int2980\My Drive\atmega8a\Release\List\LED-7Seg-Clock.asm(1141): warning: .cseg .db misalignment - padding zero byte
000025 003c      	.DB  0x3C
                 
                 __GLOBAL_INI_TBL:
000026 000a      	.DW  0x0A
000027 0004      	.DW  0x04
000028 0038      	.DW  __REG_VARS*2
                 
000029 0005      	.DW  0x05
00002a 0168      	.DW  _portEnable
00002b 0042      	.DW  _0x3*2
                 
00002c 0001      	.DW  0x01
00002d 016d      	.DW  _brightnessSet
00002e 0048      	.DW  _0x4*2
                 
00002f 0001      	.DW  0x01
000030 0173      	.DW  _tempSecondBip
000031 004a      	.DW  _0x5*2
                 
                 _0xFFFFFFFF:
000032 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000033 94f8      	CLI
000034 27ee      	CLR  R30
000035 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000036 e0f1      	LDI  R31,1
000037 bffb      	OUT  GICR,R31
000038 bfeb      	OUT  GICR,R30
000039 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00003a e08d      	LDI  R24,(14-2)+1
00003b e0a2      	LDI  R26,2
00003c 27bb      	CLR  R27
                 __CLEAR_REG:
00003d 93ed      	ST   X+,R30
00003e 958a      	DEC  R24
00003f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000040 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000041 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000042 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000043 93ed      	ST   X+,R30
000044 9701      	SBIW R24,1
000045 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000046 e4ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000047 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000048 9185      	LPM  R24,Z+
000049 9195      	LPM  R25,Z+
00004a 9700      	SBIW R24,0
00004b f061      	BREQ __GLOBAL_INI_END
00004c 91a5      	LPM  R26,Z+
00004d 91b5      	LPM  R27,Z+
00004e 9005      	LPM  R0,Z+
00004f 9015      	LPM  R1,Z+
000050 01bf      	MOVW R22,R30
000051 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000052 9005      	LPM  R0,Z+
000053 920d      	ST   X+,R0
000054 9701      	SBIW R24,1
000055 f7e1      	BRNE __GLOBAL_INI_LOOP
000056 01fb      	MOVW R30,R22
000057 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000058 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000059 bfed      	OUT  SPL,R30
00005a e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005c e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005d e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005e c604      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <i2c.h>
                 ;#include <ds1307.h>
                 ;#include <stdio.h>
                 ;
                 ;#define alarmTime 9 // means 4.5 second
                 ;#define exitMenuTime 32000 //means about  second
                 ;#define dateShowOffTime 8000 //means about 7 second
                 ;#define dateShowOnTime 5 //means about 1 second
                 ;#define fastEditBrightnessTimeon 5 //means about 1 second
                 ;#define buzzerPin PORTD.1
                 ;#define sevenSegmentPins PORTB
                 ;#define clickPin !PIND.0
                 ;#define fastEditBrightnessMultiple 5 //means 5 percent change
                 ;#define blinkWhenChangeNumberTimeOn 4
                 ;#define blinkWhenChangeNumberTimeOff 1
                 ;
                 ;eeprom unsigned char alMinute,alHour,brightnessMem,alarmSet,muteState1;
                 ;
                 ;enum commandType
                 ;{
                 ;    HOME ,
                 ;    BRIGHTNESSHOME ,
                 ;    SHOWDATE ,
                 ;    MENU ,
                 ;    SETTIME ,
                 ;    SETDATE ,
                 ;    SETALARM ,
                 ;    EXIT,
                 ;    BRIGHTNESS,
                 ;    ALARM,
                 ;    MUTE,
                 ;    SUM,
                 ;    MINUS ,
                 ;    ON ,
                 ;    OFF,
                 ;    CLOCK ,
                 ;    ONE ,
                 ;    BIP ,
                 ;    EVER
                 ;};
                 ;
                 ;unsigned char positionNumber=1,segmentPinState[4],h=0,m=0,s=0,left=0,right=0,timedisabeHomeTemp=0,runnigState=HOME,menuP ...
                 ;unsigned char counterBlinkNumber=0,blinkNumberChageState=0,portEnable[5]={1,1,1,1,1},brightnessSet=99,muteState=0,ym=0,m ...
                 
                 	.DSEG
                 ;int ys=0,ms=0,ds=0,counterSecondTime=0;
                 ;
                 ;void brightness(unsigned char timeBR);
                 ;void portConfig();
                 ;void stopIntrupts();
                 ;void startIntrupts();
                 ;void startTimers();
                 ;void stopTimers() ;
                 ;void backToHome(unsigned char timeStop);
                 ;void startCounterTimer();
                 ;void stopCounterTimer();
                 ;void fastEditBrightness(unsigned char addOrMinus);
                 ;void blinkNumberChangeTimer();
                 ;void digitalWritePortC (unsigned char portNumber);
                 ;void buzzer(unsigned int timeBuzz,unsigned int timeSleep);
                 ;
                 ;void dotBlink(unsigned char state){
                 ; 0000 003E void dotBlink(unsigned char state){
                 
                 	.CSEG
                 _dotBlink:
                 ; .FSTART _dotBlink
                 ; 0000 003F     switch (state)
00005f d6c8      	RCALL SUBOPT_0x0
                 ;	state -> Y+0
                 ; 0000 0040     {
                 ; 0000 0041     case OFF:
000060 30ee      	CPI  R30,LOW(0xE)
000061 e0a0      	LDI  R26,HIGH(0xE)
000062 07fa      	CPC  R31,R26
000063 f421      	BRNE _0x9
                 ; 0000 0042         rtc_write(0x07,0x00);
000064 e0e7      	LDI  R30,LOW(7)
000065 93ea      	ST   -Y,R30
000066 e0a0      	LDI  R26,LOW(0)
000067 c007      	RJMP _0x140
                 ; 0000 0043         break;
                 ; 0000 0044     case ON:
                 _0x9:
000068 30ed      	CPI  R30,LOW(0xD)
000069 e0a0      	LDI  R26,HIGH(0xD)
00006a 07fa      	CPC  R31,R26
00006b f421      	BRNE _0x8
                 ; 0000 0045         rtc_write(0x07,0x10);
00006c e0e7      	LDI  R30,LOW(7)
00006d 93ea      	ST   -Y,R30
00006e e1a0      	LDI  R26,LOW(16)
                 _0x140:
00006f d652      	RCALL _rtc_write
                 ; 0000 0046         break;
                 ; 0000 0047     }}
                 _0x8:
000070 c42d      	RJMP _0x20A0009
                 ; .FEND
                 ;int m2s(int ym,int mm,int dm,int *ys,int *ms,int *ds)
                 ; 0000 0049 {
                 _m2s:
                 ; .FSTART _m2s
                 ; 0000 004A unsigned long int ys1,ym1;
                 ; 0000 004B int ym2,ys2,mm1,ms1,k,ms0;
                 ; 0000 004C ym1=ym+2000;
000071 d6ba      	RCALL SUBOPT_0x1
000072 972e      	SBIW R28,14
000073 d939      	RCALL __SAVELOCR6
                 ;	ym -> Y+30
                 ;	mm -> Y+28
                 ;	dm -> Y+26
                 ;	*ys -> Y+24
                 ;	*ms -> Y+22
                 ;	*ds -> Y+20
                 ;	ys1 -> Y+16
                 ;	ym1 -> Y+12
                 ;	ym2 -> R16,R17
                 ;	ys2 -> R18,R19
                 ;	mm1 -> R20,R21
                 ;	ms1 -> Y+10
                 ;	k -> Y+8
                 ;	ms0 -> Y+6
000074 d6ba      	RCALL SUBOPT_0x2
000075 d6be      	RCALL SUBOPT_0x3
000076 d6bf      	RCALL SUBOPT_0x4
                 ; 0000 004D k=ym1%4;
000077 85ec      	LDD  R30,Y+12
000078 85fd      	LDD  R31,Y+12+1
000079 70e3      	ANDI R30,LOW(0x3)
00007a 70f0      	ANDI R31,HIGH(0x3)
00007b 87e8      	STD  Y+8,R30
00007c 87f9      	STD  Y+8+1,R31
                 ; 0000 004E ym1--;
00007d d6bd      	RCALL SUBOPT_0x5
00007e 9731      	SBIW R30,1
00007f 4060      	SBCI R22,0
000080 4070      	SBCI R23,0
000081 d6b4      	RCALL SUBOPT_0x4
                 ; 0000 004F ym1=ym1*365;
000082 d6b8      	RCALL SUBOPT_0x5
                +
000083 e6ad     +LDI R26 , LOW ( 0x16D )
000084 e0b1     +LDI R27 , HIGH ( 0x16D )
000085 e080     +LDI R24 , BYTE3 ( 0x16D )
000086 e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
000087 d883      	RCALL __MULD12U
000088 d6ad      	RCALL SUBOPT_0x4
                 ; 0000 0050 if(mm==1){mm1=0;}
000089 d6b6      	RCALL SUBOPT_0x6
00008a 9711      	SBIW R26,1
00008b f411      	BRNE _0xB
                +
00008c e040     +LDI R20 , LOW ( 0 )
00008d e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 0051 if(mm==2){mm1=31;}
                 _0xB:
00008e d6b1      	RCALL SUBOPT_0x6
00008f 9712      	SBIW R26,2
000090 f411      	BRNE _0xC
                +
000091 e14f     +LDI R20 , LOW ( 31 )
000092 e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
                 ; 0000 0052 if(mm==3){mm1=59;}
                 _0xC:
000093 d6ac      	RCALL SUBOPT_0x6
000094 9713      	SBIW R26,3
000095 f411      	BRNE _0xD
                +
000096 e34b     +LDI R20 , LOW ( 59 )
000097 e050     +LDI R21 , HIGH ( 59 )
                 	__GETWRN 20,21,59
                 ; 0000 0053 if(mm==4){mm1=90;}
                 _0xD:
000098 d6a7      	RCALL SUBOPT_0x6
000099 9714      	SBIW R26,4
00009a f411      	BRNE _0xE
                +
00009b e54a     +LDI R20 , LOW ( 90 )
00009c e050     +LDI R21 , HIGH ( 90 )
                 	__GETWRN 20,21,90
                 ; 0000 0054 if(mm==5){mm1=120;}
                 _0xE:
00009d d6a2      	RCALL SUBOPT_0x6
00009e 9715      	SBIW R26,5
00009f f411      	BRNE _0xF
                +
0000a0 e748     +LDI R20 , LOW ( 120 )
0000a1 e050     +LDI R21 , HIGH ( 120 )
                 	__GETWRN 20,21,120
                 ; 0000 0055 if(mm==6){mm1=151;}
                 _0xF:
0000a2 d69d      	RCALL SUBOPT_0x6
0000a3 9716      	SBIW R26,6
0000a4 f411      	BRNE _0x10
                +
0000a5 e947     +LDI R20 , LOW ( 151 )
0000a6 e050     +LDI R21 , HIGH ( 151 )
                 	__GETWRN 20,21,151
                 ; 0000 0056 if(mm==7){mm1=181;}
                 _0x10:
0000a7 d698      	RCALL SUBOPT_0x6
0000a8 9717      	SBIW R26,7
0000a9 f411      	BRNE _0x11
                +
0000aa eb45     +LDI R20 , LOW ( 181 )
0000ab e050     +LDI R21 , HIGH ( 181 )
                 	__GETWRN 20,21,181
                 ; 0000 0057 if(mm==8){mm1=212;}
                 _0x11:
0000ac d693      	RCALL SUBOPT_0x6
0000ad 9718      	SBIW R26,8
0000ae f411      	BRNE _0x12
                +
0000af ed44     +LDI R20 , LOW ( 212 )
0000b0 e050     +LDI R21 , HIGH ( 212 )
                 	__GETWRN 20,21,212
                 ; 0000 0058 if(mm==9){mm1=243;}
                 _0x12:
0000b1 d68e      	RCALL SUBOPT_0x6
0000b2 9719      	SBIW R26,9
0000b3 f411      	BRNE _0x13
                +
0000b4 ef43     +LDI R20 , LOW ( 243 )
0000b5 e050     +LDI R21 , HIGH ( 243 )
                 	__GETWRN 20,21,243
                 ; 0000 0059 if(mm==10){mm1=273;}
                 _0x13:
0000b6 d689      	RCALL SUBOPT_0x6
0000b7 971a      	SBIW R26,10
0000b8 f411      	BRNE _0x14
                +
0000b9 e141     +LDI R20 , LOW ( 273 )
0000ba e051     +LDI R21 , HIGH ( 273 )
                 	__GETWRN 20,21,273
                 ; 0000 005A if(mm==11){mm1=304;}
                 _0x14:
0000bb d684      	RCALL SUBOPT_0x6
0000bc 971b      	SBIW R26,11
0000bd f411      	BRNE _0x15
                +
0000be e340     +LDI R20 , LOW ( 304 )
0000bf e051     +LDI R21 , HIGH ( 304 )
                 	__GETWRN 20,21,304
                 ; 0000 005B if(mm==12){mm1=334;}
                 _0x15:
0000c0 d67f      	RCALL SUBOPT_0x6
0000c1 971c      	SBIW R26,12
0000c2 f411      	BRNE _0x16
                +
0000c3 e44e     +LDI R20 , LOW ( 334 )
0000c4 e051     +LDI R21 , HIGH ( 334 )
                 	__GETWRN 20,21,334
                 ; 0000 005C if(k==0){mm1++;}
                 _0x16:
0000c5 85e8      	LDD  R30,Y+8
0000c6 85f9      	LDD  R31,Y+8+1
0000c7 9730      	SBIW R30,0
0000c8 f411      	BRNE _0x17
                +
0000c9 5f4f     +SUBI R20 , LOW ( - 1 )
0000ca 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0000 005D ym1=ym1+mm1;
                 _0x17:
0000cb 01fa      	MOVW R30,R20
0000cc d676      	RCALL SUBOPT_0x7
                 ; 0000 005E ym1=ym1+dm;
0000cd 8dea      	LDD  R30,Y+26
0000ce 8dfb      	LDD  R31,Y+26+1
0000cf d673      	RCALL SUBOPT_0x7
                 ; 0000 005F ym2=ym+2000;
0000d0 d65e      	RCALL SUBOPT_0x2
0000d1 018f      	MOVW R16,R30
                 ; 0000 0060 ym2--;
                +
0000d2 5001     +SUBI R16 , LOW ( 1 )
0000d3 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 0061 ym2=ym2/4;
0000d4 01d8      	MOVW R26,R16
0000d5 e0e4      	LDI  R30,LOW(4)
0000d6 e0f0      	LDI  R31,HIGH(4)
0000d7 d866      	RCALL __DIVW21
0000d8 018f      	MOVW R16,R30
                 ; 0000 0062 ym1=ym1+ym2;
0000d9 d669      	RCALL SUBOPT_0x7
                 ; 0000 0063 ym1=ym1-226899;
0000da d660      	RCALL SUBOPT_0x5
                +
0000db 55e3     +SUBI R30 , LOW ( 226899 )
0000dc 47f6     +SBCI R31 , HIGH ( 226899 )
0000dd 4063     +SBCI R22 , BYTE3 ( 226899 )
0000de 4070     +SBCI R23 , BYTE4 ( 226899 )
                 	__SUBD1N 226899
0000df d656      	RCALL SUBOPT_0x4
                 ; 0000 0064 ys2=ym2-155;
0000e0 01f8      	MOVW R30,R16
0000e1 59eb      	SUBI R30,LOW(155)
0000e2 40f0      	SBCI R31,HIGH(155)
0000e3 019f      	MOVW R18,R30
                 ; 0000 0065 ys1=ym1-ys2;
                +
0000e4 85ac     +LDD R26 , Y + 12
0000e5 85bd     +LDD R27 , Y + 12 + 1
0000e6 858e     +LDD R24 , Y + 12 + 2
0000e7 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0000e8 d64b      	RCALL SUBOPT_0x3
0000e9 d804      	RCALL __SUBD21
                +
0000ea 8ba8     +STD Y + 16 , R26
0000eb 8bb9     +STD Y + 16 + 1 , R27
0000ec 8b8a     +STD Y + 16 + 2 , R24
0000ed 8b9b     +STD Y + 16 + 3 , R25
                 	__PUTD2S 16
                 ; 0000 0066 *ys=ys1/365;
0000ee d65b      	RCALL SUBOPT_0x8
0000ef d853      	RCALL __DIVD21U
0000f0 d662      	RCALL SUBOPT_0x9
0000f1 d664      	RCALL SUBOPT_0xA
                 ; 0000 0067 *ys=*ys-1299;
0000f2 d660      	RCALL SUBOPT_0x9
0000f3 d894      	RCALL __GETW1P
0000f4 51e3      	SUBI R30,LOW(1299)
0000f5 40f5      	SBCI R31,HIGH(1299)
0000f6 d65c      	RCALL SUBOPT_0x9
0000f7 d65e      	RCALL SUBOPT_0xA
                 ; 0000 0068 ms1=ys1%365;
0000f8 d651      	RCALL SUBOPT_0x8
0000f9 d87c      	RCALL __MODD21U
0000fa d65e      	RCALL SUBOPT_0xB
                 ; 0000 0069 ms0=1;
0000fb e0e1      	LDI  R30,LOW(1)
0000fc e0f0      	LDI  R31,HIGH(1)
0000fd d65e      	RCALL SUBOPT_0xC
                 ; 0000 006A if(ms1>31){ms0++;ms1=ms1-31;}
0000fe d660      	RCALL SUBOPT_0xD
0000ff f00c      	BRLT _0x18
000100 d662      	RCALL SUBOPT_0xE
                 ; 0000 006B if(ms1>31){ms0++;ms1=ms1-31;}
                 _0x18:
000101 d65d      	RCALL SUBOPT_0xD
000102 f00c      	BRLT _0x19
000103 d65f      	RCALL SUBOPT_0xE
                 ; 0000 006C if(ms1>31){ms0++;ms1=ms1-31;}
                 _0x19:
000104 d65a      	RCALL SUBOPT_0xD
000105 f00c      	BRLT _0x1A
000106 d65c      	RCALL SUBOPT_0xE
                 ; 0000 006D if(ms1>31){ms0++;ms1=ms1-31;}
                 _0x1A:
000107 d657      	RCALL SUBOPT_0xD
000108 f00c      	BRLT _0x1B
000109 d659      	RCALL SUBOPT_0xE
                 ; 0000 006E if(ms1>31){ms0++;ms1=ms1-31;}
                 _0x1B:
00010a d654      	RCALL SUBOPT_0xD
00010b f00c      	BRLT _0x1C
00010c d656      	RCALL SUBOPT_0xE
                 ; 0000 006F if(ms1>31){ms0++;ms1=ms1-31;}
                 _0x1C:
00010d d651      	RCALL SUBOPT_0xD
00010e f00c      	BRLT _0x1D
00010f d653      	RCALL SUBOPT_0xE
                 ; 0000 0070 if(ms1>30){ms0++;ms1=ms1-30;}
                 _0x1D:
000110 d65a      	RCALL SUBOPT_0xF
000111 f00c      	BRLT _0x1E
000112 d65c      	RCALL SUBOPT_0x10
                 ; 0000 0071 if(ms1>30){ms0++;ms1=ms1-30;}
                 _0x1E:
000113 d657      	RCALL SUBOPT_0xF
000114 f00c      	BRLT _0x1F
000115 d659      	RCALL SUBOPT_0x10
                 ; 0000 0072 if(ms1>30){ms0++;ms1=ms1-30;}
                 _0x1F:
000116 d654      	RCALL SUBOPT_0xF
000117 f00c      	BRLT _0x20
000118 d656      	RCALL SUBOPT_0x10
                 ; 0000 0073 if(ms1>30){ms0++;ms1=ms1-30;}
                 _0x20:
000119 d651      	RCALL SUBOPT_0xF
00011a f00c      	BRLT _0x21
00011b d653      	RCALL SUBOPT_0x10
                 ; 0000 0074 if(ms1>30){ms0++;ms1=ms1-30;}
                 _0x21:
00011c d64e      	RCALL SUBOPT_0xF
00011d f00c      	BRLT _0x22
00011e d650      	RCALL SUBOPT_0x10
                 ; 0000 0075 *ds=ms1;
                 _0x22:
00011f 85ea      	LDD  R30,Y+10
000120 85fb      	LDD  R31,Y+10+1
000121 89ac      	LDD  R26,Y+20
000122 89bd      	LDD  R27,Y+20+1
000123 d632      	RCALL SUBOPT_0xA
                 ; 0000 0076 *ms=ms0;
000124 81ee      	LDD  R30,Y+6
000125 81ff      	LDD  R31,Y+6+1
000126 89ae      	LDD  R26,Y+22
000127 89bf      	LDD  R27,Y+22+1
000128 d62d      	RCALL SUBOPT_0xA
                 ; 0000 0077 return *ys;
000129 d629      	RCALL SUBOPT_0x9
                 ; 0000 0078 return *ms;
                 ; 0000 0079 return *ds;
                 _0x20A000C:
00012a d85d      	RCALL __GETW1P
00012b d888      	RCALL __LOADLOCR6
00012c 96a0      	ADIW R28,32
00012d 9508      	RET
                 ; 0000 007A }
                 ; .FEND
                 ;void buzzer(unsigned int timeBuzz,unsigned int timeSleep){
                 ; 0000 007B void buzzer(unsigned int timeBuzz,unsigned int timeSleep){
                 _buzzer:
                 ; .FSTART _buzzer
                 ; 0000 007C if(muteState1){buzzerPin=1;
00012e d5fd      	RCALL SUBOPT_0x1
                 ;	timeBuzz -> Y+2
                 ;	timeSleep -> Y+0
00012f e0a4      	LDI  R26,LOW(_muteState1)
000130 e0b0      	LDI  R27,HIGH(_muteState1)
000131 d85a      	RCALL __EEPROMRDB
000132 30e0      	CPI  R30,0
000133 f051      	BREQ _0x23
000134 9a91      	SBI  0x12,1
                 ; 0000 007D delay_ms(timeBuzz);
000135 81aa      	LDD  R26,Y+2
000136 81bb      	LDD  R27,Y+2+1
000137 d7a7      	RCALL _delay_ms
                 ; 0000 007E buzzerPin=0;
000138 9891      	CBI  0x12,1
                 ; 0000 007F if(timeSleep>0)delay_ms(timeSleep);
000139 d63d      	RCALL SUBOPT_0x11
00013a d86e      	RCALL __CPW02
00013b f410      	BRSH _0x28
00013c d63a      	RCALL SUBOPT_0x11
00013d d7a1      	RCALL _delay_ms
                 ; 0000 0080 }}
                 _0x28:
                 _0x23:
00013e c5d0      	RJMP _0x20A0001
                 ; .FEND
                 ;void changePositionNumber(unsigned char position){
                 ; 0000 0081 void changePositionNumber(unsigned char position){
                 _changePositionNumber:
                 ; .FSTART _changePositionNumber
                 ; 0000 0082 PORTC=PORTC&0xf0;
00013f 93aa      	ST   -Y,R26
                 ;	position -> Y+0
000140 b3e5      	IN   R30,0x15
000141 7fe0      	ANDI R30,LOW(0xF0)
000142 bbe5      	OUT  0x15,R30
                 ; 0000 0083  switch (position) {
000143 d636      	RCALL SUBOPT_0x12
                 ; 0000 0084     case 1 :
000144 f411      	BRNE _0x2C
                 ; 0000 0085     digitalWritePortC(1);
000145 e0a1      	LDI  R26,LOW(1)
000146 c00b      	RJMP _0x141
                 ; 0000 0086     break;
                 ; 0000 0087     case 2 :
                 _0x2C:
000147 d638      	RCALL SUBOPT_0x13
000148 f411      	BRNE _0x2D
                 ; 0000 0088     digitalWritePortC(2);
000149 e0a2      	LDI  R26,LOW(2)
00014a c007      	RJMP _0x141
                 ; 0000 0089     break;
                 ; 0000 008A     case 3 :
                 _0x2D:
00014b d638      	RCALL SUBOPT_0x14
00014c f411      	BRNE _0x2E
                 ; 0000 008B     digitalWritePortC(3);
00014d e0a3      	LDI  R26,LOW(3)
00014e c003      	RJMP _0x141
                 ; 0000 008C     break;
                 ; 0000 008D     case 4 :
                 _0x2E:
00014f d638      	RCALL SUBOPT_0x15
000150 f411      	BRNE _0x2B
                 ; 0000 008E     digitalWritePortC(4);
000151 e0a4      	LDI  R26,LOW(4)
                 _0x141:
000152 d001      	RCALL _digitalWritePortC
                 ; 0000 008F     break;
                 ; 0000 0090     };
                 _0x2B:
                 ; 0000 0091 }
000153 c34a      	RJMP _0x20A0009
                 ; .FEND
                 ;void digitalWritePortC (unsigned char portNumber){
                 ; 0000 0092 void digitalWritePortC (unsigned char portNumber){
                 _digitalWritePortC:
                 ; .FSTART _digitalWritePortC
                 ; 0000 0093      switch (portNumber) {
000154 d5d3      	RCALL SUBOPT_0x0
                 ;	portNumber -> Y+0
                 ; 0000 0094     case 1 :
000155 d636      	RCALL SUBOPT_0x16
000156 f431      	BRNE _0x33
                 ; 0000 0095     if(portEnable[1])PORTC.0=1;
                +
000157 91e0 0169+LDS R30 , _portEnable + ( 1 )
                 	__GETB1MN _portEnable,1
000159 30e0      	CPI  R30,0
00015a f009      	BREQ _0x34
00015b 9aa8      	SBI  0x15,0
                 ; 0000 0096     break;
                 _0x34:
00015c c017      	RJMP _0x32
                 ; 0000 0097     case 2 :
                 _0x33:
00015d d622      	RCALL SUBOPT_0x13
00015e f431      	BRNE _0x37
                 ; 0000 0098     if(portEnable[2])PORTC.1=1;
                +
00015f 91e0 016a+LDS R30 , _portEnable + ( 2 )
                 	__GETB1MN _portEnable,2
000161 30e0      	CPI  R30,0
000162 f009      	BREQ _0x38
000163 9aa9      	SBI  0x15,1
                 ; 0000 0099     break;
                 _0x38:
000164 c00f      	RJMP _0x32
                 ; 0000 009A     case 3 :
                 _0x37:
000165 d61e      	RCALL SUBOPT_0x14
000166 f431      	BRNE _0x3B
                 ; 0000 009B     if(portEnable[3])PORTC.2=1;
                +
000167 91e0 016b+LDS R30 , _portEnable + ( 3 )
                 	__GETB1MN _portEnable,3
000169 30e0      	CPI  R30,0
00016a f009      	BREQ _0x3C
00016b 9aaa      	SBI  0x15,2
                 ; 0000 009C     break;
                 _0x3C:
00016c c007      	RJMP _0x32
                 ; 0000 009D     case 4 :
                 _0x3B:
00016d d61a      	RCALL SUBOPT_0x15
00016e f429      	BRNE _0x32
                 ; 0000 009E     if(portEnable[4])PORTC.3=1;
                +
00016f 91e0 016c+LDS R30 , _portEnable + ( 4 )
                 	__GETB1MN _portEnable,4
000171 30e0      	CPI  R30,0
000172 f009      	BREQ _0x40
000173 9aab      	SBI  0x15,3
                 ; 0000 009F     break;
                 _0x40:
                 ; 0000 00A0     };
                 _0x32:
                 ; 0000 00A1 }
000174 c329      	RJMP _0x20A0009
                 ; .FEND
                 ;unsigned char digitalWritePort ( unsigned char input){
                 ; 0000 00A2 unsigned char digitalWritePort ( unsigned char input){
                 _digitalWritePort:
                 ; .FSTART _digitalWritePort
                 ; 0000 00A3  switch (input) {
000175 d5b2      	RCALL SUBOPT_0x0
                 ;	input -> Y+0
                 ; 0000 00A4     case 1:
000176 d615      	RCALL SUBOPT_0x16
000177 f411      	BRNE _0x46
                 ; 0000 00A5     return 6 ;
000178 e0e6      	LDI  R30,LOW(6)
000179 c324      	RJMP _0x20A0009
                 ; 0000 00A6     case 2:
                 _0x46:
00017a d605      	RCALL SUBOPT_0x13
00017b f411      	BRNE _0x47
                 ; 0000 00A7     return 91 ;
00017c e5eb      	LDI  R30,LOW(91)
00017d c320      	RJMP _0x20A0009
                 ; 0000 00A8     case 3:
                 _0x47:
00017e d605      	RCALL SUBOPT_0x14
00017f f411      	BRNE _0x48
                 ; 0000 00A9     return 79 ;
000180 e4ef      	LDI  R30,LOW(79)
000181 c31c      	RJMP _0x20A0009
                 ; 0000 00AA     case 4:
                 _0x48:
000182 d605      	RCALL SUBOPT_0x15
000183 f411      	BRNE _0x49
                 ; 0000 00AB     return 102 ;
000184 e6e6      	LDI  R30,LOW(102)
000185 c318      	RJMP _0x20A0009
                 ; 0000 00AC     case 5:
                 _0x49:
000186 30e5      	CPI  R30,LOW(0x5)
000187 e0a0      	LDI  R26,HIGH(0x5)
000188 07fa      	CPC  R31,R26
000189 f411      	BRNE _0x4A
                 ; 0000 00AD     return 109 ;
00018a e6ed      	LDI  R30,LOW(109)
00018b c312      	RJMP _0x20A0009
                 ; 0000 00AE     case 6:
                 _0x4A:
00018c 30e6      	CPI  R30,LOW(0x6)
00018d e0a0      	LDI  R26,HIGH(0x6)
00018e 07fa      	CPC  R31,R26
00018f f411      	BRNE _0x4B
                 ; 0000 00AF     return 125 ;
000190 e7ed      	LDI  R30,LOW(125)
000191 c30c      	RJMP _0x20A0009
                 ; 0000 00B0     case 7:
                 _0x4B:
000192 d5fd      	RCALL SUBOPT_0x17
000193 f411      	BRNE _0x4C
                 ; 0000 00B1     return 7 ;
000194 e0e7      	LDI  R30,LOW(7)
000195 c308      	RJMP _0x20A0009
                 ; 0000 00B2     case 8:
                 _0x4C:
000196 d5fd      	RCALL SUBOPT_0x18
000197 f411      	BRNE _0x4D
                 ; 0000 00B3     return 127 ;
000198 e7ef      	LDI  R30,LOW(127)
000199 c304      	RJMP _0x20A0009
                 ; 0000 00B4     case 9:
                 _0x4D:
00019a d5fd      	RCALL SUBOPT_0x19
00019b f411      	BRNE _0x4E
                 ; 0000 00B5     return 111 ;
00019c e6ef      	LDI  R30,LOW(111)
00019d c300      	RJMP _0x20A0009
                 ; 0000 00B6     case 0:
                 _0x4E:
00019e 9730      	SBIW R30,0
00019f f411      	BRNE _0x4F
                 ; 0000 00B7     return 63 ;
0001a0 e3ef      	LDI  R30,LOW(63)
0001a1 c2fc      	RJMP _0x20A0009
                 ; 0000 00B8     case 'e':
                 _0x4F:
0001a2 36e5      	CPI  R30,LOW(0x65)
0001a3 e0a0      	LDI  R26,HIGH(0x65)
0001a4 07fa      	CPC  R31,R26
0001a5 f411      	BRNE _0x50
                 ; 0000 00B9     return 121 ;
0001a6 e7e9      	LDI  R30,LOW(121)
0001a7 c2f6      	RJMP _0x20A0009
                 ; 0000 00BA     case 'r':
                 _0x50:
0001a8 37e2      	CPI  R30,LOW(0x72)
0001a9 e0a0      	LDI  R26,HIGH(0x72)
0001aa 07fa      	CPC  R31,R26
0001ab f411      	BRNE _0x51
                 ; 0000 00BB     return 112 ;
0001ac e7e0      	LDI  R30,LOW(112)
0001ad c2f0      	RJMP _0x20A0009
                 ; 0000 00BC     case 'b':
                 _0x51:
0001ae 36e2      	CPI  R30,LOW(0x62)
0001af e0a0      	LDI  R26,HIGH(0x62)
0001b0 07fa      	CPC  R31,R26
0001b1 f411      	BRNE _0x52
                 ; 0000 00BD     return 124 ;
0001b2 e7ec      	LDI  R30,LOW(124)
0001b3 c2ea      	RJMP _0x20A0009
                 ; 0000 00BE     case 'p':
                 _0x52:
0001b4 37e0      	CPI  R30,LOW(0x70)
0001b5 e0a0      	LDI  R26,HIGH(0x70)
0001b6 07fa      	CPC  R31,R26
0001b7 f411      	BRNE _0x53
                 ; 0000 00BF     return 115 ;
0001b8 e7e3      	LDI  R30,LOW(115)
0001b9 c2e4      	RJMP _0x20A0009
                 ; 0000 00C0     case 'o':
                 _0x53:
0001ba 36ef      	CPI  R30,LOW(0x6F)
0001bb e0a0      	LDI  R26,HIGH(0x6F)
0001bc 07fa      	CPC  R31,R26
0001bd f411      	BRNE _0x54
                 ; 0000 00C1     return 92 ;
0001be e5ec      	LDI  R30,LOW(92)
0001bf c2de      	RJMP _0x20A0009
                 ; 0000 00C2     case 'f':
                 _0x54:
0001c0 36e6      	CPI  R30,LOW(0x66)
0001c1 e0a0      	LDI  R26,HIGH(0x66)
0001c2 07fa      	CPC  R31,R26
0001c3 f411      	BRNE _0x55
                 ; 0000 00C3     return 113 ;
0001c4 e7e1      	LDI  R30,LOW(113)
0001c5 c2d8      	RJMP _0x20A0009
                 ; 0000 00C4     case 'l':
                 _0x55:
0001c6 36ec      	CPI  R30,LOW(0x6C)
0001c7 e0a0      	LDI  R26,HIGH(0x6C)
0001c8 07fa      	CPC  R31,R26
0001c9 f411      	BRNE _0x56
                 ; 0000 00C5     return 56 ;
0001ca e3e8      	LDI  R30,LOW(56)
0001cb c2d2      	RJMP _0x20A0009
                 ; 0000 00C6     case 'c':
                 _0x56:
0001cc 36e3      	CPI  R30,LOW(0x63)
0001cd e0a0      	LDI  R26,HIGH(0x63)
0001ce 07fa      	CPC  R31,R26
0001cf f411      	BRNE _0x57
                 ; 0000 00C7     return 88 ;
0001d0 e5e8      	LDI  R30,LOW(88)
0001d1 c2cc      	RJMP _0x20A0009
                 ; 0000 00C8     case 't':
                 _0x57:
0001d2 37e4      	CPI  R30,LOW(0x74)
0001d3 e0a0      	LDI  R26,HIGH(0x74)
0001d4 07fa      	CPC  R31,R26
0001d5 f411      	BRNE _0x58
                 ; 0000 00C9     return 120 ;
0001d6 e7e8      	LDI  R30,LOW(120)
0001d7 c2c6      	RJMP _0x20A0009
                 ; 0000 00CA     case 'x':
                 _0x58:
0001d8 37e8      	CPI  R30,LOW(0x78)
0001d9 e0a0      	LDI  R26,HIGH(0x78)
0001da 07fa      	CPC  R31,R26
0001db f411      	BRNE _0x59
                 ; 0000 00CB     return 118 ;
0001dc e7e6      	LDI  R30,LOW(118)
0001dd c2c0      	RJMP _0x20A0009
                 ; 0000 00CC     case 'a':
                 _0x59:
0001de 36e1      	CPI  R30,LOW(0x61)
0001df e0a0      	LDI  R26,HIGH(0x61)
0001e0 07fa      	CPC  R31,R26
0001e1 f411      	BRNE _0x5A
                 ; 0000 00CD     return 119 ;
0001e2 e7e7      	LDI  R30,LOW(119)
0001e3 c2ba      	RJMP _0x20A0009
                 ; 0000 00CE     case 'i':
                 _0x5A:
0001e4 36e9      	CPI  R30,LOW(0x69)
0001e5 e0a0      	LDI  R26,HIGH(0x69)
0001e6 07fa      	CPC  R31,R26
0001e7 f411      	BRNE _0x5B
                 ; 0000 00CF     return 48 ;
0001e8 e3e0      	LDI  R30,LOW(48)
0001e9 c2b4      	RJMP _0x20A0009
                 ; 0000 00D0     case 'h':
                 _0x5B:
0001ea 36e8      	CPI  R30,LOW(0x68)
0001eb e0a0      	LDI  R26,HIGH(0x68)
0001ec 07fa      	CPC  R31,R26
0001ed f411      	BRNE _0x5C
                 ; 0000 00D1     return 116 ;
0001ee e7e4      	LDI  R30,LOW(116)
0001ef c2ae      	RJMP _0x20A0009
                 ; 0000 00D2     case 'v':
                 _0x5C:
0001f0 37e6      	CPI  R30,LOW(0x76)
0001f1 e0a0      	LDI  R26,HIGH(0x76)
0001f2 07fa      	CPC  R31,R26
0001f3 f411      	BRNE _0x5D
                 ; 0000 00D3     return 62 ;
0001f4 e3ee      	LDI  R30,LOW(62)
0001f5 c2a8      	RJMP _0x20A0009
                 ; 0000 00D4     case '.':
                 _0x5D:
0001f6 32ee      	CPI  R30,LOW(0x2E)
0001f7 e0a0      	LDI  R26,HIGH(0x2E)
0001f8 07fa      	CPC  R31,R26
0001f9 f411      	BRNE _0x5E
                 ; 0000 00D5     return 0 ;
0001fa e0e0      	LDI  R30,LOW(0)
0001fb c2a2      	RJMP _0x20A0009
                 ; 0000 00D6     case 'd':
                 _0x5E:
0001fc 36e4      	CPI  R30,LOW(0x64)
0001fd e0a0      	LDI  R26,HIGH(0x64)
0001fe 07fa      	CPC  R31,R26
0001ff f411      	BRNE _0x5F
                 ; 0000 00D7     return 94 ;
000200 e5ee      	LDI  R30,LOW(94)
000201 c29c      	RJMP _0x20A0009
                 ; 0000 00D8     case 'n':
                 _0x5F:
000202 36ee      	CPI  R30,LOW(0x6E)
000203 e0a0      	LDI  R26,HIGH(0x6E)
000204 07fa      	CPC  R31,R26
000205 f411      	BRNE _0x45
                 ; 0000 00D9     return 84 ;
000206 e5e4      	LDI  R30,LOW(84)
000207 c296      	RJMP _0x20A0009
                 ; 0000 00DA     };
                 _0x45:
                 ; 0000 00DB }
000208 c295      	RJMP _0x20A0009
                 ; .FEND
                 ;void showString(unsigned char counterSegment,unsigned char input,unsigned char numberSegment)
                 ; 0000 00DD {
                 _showString:
                 ; .FSTART _showString
                 ; 0000 00DE     counterSegment--;
000209 93aa      	ST   -Y,R26
                 ;	counterSegment -> Y+2
                 ;	input -> Y+1
                 ;	numberSegment -> Y+0
00020a 81ea      	LDD  R30,Y+2
00020b 50e1      	SUBI R30,LOW(1)
00020c 83ea      	STD  Y+2,R30
                 ; 0000 00DF     if(counterSegment){
00020d 30e0      	CPI  R30,0
00020e f139      	BREQ _0x61
                 ; 0000 00E0     switch (numberSegment) {
00020f d56a      	RCALL SUBOPT_0x12
                 ; 0000 00E1     case 1 :
000210 f489      	BRNE _0x65
                 ; 0000 00E2       segmentPinState[numberSegment-1]= digitalWritePort(input/10);
000211 d58a      	RCALL SUBOPT_0x1A
000212 9731      	SBIW R30,1
000213 d58b      	RCALL SUBOPT_0x1B
000214 93ff      	PUSH R31
000215 93ef      	PUSH R30
000216 d58b      	RCALL SUBOPT_0x1C
000217 91af      	POP  R26
000218 91bf      	POP  R27
000219 93ec      	ST   X,R30
                 ; 0000 00E3       segmentPinState[numberSegment]= digitalWritePort(input%10);
00021a d581      	RCALL SUBOPT_0x1A
00021b d583      	RCALL SUBOPT_0x1B
00021c 93ff      	PUSH R31
00021d 93ef      	PUSH R30
00021e d58a      	RCALL SUBOPT_0x1D
00021f 91af      	POP  R26
000220 91bf      	POP  R27
000221 c012      	RJMP _0x142
                 ; 0000 00E4     break;
                 ; 0000 00E5     case 2 :
                 _0x65:
000222 d55d      	RCALL SUBOPT_0x13
000223 f489      	BRNE _0x64
                 ; 0000 00E6       segmentPinState[numberSegment]= digitalWritePort(input/10);
000224 d577      	RCALL SUBOPT_0x1A
000225 d579      	RCALL SUBOPT_0x1B
000226 93ff      	PUSH R31
000227 93ef      	PUSH R30
000228 d579      	RCALL SUBOPT_0x1C
000229 91af      	POP  R26
00022a 91bf      	POP  R27
00022b 93ec      	ST   X,R30
                 ; 0000 00E7       segmentPinState[numberSegment+1]= digitalWritePort(input%10);
00022c d56f      	RCALL SUBOPT_0x1A
                +
00022d 59ef     +SUBI R30 , LOW ( - _segmentPinState - ( 1 ) )
00022e 4ffe     +SBCI R31 , HIGH ( - _segmentPinState - ( 1 ) )
                 	__ADDW1MN _segmentPinState,1
00022f 93ff      	PUSH R31
000230 93ef      	PUSH R30
000231 d577      	RCALL SUBOPT_0x1D
000232 91af      	POP  R26
000233 91bf      	POP  R27
                 _0x142:
000234 93ec      	ST   X,R30
                 ; 0000 00E8     break;
                 ; 0000 00E9     }; }else{
                 _0x64:
000235 c00a      	RJMP _0x67
                 _0x61:
                 ; 0000 00EA       segmentPinState[numberSegment-1]= digitalWritePort(input);
000236 d565      	RCALL SUBOPT_0x1A
000237 9731      	SBIW R30,1
000238 d566      	RCALL SUBOPT_0x1B
000239 93ff      	PUSH R31
00023a 93ef      	PUSH R30
00023b 81a9      	LDD  R26,Y+1
00023c df38      	RCALL _digitalWritePort
00023d 91af      	POP  R26
00023e 91bf      	POP  R27
00023f 93ec      	ST   X,R30
                 ; 0000 00EB     }
                 _0x67:
                 ; 0000 00EC }
000240 c4b3      	RJMP _0x20A0003
                 ; .FEND
                 ;void blinkNumber(){
                 ; 0000 00ED void blinkNumber(){
                 _blinkNumber:
                 ; .FSTART _blinkNumber
                 ; 0000 00EE     switch (positionNumber) {
000241 2de5      	MOV  R30,R5
000242 e0f0      	LDI  R31,0
                 ; 0000 00EF     case 1 :
000243 d548      	RCALL SUBOPT_0x16
000244 f429      	BRNE _0x6B
                 ; 0000 00F0      sevenSegmentPins=segmentPinState[0];
000245 91e0 0160 	LDS  R30,_segmentPinState
000247 d568      	RCALL SUBOPT_0x1E
                 ; 0000 00F1      changePositionNumber(positionNumber);
                 ; 0000 00F2     positionNumber=2;
000248 e0e2      	LDI  R30,LOW(2)
000249 c014      	RJMP _0x143
                 ; 0000 00F3     break;
                 ; 0000 00F4     case 2 :
                 _0x6B:
00024a d535      	RCALL SUBOPT_0x13
00024b f429      	BRNE _0x6C
                 ; 0000 00F5      sevenSegmentPins=segmentPinState[1];
                +
00024c 91e0 0161+LDS R30 , _segmentPinState + ( 1 )
                 	__GETB1MN _segmentPinState,1
00024e d561      	RCALL SUBOPT_0x1E
                 ; 0000 00F6      changePositionNumber(positionNumber);
                 ; 0000 00F7      positionNumber=3;
00024f e0e3      	LDI  R30,LOW(3)
000250 c00d      	RJMP _0x143
                 ; 0000 00F8     break;
                 ; 0000 00F9     case 3 :
                 _0x6C:
000251 d532      	RCALL SUBOPT_0x14
000252 f429      	BRNE _0x6D
                 ; 0000 00FA      sevenSegmentPins=segmentPinState[2];
                +
000253 91e0 0162+LDS R30 , _segmentPinState + ( 2 )
                 	__GETB1MN _segmentPinState,2
000255 d55a      	RCALL SUBOPT_0x1E
                 ; 0000 00FB      changePositionNumber(positionNumber);
                 ; 0000 00FC      positionNumber=4;
000256 e0e4      	LDI  R30,LOW(4)
000257 c006      	RJMP _0x143
                 ; 0000 00FD     break;
                 ; 0000 00FE     case 4 :
                 _0x6D:
000258 d52f      	RCALL SUBOPT_0x15
000259 f429      	BRNE _0x6A
                 ; 0000 00FF      sevenSegmentPins=segmentPinState[3];
                +
00025a 91e0 0163+LDS R30 , _segmentPinState + ( 3 )
                 	__GETB1MN _segmentPinState,3
00025c d553      	RCALL SUBOPT_0x1E
                 ; 0000 0100      changePositionNumber(positionNumber);
                 ; 0000 0101      positionNumber=1;
00025d e0e1      	LDI  R30,LOW(1)
                 _0x143:
00025e 2e5e      	MOV  R5,R30
                 ; 0000 0102     break;
                 ; 0000 0103     };
                 _0x6A:
                 ; 0000 0104     counterSecondTime++;
00025f e7aa      	LDI  R26,LOW(_counterSecondTime)
000260 e0b1      	LDI  R27,HIGH(_counterSecondTime)
000261 91ed      	LD   R30,X+
000262 91fd      	LD   R31,X+
000263 9631      	ADIW R30,1
000264 93fe      	ST   -X,R31
000265 93ee      	ST   -X,R30
                 ; 0000 0105 }
000266 9508      	RET
                 ; .FEND
                 ;void resetClickState(){
                 ; 0000 0106 void resetClickState(){
                 _resetClickState:
                 ; .FSTART _resetClickState
                 ; 0000 0107     clickState=0;
000267 24cc      	CLR  R12
                 ; 0000 0108 }
000268 9508      	RET
                 ; .FEND
                 ;void setClickState(){
                 ; 0000 0109 void setClickState(){
                 _setClickState:
                 ; .FSTART _setClickState
                 ; 0000 010A     clickState=1;
000269 e0e1      	LDI  R30,LOW(1)
00026a 2ece      	MOV  R12,R30
                 ; 0000 010B }
00026b 9508      	RET
                 ; .FEND
                 ;void resetVolume(){
                 ; 0000 010C void resetVolume(){
                 _resetVolume:
                 ; .FSTART _resetVolume
                 ; 0000 010D         right=0;left=0;
00026c 2488      	CLR  R8
00026d 2499      	CLR  R9
                 ; 0000 010E }
00026e 9508      	RET
                 ; .FEND
                 ;void resetCounterSecondTime(){
                 ; 0000 010F void resetCounterSecondTime(){
                 _resetCounterSecondTime:
                 ; .FSTART _resetCounterSecondTime
                 ; 0000 0110     counterSecondTime=0;
00026f e0e0      	LDI  R30,LOW(0)
000270 93e0 017a 	STS  _counterSecondTime,R30
000272 93e0 017b 	STS  _counterSecondTime+1,R30
                 ; 0000 0111 }
000274 9508      	RET
                 ; .FEND
                 ;void volumeCheck(){
                 ; 0000 0112 void volumeCheck(){
                 _volumeCheck:
                 ; .FSTART _volumeCheck
                 ; 0000 0113             if(clickPin){
000275 9980      	SBIC 0x10,0
000276 c00b      	RJMP _0x6F
                 ; 0000 0114             while(clickPin);
                 _0x70:
000277 9b80      	SBIS 0x10,0
000278 cffe      	RJMP _0x70
                 ; 0000 0115             buzzer(100,0);
000279 d539      	RCALL SUBOPT_0x1F
                 ; 0000 0116             setClickState();
00027a dfee      	RCALL _setClickState
                 ; 0000 0117             resetCounterSecondTime();
00027b dff3      	RCALL _resetCounterSecondTime
                 ; 0000 0118             if(runnigState==HOME){
00027c 20aa      	TST  R10
00027d f421      	BRNE _0x73
                 ; 0000 0119                 dotBlink(OFF);
00027e d53b      	RCALL SUBOPT_0x20
                 ; 0000 011A                 runnigState=MENU;
00027f e0e3      	LDI  R30,LOW(3)
000280 2eae      	MOV  R10,R30
                 ; 0000 011B                 resetClickState();
000281 dfe5      	RCALL _resetClickState
                 ; 0000 011C             }}
                 _0x73:
                 ; 0000 011D             switch (runnigState)
                 _0x6F:
000282 2dea      	MOV  R30,R10
000283 e0f0      	LDI  R31,0
                 ; 0000 011E             {
                 ; 0000 011F             case MENU :
000284 d4ff      	RCALL SUBOPT_0x14
000285 f449      	BRNE _0x77
                 ; 0000 0120                 if(counterSecondTime>exitMenuTime){
000286 d535      	RCALL SUBOPT_0x21
000287 30a1      	CPI  R26,LOW(0x7D01)
000288 e7ed      	LDI  R30,HIGH(0x7D01)
000289 07be      	CPC  R27,R30
00028a f01c      	BRLT _0x78
                 ; 0000 0121                     resetCounterSecondTime();
00028b dfe3      	RCALL _resetCounterSecondTime
                 ; 0000 0122                     runnigState=HOME;
00028c 24aa      	CLR  R10
                 ; 0000 0123                     buzzer(100,0);}
00028d d525      	RCALL SUBOPT_0x1F
                 ; 0000 0124                 break;
                 _0x78:
00028e c016      	RJMP _0x76
                 ; 0000 0125                 case HOME :
                 _0x77:
00028f 9730      	SBIW R30,0
000290 f4a1      	BRNE _0x76
                 ; 0000 0126                 if(counterSecondTime>dateShowOffTime){
000291 d52a      	RCALL SUBOPT_0x21
000292 34a1      	CPI  R26,LOW(0x1F41)
000293 e1ef      	LDI  R30,HIGH(0x1F41)
000294 07be      	CPC  R27,R30
000295 f02c      	BRLT _0x7A
                 ; 0000 0127                     runnigState=SHOWDATE;
000296 e0e2      	LDI  R30,LOW(2)
000297 2eae      	MOV  R10,R30
                 ; 0000 0128                     backToHome(dateShowOnTime);
000298 e0a5      	LDI  R26,LOW(5)
000299 d037      	RCALL _backToHome
                 ; 0000 0129                     resetCounterSecondTime();
00029a dfd4      	RCALL _resetCounterSecondTime
                 ; 0000 012A                 }
                 ; 0000 012B                if(right==2|left==2){
                 _0x7A:
00029b 2da8      	MOV  R26,R8
00029c e0e2      	LDI  R30,LOW(2)
00029d d523      	RCALL SUBOPT_0x22
00029e 2da9      	MOV  R26,R9
00029f e0e2      	LDI  R30,LOW(2)
0002a0 d65b      	RCALL __EQB12
0002a1 29e0      	OR   R30,R0
0002a2 f011      	BREQ _0x7B
                 ; 0000 012C                 runnigState=BRIGHTNESSHOME;}
0002a3 e0e1      	LDI  R30,LOW(1)
0002a4 2eae      	MOV  R10,R30
                 ; 0000 012D                 break;
                 _0x7B:
                 ; 0000 012E             }
                 _0x76:
                 ; 0000 012F }
0002a5 9508      	RET
                 ; .FEND
                 ;void fastEditBrightness(unsigned char addOrMinus){
                 ; 0000 0130 void fastEditBrightness(unsigned char addOrMinus){
                 _fastEditBrightness:
                 ; .FSTART _fastEditBrightness
                 ; 0000 0131             unsigned char counterFor=0;
                 ; 0000 0132             for(counterFor=0;counterFor<fastEditBrightnessMultiple;counterFor++){
0002a6 93aa      	ST   -Y,R26
0002a7 931a      	ST   -Y,R17
                 ;	addOrMinus -> Y+1
                 ;	counterFor -> R17
0002a8 e010      	LDI  R17,0
0002a9 e010      	LDI  R17,LOW(0)
                 _0x7D:
0002aa 3015      	CPI  R17,5
0002ab f4c8      	BRSH _0x7E
                 ; 0000 0133                 switch (addOrMinus)
0002ac 81e9      	LDD  R30,Y+1
0002ad e0f0      	LDI  R31,0
                 ; 0000 0134                 {
                 ; 0000 0135                      case SUM:
0002ae 30eb      	CPI  R30,LOW(0xB)
0002af e0a0      	LDI  R26,HIGH(0xB)
0002b0 07fa      	CPC  R31,R26
0002b1 f439      	BRNE _0x82
                 ; 0000 0136                      if(brightnessSet<99)brightnessSet++;
0002b2 d511      	RCALL SUBOPT_0x23
0002b3 36a3      	CPI  R26,LOW(0x63)
0002b4 f418      	BRSH _0x83
0002b5 d511      	RCALL SUBOPT_0x24
0002b6 5fef      	SUBI R30,-LOW(1)
0002b7 d512      	RCALL SUBOPT_0x25
                 ; 0000 0137                     break;
                 _0x83:
0002b8 c00a      	RJMP _0x81
                 ; 0000 0138                     case MINUS:
                 _0x82:
0002b9 30ec      	CPI  R30,LOW(0xC)
0002ba e0a0      	LDI  R26,HIGH(0xC)
0002bb 07fa      	CPC  R31,R26
0002bc f431      	BRNE _0x81
                 ; 0000 0139                      if(brightnessSet>1)brightnessSet--;
0002bd d506      	RCALL SUBOPT_0x23
0002be 30a2      	CPI  R26,LOW(0x2)
0002bf f018      	BRLO _0x85
0002c0 d506      	RCALL SUBOPT_0x24
0002c1 50e1      	SUBI R30,LOW(1)
0002c2 d507      	RCALL SUBOPT_0x25
                 ; 0000 013A                     break;
                 _0x85:
                 ; 0000 013B                 }
                 _0x81:
                 ; 0000 013C             }
0002c3 5f1f      	SUBI R17,-1
0002c4 cfe5      	RJMP _0x7D
                 _0x7E:
                 ; 0000 013D                brightness(brightnessSet);
0002c5 d4fe      	RCALL SUBOPT_0x23
0002c6 d067      	RCALL _brightness
                 ; 0000 013E                backToHome(fastEditBrightnessTimeon);
0002c7 e0a5      	LDI  R26,LOW(5)
0002c8 d008      	RCALL _backToHome
                 ; 0000 013F                showString(2,brightnessSet,2);
0002c9 d503      	RCALL SUBOPT_0x26
0002ca d505      	RCALL SUBOPT_0x27
                 ; 0000 0140                showString(1,'b',1);
0002cb d508      	RCALL SUBOPT_0x28
0002cc d50a      	RCALL SUBOPT_0x29
                 ; 0000 0141                showString(1,'r',2);
0002cd d50e      	RCALL SUBOPT_0x2A
0002ce d510      	RCALL SUBOPT_0x2B
                 ; 0000 0142 }
0002cf 8118      	LDD  R17,Y+0
0002d0 c3f6      	RJMP _0x20A0004
                 ; .FEND
                 ;void backToHome(unsigned char timeStop){
                 ; 0000 0143 void backToHome(unsigned char timeStop){
                 _backToHome:
                 ; .FSTART _backToHome
                 ; 0000 0144  timedisabeHomeTemp = timeStop;
0002d1 93aa      	ST   -Y,R26
                 ;	timeStop -> Y+0
0002d2 80b8      	LDD  R11,Y+0
                 ; 0000 0145  startCounterTimer();
0002d3 d3c4      	RCALL _startCounterTimer
                 ; 0000 0146  disabeHomeTempState=1;
0002d4 e0e1      	LDI  R30,LOW(1)
0002d5 93e0 0164 	STS  _disabeHomeTempState,R30
                 ; 0000 0147 }
0002d7 c1c6      	RJMP _0x20A0009
                 ; .FEND
                 ;void checkTimeDisabeHomeTemp(){
                 ; 0000 0148 void checkTimeDisabeHomeTemp(){
                 _checkTimeDisabeHomeTemp:
                 ; .FSTART _checkTimeDisabeHomeTemp
                 ; 0000 0149   if(disabeHomeTempState){
0002d8 91e0 0164 	LDS  R30,_disabeHomeTempState
0002da 30e0      	CPI  R30,0
0002db f051      	BREQ _0x86
                 ; 0000 014A     if(timedisabeHomeTemp>0){
0002dc e0e0      	LDI  R30,LOW(0)
0002dd 15eb      	CP   R30,R11
0002de f410      	BRSH _0x87
                 ; 0000 014B      timedisabeHomeTemp-- ;
0002df 94ba      	DEC  R11
                 ; 0000 014C      }else{
0002e0 c005      	RJMP _0x88
                 _0x87:
                 ; 0000 014D      stopCounterTimer();
0002e1 d3be      	RCALL _stopCounterTimer
                 ; 0000 014E      runnigState=HOME;
0002e2 24aa      	CLR  R10
                 ; 0000 014F      disabeHomeTempState=0;
0002e3 e0e0      	LDI  R30,LOW(0)
0002e4 93e0 0164 	STS  _disabeHomeTempState,R30
                 ; 0000 0150      }
                 _0x88:
                 ; 0000 0151   }
                 ; 0000 0152 }
                 _0x86:
0002e6 9508      	RET
                 ; .FEND
                 ;unsigned char checkVolumeRight(){
                 ; 0000 0153 unsigned char checkVolumeRight(){
                 _checkVolumeRight:
                 ; .FSTART _checkVolumeRight
                 ; 0000 0154     if(left==2){
0002e7 e0e2      	LDI  R30,LOW(2)
0002e8 15e9      	CP   R30,R9
0002e9 f021      	BREQ _0x20A000B
                 ; 0000 0155         buzzer(3,0);
                 ; 0000 0156         resetVolume();
                 ; 0000 0157         return 1;
                 ; 0000 0158     }else{return 0;}}
0002ea c00c      	RJMP _0x20A000A
                 ; .FEND
                 ;unsigned char checkVolumeLeft(){
                 ; 0000 0159 unsigned char checkVolumeLeft(){
                 _checkVolumeLeft:
                 ; .FSTART _checkVolumeLeft
                 ; 0000 015A     if(right==2){
0002eb e0e2      	LDI  R30,LOW(2)
0002ec 15e8      	CP   R30,R8
0002ed f449      	BRNE _0x8B
                 ; 0000 015B         buzzer(3,0);
                 _0x20A000B:
0002ee e0e3      	LDI  R30,LOW(3)
0002ef e0f0      	LDI  R31,HIGH(3)
0002f0 d4f0      	RCALL SUBOPT_0x2C
0002f1 e0a0      	LDI  R26,LOW(0)
0002f2 e0b0      	LDI  R27,0
0002f3 de3a      	RCALL _buzzer
                 ; 0000 015C         resetVolume();
0002f4 df77      	RCALL _resetVolume
                 ; 0000 015D         return 1;
0002f5 e0e1      	LDI  R30,LOW(1)
0002f6 9508      	RET
                 ; 0000 015E     }else{return 0;}}
                 _0x8B:
                 _0x20A000A:
0002f7 e0e0      	LDI  R30,LOW(0)
0002f8 9508      	RET
0002f9 9508      	RET
                 ; .FEND
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0160 {
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
0002fa d4e9      	RCALL SUBOPT_0x2D
                 ; 0000 0161     switch (left) {
0002fb 2de9      	MOV  R30,R9
0002fc d4f5      	RCALL SUBOPT_0x2E
                 ; 0000 0162     case 0 :
0002fd f411      	BRNE _0x90
                 ; 0000 0163     right=1;
0002fe e0e1      	LDI  R30,LOW(1)
0002ff c003      	RJMP _0x144
                 ; 0000 0164     break;
                 ; 0000 0165     case 1 :
                 _0x90:
000300 d48b      	RCALL SUBOPT_0x16
000301 f411      	BRNE _0x8F
                 ; 0000 0166     right=2;
000302 e0e2      	LDI  R30,LOW(2)
                 _0x144:
000303 2e8e      	MOV  R8,R30
                 ; 0000 0167     break;
                 ; 0000 0168     };
                 _0x8F:
                 ; 0000 0169     resetCounterSecondTime();
000304 df6a      	RCALL _resetCounterSecondTime
                 ; 0000 016A }
000305 c01a      	RJMP _0x146
                 ; .FEND
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 016C {
                 _ext_int1_isr:
                 ; .FSTART _ext_int1_isr
000306 d4dd      	RCALL SUBOPT_0x2D
                 ; 0000 016D     switch (right) {
000307 2de8      	MOV  R30,R8
000308 d4e9      	RCALL SUBOPT_0x2E
                 ; 0000 016E     case 0 :
000309 f411      	BRNE _0x95
                 ; 0000 016F     left=1;
00030a e0e1      	LDI  R30,LOW(1)
00030b c003      	RJMP _0x145
                 ; 0000 0170     break;
                 ; 0000 0171     case 1 :
                 _0x95:
00030c d47f      	RCALL SUBOPT_0x16
00030d f411      	BRNE _0x94
                 ; 0000 0172     left=2;
00030e e0e2      	LDI  R30,LOW(2)
                 _0x145:
00030f 2e9e      	MOV  R9,R30
                 ; 0000 0173     break;
                 ; 0000 0174     };
                 _0x94:
                 ; 0000 0175     resetCounterSecondTime();
000310 df5e      	RCALL _resetCounterSecondTime
                 ; 0000 0176 }
000311 c00e      	RJMP _0x146
                 ; .FEND
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0178 {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
000312 d4d1      	RCALL SUBOPT_0x2D
                 ; 0000 0179 checkTimeDisabeHomeTemp();
000313 dfc4      	RCALL _checkTimeDisabeHomeTemp
                 ; 0000 017A blinkNumberChangeTimer();
000314 d035      	RCALL _blinkNumberChangeTimer
                 ; 0000 017B TCNT1H=0x9E58 >> 8;
000315 e9ee      	LDI  R30,LOW(158)
000316 bded      	OUT  0x2D,R30
                 ; 0000 017C TCNT1L=0x9E58 & 0xff;
000317 e5e8      	LDI  R30,LOW(88)
000318 bdec      	OUT  0x2C,R30
                 ; 0000 017D }
000319 c006      	RJMP _0x146
                 ; .FEND
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 017F {
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
00031a d4c9      	RCALL SUBOPT_0x2D
                 ; 0000 0180     blinkNumber();
00031b df25      	RCALL _blinkNumber
                 ; 0000 0181 }
00031c c003      	RJMP _0x146
                 ; .FEND
                 ;interrupt [TIM2_COMP] void timer2_comp_isr(void)
                 ; 0000 0183 {
                 _timer2_comp_isr:
                 ; .FSTART _timer2_comp_isr
00031d d4c6      	RCALL SUBOPT_0x2D
                 ; 0000 0184     changePositionNumber(0);
00031e e0a0      	LDI  R26,LOW(0)
00031f de1f      	RCALL _changePositionNumber
                 ; 0000 0185 }
                 _0x146:
000320 91e9      	LD   R30,Y+
000321 bfef      	OUT  SREG,R30
000322 91f9      	LD   R31,Y+
000323 91e9      	LD   R30,Y+
000324 91b9      	LD   R27,Y+
000325 91a9      	LD   R26,Y+
000326 9199      	LD   R25,Y+
000327 9189      	LD   R24,Y+
000328 9179      	LD   R23,Y+
000329 9169      	LD   R22,Y+
00032a 90f9      	LD   R15,Y+
00032b 9019      	LD   R1,Y+
00032c 9009      	LD   R0,Y+
00032d 9518      	RETI
                 ; .FEND
                 ;void brightness(unsigned char timeBR){
                 ; 0000 0186 void brightness(unsigned char timeBR){
                 _brightness:
                 ; .FSTART _brightness
                 ; 0000 0187     unsigned char temp=0;
                 ; 0000 0188     OCR2=0;
00032e 93aa      	ST   -Y,R26
00032f 931a      	ST   -Y,R17
                 ;	timeBR -> Y+1
                 ;	temp -> R17
000330 e010      	LDI  R17,0
000331 e0e0      	LDI  R30,LOW(0)
000332 bde3      	OUT  0x23,R30
                 ; 0000 0189     timeBR=(timeBR*255)/100  ;
000333 81a9      	LDD  R26,Y+1
000334 efef      	LDI  R30,LOW(255)
000335 9fea      	MUL  R30,R26
000336 01f0      	MOVW R30,R0
000337 01df      	MOVW R26,R30
000338 e6e4      	LDI  R30,LOW(100)
000339 e0f0      	LDI  R31,HIGH(100)
00033a d603      	RCALL __DIVW21
00033b 83e9      	STD  Y+1,R30
                 ; 0000 018A     for(temp=0;temp<timeBR;temp++){
00033c e010      	LDI  R17,LOW(0)
                 _0x98:
00033d 81e9      	LDD  R30,Y+1
00033e 171e      	CP   R17,R30
00033f f440      	BRSH _0x99
                 ; 0000 018B         if(OCR2<255){
000340 b5e3      	IN   R30,0x23
000341 3fef      	CPI  R30,LOW(0xFF)
000342 f418      	BRSH _0x9A
                 ; 0000 018C          OCR2= OCR2+1;
000343 b5e3      	IN   R30,0x23
000344 5fef      	SUBI R30,-LOW(1)
000345 bde3      	OUT  0x23,R30
                 ; 0000 018D         }}
                 _0x9A:
000346 5f1f      	SUBI R17,-1
000347 cff5      	RJMP _0x98
                 _0x99:
                 ; 0000 018E }
000348 8118      	LDD  R17,Y+0
000349 c37d      	RJMP _0x20A0004
                 ; .FEND
                 ;void blinkNumberChangeTimer(){
                 ; 0000 018F void blinkNumberChangeTimer(){
                 _blinkNumberChangeTimer:
                 ; .FSTART _blinkNumberChangeTimer
                 ; 0000 0190     if(blinkNumberChageState){
00034a 91e0 0167 	LDS  R30,_blinkNumberChageState
00034c 30e0      	CPI  R30,0
00034d f119      	BREQ _0x9B
                 ; 0000 0191     if(counterBlinkNumber<blinkWhenChangeNumberTimeOff){
00034e 91a0 0166 	LDS  R26,_counterBlinkNumber
000350 30a1      	CPI  R26,LOW(0x1)
000351 f480      	BRSH _0x9C
                 ; 0000 0192     counterBlinkNumber++;
000352 d4a2      	RCALL SUBOPT_0x2F
                 ; 0000 0193     switch (seqNumber)
                 ; 0000 0194     {
                 ; 0000 0195     case 1:
000353 f431      	BRNE _0xA0
                 ; 0000 0196         portEnable[1]=0; portEnable[2]=0;
000354 e0e0      	LDI  R30,LOW(0)
                +
000355 93e0 0169+STS _portEnable + ( 1 ) , R30
                 	__PUTB1MN _portEnable,1
                +
000357 93e0 016a+STS _portEnable + ( 2 ) , R30
                 	__PUTB1MN _portEnable,2
                 ; 0000 0197         break;
000359 c007      	RJMP _0x9F
                 ; 0000 0198     case 2 :
                 _0xA0:
00035a d425      	RCALL SUBOPT_0x13
00035b f429      	BRNE _0x9F
                 ; 0000 0199         portEnable[3]=0; portEnable[4]=0;
00035c e0e0      	LDI  R30,LOW(0)
                +
00035d 93e0 016b+STS _portEnable + ( 3 ) , R30
                 	__PUTB1MN _portEnable,3
                +
00035f 93e0 016c+STS _portEnable + ( 4 ) , R30
                 	__PUTB1MN _portEnable,4
                 ; 0000 019A     break;
                 ; 0000 019B     }
                 _0x9F:
                 ; 0000 019C     } else{if(counterBlinkNumber<blinkWhenChangeNumberTimeOn){
000361 c00f      	RJMP _0xA2
                 _0x9C:
000362 91a0 0166 	LDS  R26,_counterBlinkNumber
000364 30a4      	CPI  R26,LOW(0x4)
000365 f440      	BRSH _0xA3
                 ; 0000 019D         counterBlinkNumber++;
000366 d48e      	RCALL SUBOPT_0x2F
                 ; 0000 019E     switch (seqNumber)
                 ; 0000 019F     {
                 ; 0000 01A0     case 1:
000367 f411      	BRNE _0xA7
                 ; 0000 01A1         portEnable[1]=1; portEnable[2]=1;
000368 d495      	RCALL SUBOPT_0x30
                 ; 0000 01A2         break;
000369 c003      	RJMP _0xA6
                 ; 0000 01A3     case 2 :
                 _0xA7:
00036a d415      	RCALL SUBOPT_0x13
00036b f409      	BRNE _0xA6
                 ; 0000 01A4         portEnable[3]=1; portEnable[4]=1;
00036c d497      	RCALL SUBOPT_0x31
                 ; 0000 01A5     break;
                 ; 0000 01A6     }
                 _0xA6:
                 ; 0000 01A7     }else{counterBlinkNumber=0;}}}
00036d c003      	RJMP _0xA9
                 _0xA3:
00036e e0e0      	LDI  R30,LOW(0)
00036f 93e0 0166 	STS  _counterBlinkNumber,R30
                 _0xA9:
                 _0xA2:
                 ; 0000 01A8 }
                 _0x9B:
000371 9508      	RET
                 ; .FEND
                 ;void blinkEditNumber(unsigned char seqNu){
                 ; 0000 01A9 void blinkEditNumber(unsigned char seqNu){
                 _blinkEditNumber:
                 ; .FSTART _blinkEditNumber
                 ; 0000 01AA     if(blinkNumberChageState){
000372 93aa      	ST   -Y,R26
                 ;	seqNu -> Y+0
000373 91e0 0167 	LDS  R30,_blinkNumberChageState
000375 30e0      	CPI  R30,0
000376 f031      	BREQ _0xAA
                 ; 0000 01AB         stopCounterTimer();
000377 d328      	RCALL _stopCounterTimer
                 ; 0000 01AC         blinkNumberChageState=0;
000378 e0e0      	LDI  R30,LOW(0)
000379 93e0 0167 	STS  _blinkNumberChageState,R30
                 ; 0000 01AD         portEnable[1]=1; portEnable[2]=1;
00037b d482      	RCALL SUBOPT_0x30
                 ; 0000 01AE         portEnable[3]=1; portEnable[4]=1;
00037c d487      	RCALL SUBOPT_0x31
                 ; 0000 01AF     }
                 ; 0000 01B0     if(seqNu>0){
                 _0xAA:
00037d 81a8      	LD   R26,Y
00037e 30a1      	CPI  R26,LOW(0x1)
00037f f038      	BRLO _0xAB
                 ; 0000 01B1     seqNumber = seqNu ;
000380 81e8      	LD   R30,Y
000381 93e0 0165 	STS  _seqNumber,R30
                 ; 0000 01B2     startCounterTimer();
000383 d314      	RCALL _startCounterTimer
                 ; 0000 01B3     blinkNumberChageState=1;
000384 e0e1      	LDI  R30,LOW(1)
000385 93e0 0167 	STS  _blinkNumberChageState,R30
                 ; 0000 01B4         }
                 ; 0000 01B5     }
                 _0xAB:
000387 c116      	RJMP _0x20A0009
                 ; .FEND
                 ;void showClock(){
                 ; 0000 01B6 void showClock(){
                 _showClock:
                 ; .FSTART _showClock
                 ; 0000 01B7     rtc_get_time(&h,&m,&s);
000388 e0e4      	LDI  R30,LOW(4)
000389 e0f0      	LDI  R31,HIGH(4)
00038a d456      	RCALL SUBOPT_0x2C
00038b e0e7      	LDI  R30,LOW(7)
00038c e0f0      	LDI  R31,HIGH(7)
00038d d453      	RCALL SUBOPT_0x2C
00038e e0a6      	LDI  R26,LOW(6)
00038f e0b0      	LDI  R27,HIGH(6)
000390 d34d      	RCALL _rtc_get_time
                 ; 0000 01B8     if(m==0){
000391 2077      	TST  R7
000392 f4d1      	BRNE _0xAC
                 ; 0000 01B9     if(tempSecondBip>s){
000393 91a0 0173 	LDS  R26,_tempSecondBip
000395 166a      	CP   R6,R26
000396 f4a0      	BRSH _0xAD
                 ; 0000 01BA         if(h<22 & h>7){
000397 2da4      	MOV  R26,R4
000398 e1e6      	LDI  R30,LOW(22)
000399 d567      	RCALL __LTB12U
00039a 2e0e      	MOV  R0,R30
00039b e0e7      	LDI  R30,LOW(7)
00039c d569      	RCALL __GTB12U
00039d 21e0      	AND  R30,R0
00039e f061      	BREQ _0xAE
                 ; 0000 01BB             buzzer(500,500);
00039f efe4      	LDI  R30,LOW(500)
0003a0 e0f1      	LDI  R31,HIGH(500)
0003a1 d43f      	RCALL SUBOPT_0x2C
0003a2 efa4      	LDI  R26,LOW(500)
0003a3 e0b1      	LDI  R27,HIGH(500)
0003a4 dd89      	RCALL _buzzer
                 ; 0000 01BC             buzzer(500,0);
0003a5 efe4      	LDI  R30,LOW(500)
0003a6 e0f1      	LDI  R31,HIGH(500)
0003a7 d439      	RCALL SUBOPT_0x2C
0003a8 e0a0      	LDI  R26,LOW(0)
0003a9 e0b0      	LDI  R27,0
0003aa dd83      	RCALL _buzzer
                 ; 0000 01BD         }}
                 _0xAE:
                 ; 0000 01BE         tempSecondBip=s;}
                 _0xAD:
0003ab 9260 0173 	STS  _tempSecondBip,R6
                 ; 0000 01BF     if(alarmSet==1|alarmSet==2){
                 _0xAC:
0003ad d45c      	RCALL SUBOPT_0x32
0003ae 2e1e      	MOV  R1,R30
0003af e0a1      	LDI  R26,LOW(1)
0003b0 d410      	RCALL SUBOPT_0x22
0003b1 2de1      	MOV  R30,R1
0003b2 e0a2      	LDI  R26,LOW(2)
0003b3 d548      	RCALL __EQB12
0003b4 29e0      	OR   R30,R0
0003b5 f099      	BREQ _0xAF
                 ; 0000 01C0         if(alHour==h & alMinute==m ){
0003b6 e0a1      	LDI  R26,LOW(_alHour)
0003b7 e0b0      	LDI  R27,HIGH(_alHour)
0003b8 d5d3      	RCALL __EEPROMRDB
0003b9 2fae      	MOV  R26,R30
0003ba 2de4      	MOV  R30,R4
0003bb d405      	RCALL SUBOPT_0x22
0003bc e0a0      	LDI  R26,LOW(_alMinute)
0003bd e0b0      	LDI  R27,HIGH(_alMinute)
0003be d5cd      	RCALL __EEPROMRDB
0003bf 2fae      	MOV  R26,R30
0003c0 2de7      	MOV  R30,R7
0003c1 d44c      	RCALL SUBOPT_0x33
0003c2 f031      	BREQ _0xB0
                 ; 0000 01C1         runnigState=ALARM;
0003c3 e0e9      	LDI  R30,LOW(9)
0003c4 2eae      	MOV  R10,R30
                 ; 0000 01C2         if(alarmSet==1)alarmSet=0;
0003c5 d444      	RCALL SUBOPT_0x32
0003c6 30e1      	CPI  R30,LOW(0x1)
0003c7 f409      	BRNE _0xB1
0003c8 d448      	RCALL SUBOPT_0x34
                 ; 0000 01C3         }}
                 _0xB1:
                 _0xB0:
                 ; 0000 01C4     showString(2,h,1);
                 _0xAF:
0003c9 d403      	RCALL SUBOPT_0x26
0003ca d44b      	RCALL SUBOPT_0x35
                 ; 0000 01C5     showString(2,m,2);
0003cb 927a      	ST   -Y,R7
0003cc d412      	RCALL SUBOPT_0x2B
                 ; 0000 01C6     dotBlink(ON);
0003cd e0ad      	LDI  R26,LOW(13)
0003ce dc90      	RCALL _dotBlink
                 ; 0000 01C7 }
0003cf 9508      	RET
                 ; .FEND
                 ;void showDate(){
                 ; 0000 01C8 void showDate(){
                 _showDate:
                 ; .FSTART _showDate
                 ; 0000 01C9     dotBlink(OFF);
0003d0 d3e9      	RCALL SUBOPT_0x20
                 ; 0000 01CA     rtc_get_date(&w,&dm,&mm,&ym);
0003d1 e7e2      	LDI  R30,LOW(_w)
0003d2 e0f1      	LDI  R31,HIGH(_w)
0003d3 d40d      	RCALL SUBOPT_0x2C
0003d4 e7e1      	LDI  R30,LOW(_dm)
0003d5 e0f1      	LDI  R31,HIGH(_dm)
0003d6 d40a      	RCALL SUBOPT_0x2C
0003d7 e7e0      	LDI  R30,LOW(_mm)
0003d8 e0f1      	LDI  R31,HIGH(_mm)
0003d9 d407      	RCALL SUBOPT_0x2C
0003da e6af      	LDI  R26,LOW(_ym)
0003db e0b1      	LDI  R27,HIGH(_ym)
0003dc d319      	RCALL _rtc_get_date
                 ; 0000 01CB     m2s(ym,mm,dm,&ys,&ms,&ds);
0003dd d43c      	RCALL SUBOPT_0x36
0003de e0f0      	LDI  R31,0
0003df d401      	RCALL SUBOPT_0x2C
0003e0 d43c      	RCALL SUBOPT_0x37
0003e1 e0f0      	LDI  R31,0
0003e2 d3fe      	RCALL SUBOPT_0x2C
0003e3 d43c      	RCALL SUBOPT_0x38
0003e4 e0f0      	LDI  R31,0
0003e5 d3fb      	RCALL SUBOPT_0x2C
0003e6 e7e4      	LDI  R30,LOW(_ys)
0003e7 e0f1      	LDI  R31,HIGH(_ys)
0003e8 d3f8      	RCALL SUBOPT_0x2C
0003e9 e7e6      	LDI  R30,LOW(_ms)
0003ea e0f1      	LDI  R31,HIGH(_ms)
0003eb d3f5      	RCALL SUBOPT_0x2C
0003ec e7a8      	LDI  R26,LOW(_ds)
0003ed e0b1      	LDI  R27,HIGH(_ds)
0003ee dc82      	RCALL _m2s
                 ; 0000 01CC     showString(2,ms,1);
0003ef d3dd      	RCALL SUBOPT_0x26
0003f0 91e0 0176 	LDS  R30,_ms
0003f2 d430      	RCALL SUBOPT_0x39
                 ; 0000 01CD     showString(2,ds,2);
0003f3 91e0 0178 	LDS  R30,_ds
0003f5 d431      	RCALL SUBOPT_0x3A
                 ; 0000 01CE }
0003f6 9508      	RET
                 ; .FEND
                 ;void playAlarm(){
                 ; 0000 01CF void playAlarm(){
                 _playAlarm:
                 ; .FSTART _playAlarm
                 ; 0000 01D0     unsigned char counterFor=0;
                 ; 0000 01D1     dotBlink(OFF);
0003f7 931a      	ST   -Y,R17
                 ;	counterFor -> R17
0003f8 e010      	LDI  R17,0
0003f9 d3c0      	RCALL SUBOPT_0x20
                 ; 0000 01D2     showString(2,alHour,1);
0003fa d3d2      	RCALL SUBOPT_0x26
0003fb e0a1      	LDI  R26,LOW(_alHour)
0003fc e0b0      	LDI  R27,HIGH(_alHour)
0003fd d58e      	RCALL __EEPROMRDB
0003fe d424      	RCALL SUBOPT_0x39
                 ; 0000 01D3     showString(2,alMinute,2);
0003ff e0a0      	LDI  R26,LOW(_alMinute)
000400 e0b0      	LDI  R27,HIGH(_alMinute)
000401 d58a      	RCALL __EEPROMRDB
000402 d424      	RCALL SUBOPT_0x3A
                 ; 0000 01D4     for(counterFor=0;counterFor<alarmTime;counterFor++){
000403 e010      	LDI  R17,LOW(0)
                 _0xB3:
000404 3019      	CPI  R17,9
000405 f440      	BRSH _0xB4
                 ; 0000 01D5     buzzer(300,200);}
000406 e2ec      	LDI  R30,LOW(300)
000407 e0f1      	LDI  R31,HIGH(300)
000408 d3d8      	RCALL SUBOPT_0x2C
000409 eca8      	LDI  R26,LOW(200)
00040a e0b0      	LDI  R27,0
00040b dd22      	RCALL _buzzer
00040c 5f1f      	SUBI R17,-1
00040d cff6      	RJMP _0xB3
                 _0xB4:
                 ; 0000 01D6     runnigState=HOME;
00040e 24aa      	CLR  R10
                 ; 0000 01D7 }
00040f 9119      	LD   R17,Y+
000410 9508      	RET
                 ; .FEND
                 ;void exitMenu(){
                 ; 0000 01D8 void exitMenu(){
                 _exitMenu:
                 ; .FSTART _exitMenu
                 ; 0000 01D9         runnigState=HOME;
000411 24aa      	CLR  R10
                 ; 0000 01DA         menuPosition = SETTIME;
000412 e0e4      	LDI  R30,LOW(4)
000413 2ede      	MOV  R13,R30
                 ; 0000 01DB         resetClickState();
000414 de52      	RCALL _resetClickState
                 ; 0000 01DC         blinkEditNumber(0);
000415 e0a0      	LDI  R26,LOW(0)
000416 df5b      	RCALL _blinkEditNumber
                 ; 0000 01DD }
000417 9508      	RET
                 ; .FEND
                 ;void showStringReady(unsigned char stringName){
                 ; 0000 01DE void showStringReady(unsigned char stringName){
                 _showStringReady:
                 ; .FSTART _showStringReady
                 ; 0000 01DF     switch (stringName)
000418 d30f      	RCALL SUBOPT_0x0
                 ;	stringName -> Y+0
                 ; 0000 01E0     {
                 ; 0000 01E1     case CLOCK:
000419 30ef      	CPI  R30,LOW(0xF)
00041a e0a0      	LDI  R26,HIGH(0xF)
00041b 07fa      	CPC  R31,R26
00041c f451      	BRNE _0xB8
                 ; 0000 01E2        showString(1,'c',1);
00041d d3b6      	RCALL SUBOPT_0x28
00041e e6e3      	LDI  R30,LOW(99)
00041f d409      	RCALL SUBOPT_0x3B
                 ; 0000 01E3        showString(1,'l',2);
000420 e6ec      	LDI  R30,LOW(108)
000421 d405      	RCALL SUBOPT_0x3A
                 ; 0000 01E4        showString(1,'o',3);
000422 d3b1      	RCALL SUBOPT_0x28
000423 d409      	RCALL SUBOPT_0x3C
                 ; 0000 01E5        showString(1,'c',4);
000424 e6e3      	LDI  R30,LOW(99)
000425 d40c      	RCALL SUBOPT_0x3D
                 ; 0000 01E6         break;
000426 c077      	RJMP _0xB7
                 ; 0000 01E7     case EXIT:
                 _0xB8:
000427 d368      	RCALL SUBOPT_0x17
000428 f451      	BRNE _0xB9
                 ; 0000 01E8        showString(1,'e',1);
000429 d3aa      	RCALL SUBOPT_0x28
00042a e6e5      	LDI  R30,LOW(101)
00042b d3fd      	RCALL SUBOPT_0x3B
                 ; 0000 01E9        showString(1,'x',2);
00042c e7e8      	LDI  R30,LOW(120)
00042d d3f9      	RCALL SUBOPT_0x3A
                 ; 0000 01EA        showString(1,'i',3);
00042e d3a5      	RCALL SUBOPT_0x28
00042f d405      	RCALL SUBOPT_0x3E
                 ; 0000 01EB        showString(1,'t',4);
000430 e7e4      	LDI  R30,LOW(116)
000431 d400      	RCALL SUBOPT_0x3D
                 ; 0000 01EC         break;
000432 c06b      	RJMP _0xB7
                 ; 0000 01ED     case ALARM:
                 _0xB9:
000433 d364      	RCALL SUBOPT_0x19
000434 f461      	BRNE _0xBA
                 ; 0000 01EE        showString(1,'a',1);
000435 d39e      	RCALL SUBOPT_0x28
000436 e6e1      	LDI  R30,LOW(97)
000437 d3f1      	RCALL SUBOPT_0x3B
                 ; 0000 01EF        showString(1,'l',2);
000438 e6ec      	LDI  R30,LOW(108)
000439 d3ed      	RCALL SUBOPT_0x3A
                 ; 0000 01F0        showString(1,'a',3);
00043a d399      	RCALL SUBOPT_0x28
00043b e6e1      	LDI  R30,LOW(97)
00043c d3fd      	RCALL SUBOPT_0x3F
                 ; 0000 01F1        showString(1,'r',4);
00043d d39e      	RCALL SUBOPT_0x2A
00043e e0a4      	LDI  R26,LOW(4)
00043f ddc9      	RCALL _showString
                 ; 0000 01F2         break;
000440 c05d      	RJMP _0xB7
                 ; 0000 01F3     case BRIGHTNESS:
                 _0xBA:
000441 d352      	RCALL SUBOPT_0x18
000442 f449      	BRNE _0xBB
                 ; 0000 01F4        showString(1,'b',1);
000443 d390      	RCALL SUBOPT_0x28
000444 d392      	RCALL SUBOPT_0x29
                 ; 0000 01F5        showString(1,'r',2);
000445 d396      	RCALL SUBOPT_0x2A
000446 d398      	RCALL SUBOPT_0x2B
                 ; 0000 01F6        showString(1,'i',3);
000447 d38c      	RCALL SUBOPT_0x28
000448 d3ec      	RCALL SUBOPT_0x3E
                 ; 0000 01F7        showString(1,9,4);
000449 e0e9      	LDI  R30,LOW(9)
00044a d3e7      	RCALL SUBOPT_0x3D
                 ; 0000 01F8         break;
00044b c052      	RJMP _0xB7
                 ; 0000 01F9     case ONE:
                 _0xBB:
00044c 31e0      	CPI  R30,LOW(0x10)
00044d e0a0      	LDI  R26,HIGH(0x10)
00044e 07fa      	CPC  R31,R26
00044f f451      	BRNE _0xBC
                 ; 0000 01FA        showString(1,'.',1);
000450 d383      	RCALL SUBOPT_0x28
000451 d3ec      	RCALL SUBOPT_0x40
                 ; 0000 01FB        showString(1,'o',2);
000452 e6ef      	LDI  R30,LOW(111)
000453 d3d3      	RCALL SUBOPT_0x3A
                 ; 0000 01FC        showString(1,'n',3);
000454 d37f      	RCALL SUBOPT_0x28
000455 e6ee      	LDI  R30,LOW(110)
000456 d3e3      	RCALL SUBOPT_0x3F
                 ; 0000 01FD        showString(1,'e',4);
000457 e6e5      	LDI  R30,LOW(101)
000458 d3d9      	RCALL SUBOPT_0x3D
                 ; 0000 01FE         break;
000459 c044      	RJMP _0xB7
                 ; 0000 01FF     case ON:
                 _0xBC:
00045a 30ed      	CPI  R30,LOW(0xD)
00045b e0a0      	LDI  R26,HIGH(0xD)
00045c 07fa      	CPC  R31,R26
00045d f449      	BRNE _0xBD
                 ; 0000 0200        showString(1,'.',1);
00045e d375      	RCALL SUBOPT_0x28
00045f d3de      	RCALL SUBOPT_0x40
                 ; 0000 0201        showString(1,'.',2);
000460 e2ee      	LDI  R30,LOW(46)
000461 d3c5      	RCALL SUBOPT_0x3A
                 ; 0000 0202        showString(1,'o',3);
000462 d371      	RCALL SUBOPT_0x28
000463 d3c9      	RCALL SUBOPT_0x3C
                 ; 0000 0203        showString(1,'n',4);
000464 e6ee      	LDI  R30,LOW(110)
000465 d3cc      	RCALL SUBOPT_0x3D
                 ; 0000 0204         break;
000466 c037      	RJMP _0xB7
                 ; 0000 0205     case OFF:
                 _0xBD:
000467 30ee      	CPI  R30,LOW(0xE)
000468 e0a0      	LDI  R26,HIGH(0xE)
000469 07fa      	CPC  R31,R26
00046a f451      	BRNE _0xBE
                 ; 0000 0206        showString(1,'.',1);
00046b d368      	RCALL SUBOPT_0x28
00046c d3d1      	RCALL SUBOPT_0x40
                 ; 0000 0207        showString(1,'o',2);
00046d e6ef      	LDI  R30,LOW(111)
00046e d3b8      	RCALL SUBOPT_0x3A
                 ; 0000 0208        showString(1,'f',3);
00046f d364      	RCALL SUBOPT_0x28
000470 e6e6      	LDI  R30,LOW(102)
000471 d3c8      	RCALL SUBOPT_0x3F
                 ; 0000 0209        showString(1,'f',4);
000472 e6e6      	LDI  R30,LOW(102)
000473 d3be      	RCALL SUBOPT_0x3D
                 ; 0000 020A         break;
000474 c029      	RJMP _0xB7
                 ; 0000 020B     case BIP:
                 _0xBE:
000475 31e1      	CPI  R30,LOW(0x11)
000476 e0a0      	LDI  R26,HIGH(0x11)
000477 07fa      	CPC  R31,R26
000478 f449      	BRNE _0xBF
                 ; 0000 020C        showString(1,'.',1);
000479 d35a      	RCALL SUBOPT_0x28
00047a d3c3      	RCALL SUBOPT_0x40
                 ; 0000 020D        showString(1,'b',2);
00047b e6e2      	LDI  R30,LOW(98)
00047c d3aa      	RCALL SUBOPT_0x3A
                 ; 0000 020E        showString(1,'i',3);
00047d d356      	RCALL SUBOPT_0x28
00047e d3b6      	RCALL SUBOPT_0x3E
                 ; 0000 020F        showString(1,'p',4);
00047f e7e0      	LDI  R30,LOW(112)
000480 d3b1      	RCALL SUBOPT_0x3D
                 ; 0000 0210         break;
000481 c01c      	RJMP _0xB7
                 ; 0000 0211     case SHOWDATE:
                 _0xBF:
000482 d2fd      	RCALL SUBOPT_0x13
000483 f459      	BRNE _0xC0
                 ; 0000 0212        showString(1,'d',1);
000484 d34f      	RCALL SUBOPT_0x28
000485 e6e4      	LDI  R30,LOW(100)
000486 d3a2      	RCALL SUBOPT_0x3B
                 ; 0000 0213        showString(1,'a',2);
000487 e6e1      	LDI  R30,LOW(97)
000488 d39e      	RCALL SUBOPT_0x3A
                 ; 0000 0214        showString(1,'t',3);
000489 d34a      	RCALL SUBOPT_0x28
00048a e7e4      	LDI  R30,LOW(116)
00048b d3ae      	RCALL SUBOPT_0x3F
                 ; 0000 0215        showString(1,'e',4);
00048c e6e5      	LDI  R30,LOW(101)
00048d d3a4      	RCALL SUBOPT_0x3D
                 ; 0000 0216         break;
00048e c00f      	RJMP _0xB7
                 ; 0000 0217      case EVER:
                 _0xC0:
00048f 31e2      	CPI  R30,LOW(0x12)
000490 e0a0      	LDI  R26,HIGH(0x12)
000491 07fa      	CPC  R31,R26
000492 f459      	BRNE _0xC2
                 ; 0000 0218        showString(1,'e',1);
000493 d340      	RCALL SUBOPT_0x28
000494 e6e5      	LDI  R30,LOW(101)
000495 d393      	RCALL SUBOPT_0x3B
                 ; 0000 0219        showString(1,'v',2);
000496 e7e6      	LDI  R30,LOW(118)
000497 d38f      	RCALL SUBOPT_0x3A
                 ; 0000 021A        showString(1,'e',3);
000498 d33b      	RCALL SUBOPT_0x28
000499 e6e5      	LDI  R30,LOW(101)
00049a d39f      	RCALL SUBOPT_0x3F
                 ; 0000 021B        showString(1,'r',4);
00049b d340      	RCALL SUBOPT_0x2A
00049c e0a4      	LDI  R26,LOW(4)
00049d dd6b      	RCALL _showString
                 ; 0000 021C         break;
                 ; 0000 021D     default:
                 _0xC2:
                 ; 0000 021E         break;
                 ; 0000 021F     }
                 _0xB7:
                 ; 0000 0220 }
                 _0x20A0009:
00049e 9621      	ADIW R28,1
00049f 9508      	RET
                 ; .FEND
                 ;void setBrightnessMenu(){
                 ; 0000 0221 void setBrightnessMenu(){
                 _setBrightnessMenu:
                 ; .FSTART _setBrightnessMenu
                 ; 0000 0222     resetClickState();
0004a0 d39f      	RCALL SUBOPT_0x41
                 ; 0000 0223     blinkEditNumber(2);
                 ; 0000 0224         while (clickState==0 & runnigState==MENU)
                 _0xC3:
0004a1 d3a1      	RCALL SUBOPT_0x42
0004a2 d3a3      	RCALL SUBOPT_0x43
0004a3 f099      	BREQ _0xC5
                 ; 0000 0225     {
                 ; 0000 0226         volumeCheck();
0004a4 d3a4      	RCALL SUBOPT_0x44
                 ; 0000 0227         if(checkVolumeRight()){if(brightnessSet<99)brightnessSet++;}
0004a5 f031      	BREQ _0xC6
0004a6 d31d      	RCALL SUBOPT_0x23
0004a7 36a3      	CPI  R26,LOW(0x63)
0004a8 f418      	BRSH _0xC7
0004a9 d31d      	RCALL SUBOPT_0x24
0004aa 5fef      	SUBI R30,-LOW(1)
0004ab d31e      	RCALL SUBOPT_0x25
                 _0xC7:
                 ; 0000 0228         if(checkVolumeLeft()){if(brightnessSet>1)brightnessSet--;}
                 _0xC6:
0004ac d3a0      	RCALL SUBOPT_0x45
0004ad f031      	BREQ _0xC8
0004ae d315      	RCALL SUBOPT_0x23
0004af 30a2      	CPI  R26,LOW(0x2)
0004b0 f018      	BRLO _0xC9
0004b1 d315      	RCALL SUBOPT_0x24
0004b2 50e1      	SUBI R30,LOW(1)
0004b3 d316      	RCALL SUBOPT_0x25
                 _0xC9:
                 ; 0000 0229         showString(2,brightnessSet,2);
                 _0xC8:
0004b4 d318      	RCALL SUBOPT_0x26
0004b5 d31a      	RCALL SUBOPT_0x27
                 ; 0000 022A     }
0004b6 cfea      	RJMP _0xC3
                 _0xC5:
                 ; 0000 022B     brightness(brightnessSet);
0004b7 d30c      	RCALL SUBOPT_0x23
0004b8 de75      	RCALL _brightness
                 ; 0000 022C     brightnessMem=brightnessSet;
0004b9 d30d      	RCALL SUBOPT_0x24
0004ba e0a2      	LDI  R26,LOW(_brightnessMem)
0004bb e0b0      	LDI  R27,HIGH(_brightnessMem)
0004bc c136      	RJMP _0x20A0007
                 ; 0000 022D     exitMenu();
                 ; 0000 022E }
                 ; .FEND
                 ;void setTimeMenu(){
                 ; 0000 022F void setTimeMenu(){
                 _setTimeMenu:
                 ; .FSTART _setTimeMenu
                 ; 0000 0230     unsigned char hour=h,minute=m;
                 ; 0000 0231         resetClickState();
0004bd d4f3      	RCALL __SAVELOCR2
                 ;	hour -> R17
                 ;	minute -> R16
0004be 2d14      	MOV  R17,R4
0004bf 2d07      	MOV  R16,R7
0004c0 dda6      	RCALL _resetClickState
                 ; 0000 0232         showString(2,h,1);
0004c1 d30b      	RCALL SUBOPT_0x26
0004c2 d353      	RCALL SUBOPT_0x35
                 ; 0000 0233         showString(2,m,2);
0004c3 927a      	ST   -Y,R7
0004c4 d31a      	RCALL SUBOPT_0x2B
                 ; 0000 0234         blinkEditNumber(1);
0004c5 e0a1      	LDI  R26,LOW(1)
0004c6 deab      	RCALL _blinkEditNumber
                 ; 0000 0235     while (clickState==0 & runnigState==MENU)
                 _0xCA:
0004c7 d37b      	RCALL SUBOPT_0x42
0004c8 d37d      	RCALL SUBOPT_0x43
0004c9 f079      	BREQ _0xCC
                 ; 0000 0236     {
                 ; 0000 0237         volumeCheck();
0004ca d37e      	RCALL SUBOPT_0x44
                 ; 0000 0238         if(checkVolumeRight()){if(hour<24)hour++;}
0004cb f019      	BREQ _0xCD
0004cc 3118      	CPI  R17,24
0004cd f408      	BRSH _0xCE
0004ce 5f1f      	SUBI R17,-1
                 _0xCE:
                 ; 0000 0239         if(checkVolumeLeft()){if(hour>0)hour--;}
                 _0xCD:
0004cf d37d      	RCALL SUBOPT_0x45
0004d0 f019      	BREQ _0xCF
0004d1 3011      	CPI  R17,1
0004d2 f008      	BRLO _0xD0
0004d3 5011      	SUBI R17,1
                 _0xD0:
                 ; 0000 023A         showString(2,hour,1);
                 _0xCF:
0004d4 d2f8      	RCALL SUBOPT_0x26
0004d5 931a      	ST   -Y,R17
0004d6 e0a1      	LDI  R26,LOW(1)
0004d7 dd31      	RCALL _showString
                 ; 0000 023B     }
0004d8 cfee      	RJMP _0xCA
                 _0xCC:
                 ; 0000 023C     resetClickState();
0004d9 d366      	RCALL SUBOPT_0x41
                 ; 0000 023D     blinkEditNumber(2);
                 ; 0000 023E     while (clickState==0 & runnigState==MENU)
                 _0xD1:
0004da d368      	RCALL SUBOPT_0x42
0004db d36a      	RCALL SUBOPT_0x43
0004dc f071      	BREQ _0xD3
                 ; 0000 023F     {
                 ; 0000 0240         volumeCheck();
0004dd d36b      	RCALL SUBOPT_0x44
                 ; 0000 0241         if(checkVolumeRight()){if(minute<59)minute++;}
0004de f019      	BREQ _0xD4
0004df 330b      	CPI  R16,59
0004e0 f408      	BRSH _0xD5
0004e1 5f0f      	SUBI R16,-1
                 _0xD5:
                 ; 0000 0242         if(checkVolumeLeft()){if(minute>0)minute--;}
                 _0xD4:
0004e2 d36a      	RCALL SUBOPT_0x45
0004e3 f019      	BREQ _0xD6
0004e4 3001      	CPI  R16,1
0004e5 f008      	BRLO _0xD7
0004e6 5001      	SUBI R16,1
                 _0xD7:
                 ; 0000 0243         showString(2,minute,2);
                 _0xD6:
0004e7 d2e5      	RCALL SUBOPT_0x26
0004e8 930a      	ST   -Y,R16
0004e9 d2f5      	RCALL SUBOPT_0x2B
                 ; 0000 0244     }
0004ea cfef      	RJMP _0xD1
                 _0xD3:
                 ; 0000 0245     rtc_set_time(hour,minute,0);
0004eb 931a      	ST   -Y,R17
0004ec 930a      	ST   -Y,R16
0004ed e0a0      	LDI  R26,LOW(0)
0004ee d1fe      	RCALL _rtc_set_time
                 ; 0000 0246     exitMenu();
0004ef c0dd      	RJMP _0x20A0008
                 ; 0000 0247 }
                 ; .FEND
                 ;void setDateMenu(){
                 ; 0000 0248 void setDateMenu(){
                 _setDateMenu:
                 ; .FSTART _setDateMenu
                 ; 0000 0249          resetClickState();
0004f0 dd76      	RCALL _resetClickState
                 ; 0000 024A          showString(1,4,1);
0004f1 d2e2      	RCALL SUBOPT_0x28
0004f2 e0e4      	LDI  R30,LOW(4)
0004f3 d335      	RCALL SUBOPT_0x3B
                 ; 0000 024B          showString(1,'e',2);
0004f4 e6e5      	LDI  R30,LOW(101)
0004f5 d331      	RCALL SUBOPT_0x3A
                 ; 0000 024C          showString(2,ym,2);
0004f6 d2d6      	RCALL SUBOPT_0x26
0004f7 d322      	RCALL SUBOPT_0x36
0004f8 d32e      	RCALL SUBOPT_0x3A
                 ; 0000 024D         while (clickState==0 & runnigState==MENU)
                 _0xD8:
0004f9 d349      	RCALL SUBOPT_0x42
0004fa d34b      	RCALL SUBOPT_0x43
0004fb f0c1      	BREQ _0xDA
                 ; 0000 024E     {
                 ; 0000 024F         volumeCheck();
0004fc d34c      	RCALL SUBOPT_0x44
                 ; 0000 0250         if(checkVolumeRight()){if(ym<99)ym++;}
0004fd f041      	BREQ _0xDB
0004fe 91a0 016f 	LDS  R26,_ym
000500 36a3      	CPI  R26,LOW(0x63)
000501 f420      	BRSH _0xDC
000502 d317      	RCALL SUBOPT_0x36
000503 5fef      	SUBI R30,-LOW(1)
000504 93e0 016f 	STS  _ym,R30
                 _0xDC:
                 ; 0000 0251         if(checkVolumeLeft()){if(ym>0)ym--;}
                 _0xDB:
000506 d346      	RCALL SUBOPT_0x45
000507 f041      	BREQ _0xDD
000508 91a0 016f 	LDS  R26,_ym
00050a 30a1      	CPI  R26,LOW(0x1)
00050b f020      	BRLO _0xDE
00050c d30d      	RCALL SUBOPT_0x36
00050d 50e1      	SUBI R30,LOW(1)
00050e 93e0 016f 	STS  _ym,R30
                 _0xDE:
                 ; 0000 0252         showString(2,ym,2);
                 _0xDD:
000510 d2bc      	RCALL SUBOPT_0x26
000511 d308      	RCALL SUBOPT_0x36
000512 d314      	RCALL SUBOPT_0x3A
                 ; 0000 0253     }
000513 cfe5      	RJMP _0xD8
                 _0xDA:
                 ; 0000 0254          resetClickState();
000514 dd52      	RCALL _resetClickState
                 ; 0000 0255          showString(1,'n',1);
000515 d2be      	RCALL SUBOPT_0x28
000516 e6ee      	LDI  R30,LOW(110)
000517 d311      	RCALL SUBOPT_0x3B
                 ; 0000 0256          showString(1,'n',2);
000518 e6ee      	LDI  R30,LOW(110)
000519 d30d      	RCALL SUBOPT_0x3A
                 ; 0000 0257          showString(2,mm,2);
00051a d2b2      	RCALL SUBOPT_0x26
00051b d301      	RCALL SUBOPT_0x37
00051c d30a      	RCALL SUBOPT_0x3A
                 ; 0000 0258         while (clickState==0 & runnigState==MENU)
                 _0xDF:
00051d d325      	RCALL SUBOPT_0x42
00051e d327      	RCALL SUBOPT_0x43
00051f f0c1      	BREQ _0xE1
                 ; 0000 0259     {
                 ; 0000 025A         volumeCheck();
000520 d328      	RCALL SUBOPT_0x44
                 ; 0000 025B         if(checkVolumeRight()){if(mm<59)mm++;}
000521 f041      	BREQ _0xE2
000522 91a0 0170 	LDS  R26,_mm
000524 33ab      	CPI  R26,LOW(0x3B)
000525 f420      	BRSH _0xE3
000526 d2f6      	RCALL SUBOPT_0x37
000527 5fef      	SUBI R30,-LOW(1)
000528 93e0 0170 	STS  _mm,R30
                 _0xE3:
                 ; 0000 025C         if(checkVolumeLeft()){if(mm>0)mm--;}
                 _0xE2:
00052a d322      	RCALL SUBOPT_0x45
00052b f041      	BREQ _0xE4
00052c 91a0 0170 	LDS  R26,_mm
00052e 30a1      	CPI  R26,LOW(0x1)
00052f f020      	BRLO _0xE5
000530 d2ec      	RCALL SUBOPT_0x37
000531 50e1      	SUBI R30,LOW(1)
000532 93e0 0170 	STS  _mm,R30
                 _0xE5:
                 ; 0000 025D         showString(2,mm,2);
                 _0xE4:
000534 d298      	RCALL SUBOPT_0x26
000535 d2e7      	RCALL SUBOPT_0x37
000536 d2f0      	RCALL SUBOPT_0x3A
                 ; 0000 025E     }
000537 cfe5      	RJMP _0xDF
                 _0xE1:
                 ; 0000 025F         resetClickState();
000538 dd2e      	RCALL _resetClickState
                 ; 0000 0260          showString(1,'d',1);
000539 d29a      	RCALL SUBOPT_0x28
00053a e6e4      	LDI  R30,LOW(100)
00053b d2ed      	RCALL SUBOPT_0x3B
                 ; 0000 0261          showString(1,'a',2);
00053c e6e1      	LDI  R30,LOW(97)
00053d d2e9      	RCALL SUBOPT_0x3A
                 ; 0000 0262          showString(2,dm,2);
00053e d28e      	RCALL SUBOPT_0x26
00053f d2e0      	RCALL SUBOPT_0x38
000540 d2e6      	RCALL SUBOPT_0x3A
                 ; 0000 0263         while (clickState==0 & runnigState==MENU)
                 _0xE6:
000541 d301      	RCALL SUBOPT_0x42
000542 d303      	RCALL SUBOPT_0x43
000543 f0c1      	BREQ _0xE8
                 ; 0000 0264     {
                 ; 0000 0265         volumeCheck();
000544 d304      	RCALL SUBOPT_0x44
                 ; 0000 0266         if(checkVolumeRight()){if(dm<59)dm++;}
000545 f041      	BREQ _0xE9
000546 91a0 0171 	LDS  R26,_dm
000548 33ab      	CPI  R26,LOW(0x3B)
000549 f420      	BRSH _0xEA
00054a d2d5      	RCALL SUBOPT_0x38
00054b 5fef      	SUBI R30,-LOW(1)
00054c 93e0 0171 	STS  _dm,R30
                 _0xEA:
                 ; 0000 0267         if(checkVolumeLeft()){if(dm>0)dm--;}
                 _0xE9:
00054e d2fe      	RCALL SUBOPT_0x45
00054f f041      	BREQ _0xEB
000550 91a0 0171 	LDS  R26,_dm
000552 30a1      	CPI  R26,LOW(0x1)
000553 f020      	BRLO _0xEC
000554 d2cb      	RCALL SUBOPT_0x38
000555 50e1      	SUBI R30,LOW(1)
000556 93e0 0171 	STS  _dm,R30
                 _0xEC:
                 ; 0000 0268         showString(2,dm,2);
                 _0xEB:
000558 d274      	RCALL SUBOPT_0x26
000559 d2c6      	RCALL SUBOPT_0x38
00055a d2cc      	RCALL SUBOPT_0x3A
                 ; 0000 0269     }
00055b cfe5      	RJMP _0xE6
                 _0xE8:
                 ; 0000 026A     rtc_set_date(7,dm,mm,ym);
00055c e0e7      	LDI  R30,LOW(7)
00055d 93ea      	ST   -Y,R30
00055e d2c1      	RCALL SUBOPT_0x38
00055f 93ea      	ST   -Y,R30
000560 d2bc      	RCALL SUBOPT_0x37
000561 93ea      	ST   -Y,R30
000562 91a0 016f 	LDS  R26,_ym
000564 d1a2      	RCALL _rtc_set_date
                 ; 0000 026B     exitMenu();
000565 c08e      	RJMP _0x20A0006
                 ; 0000 026C }
                 ; .FEND
                 ;void setAlarmMenu(){
                 ; 0000 026D void setAlarmMenu(){
                 _setAlarmMenu:
                 ; .FSTART _setAlarmMenu
                 ; 0000 026E    unsigned char alHour1=0,alMinute1=0;
                 ; 0000 026F    alHour1=h;alMinute1=m;
000566 d44a      	RCALL __SAVELOCR2
                 ;	alHour1 -> R17
                 ;	alMinute1 -> R16
000567 e010      	LDI  R17,0
000568 e000      	LDI  R16,0
000569 2d14      	MOV  R17,R4
00056a 2d07      	MOV  R16,R7
                 ; 0000 0270     resetClickState();
00056b dcfb      	RCALL _resetClickState
                 ; 0000 0271     alarmSet=0;
00056c d2a4      	RCALL SUBOPT_0x34
                 ; 0000 0272     while (clickState==0 & runnigState==MENU)
                 _0xED:
00056d d2d5      	RCALL SUBOPT_0x42
00056e d2d7      	RCALL SUBOPT_0x43
00056f f139      	BREQ _0xEF
                 ; 0000 0273     {   switch (alarmSet)
000570 d299      	RCALL SUBOPT_0x32
000571 d280      	RCALL SUBOPT_0x2E
                 ; 0000 0274          {
                 ; 0000 0275         case 0:
000572 f459      	BRNE _0xF3
                 ; 0000 0276         showStringReady(OFF);
000573 d2dc      	RCALL SUBOPT_0x46
                 ; 0000 0277         if(checkVolumeRight()){alarmSet=1;}
000574 f019      	BREQ _0xF4
000575 d2df      	RCALL SUBOPT_0x47
000576 e0e1      	LDI  R30,LOW(1)
000577 d420      	RCALL __EEPROMWRB
                 ; 0000 0278         if(checkVolumeLeft()){alarmSet=2;}
                 _0xF4:
000578 d2d4      	RCALL SUBOPT_0x45
000579 f019      	BREQ _0xF5
00057a d2da      	RCALL SUBOPT_0x47
00057b e0e2      	LDI  R30,LOW(2)
00057c d41b      	RCALL __EEPROMWRB
                 ; 0000 0279         break;
                 _0xF5:
00057d c017      	RJMP _0xF2
                 ; 0000 027A         case 1:
                 _0xF3:
00057e d20d      	RCALL SUBOPT_0x16
00057f f451      	BRNE _0xF6
                 ; 0000 027B         showStringReady(ONE);
000580 e1a0      	LDI  R26,LOW(16)
000581 d2d6      	RCALL SUBOPT_0x48
                 ; 0000 027C         if(checkVolumeRight()){alarmSet=2;}
000582 f019      	BREQ _0xF7
000583 d2d1      	RCALL SUBOPT_0x47
000584 e0e2      	LDI  R30,LOW(2)
000585 d412      	RCALL __EEPROMWRB
                 ; 0000 027D         if(checkVolumeLeft()){alarmSet=0;}
                 _0xF7:
000586 d2c6      	RCALL SUBOPT_0x45
000587 f009      	BREQ _0xF8
000588 d288      	RCALL SUBOPT_0x34
                 ; 0000 027E         break;
                 _0xF8:
000589 c00b      	RJMP _0xF2
                 ; 0000 027F         case 2:
                 _0xF6:
00058a d1f5      	RCALL SUBOPT_0x13
00058b f449      	BRNE _0xF2
                 ; 0000 0280         showStringReady(EVER);
00058c e1a2      	LDI  R26,LOW(18)
00058d d2ca      	RCALL SUBOPT_0x48
                 ; 0000 0281         if(checkVolumeRight()){alarmSet=0;}
00058e f009      	BREQ _0xFA
00058f d281      	RCALL SUBOPT_0x34
                 ; 0000 0282         if(checkVolumeLeft()){alarmSet=1;}
                 _0xFA:
000590 d2bc      	RCALL SUBOPT_0x45
000591 f019      	BREQ _0xFB
000592 d2c2      	RCALL SUBOPT_0x47
000593 e0e1      	LDI  R30,LOW(1)
000594 d403      	RCALL __EEPROMWRB
                 ; 0000 0283         break;
                 _0xFB:
                 ; 0000 0284         }
                 _0xF2:
                 ; 0000 0285         volumeCheck();
000595 dcdf      	RCALL _volumeCheck
                 ; 0000 0286     }
000596 cfd6      	RJMP _0xED
                 _0xEF:
                 ; 0000 0287     if(alarmSet){
000597 d272      	RCALL SUBOPT_0x32
000598 30e0      	CPI  R30,0
000599 f199      	BREQ _0xFC
                 ; 0000 0288         resetClickState();
00059a dccc      	RCALL _resetClickState
                 ; 0000 0289         showString(2,h,1);
00059b d231      	RCALL SUBOPT_0x26
00059c d279      	RCALL SUBOPT_0x35
                 ; 0000 028A         showString(2,m,2);
00059d 927a      	ST   -Y,R7
00059e d240      	RCALL SUBOPT_0x2B
                 ; 0000 028B         blinkEditNumber(1);
00059f e0a1      	LDI  R26,LOW(1)
0005a0 ddd1      	RCALL _blinkEditNumber
                 ; 0000 028C     while (clickState==0 & runnigState==MENU)
                 _0xFD:
0005a1 d2a1      	RCALL SUBOPT_0x42
0005a2 d2a3      	RCALL SUBOPT_0x43
0005a3 f079      	BREQ _0xFF
                 ; 0000 028D     {
                 ; 0000 028E         volumeCheck();
0005a4 d2a4      	RCALL SUBOPT_0x44
                 ; 0000 028F         if(checkVolumeRight()){if(alHour1<24)alHour1++;}
0005a5 f019      	BREQ _0x100
0005a6 3118      	CPI  R17,24
0005a7 f408      	BRSH _0x101
0005a8 5f1f      	SUBI R17,-1
                 _0x101:
                 ; 0000 0290         if(checkVolumeLeft()){if(alHour1>0)alHour1--;}
                 _0x100:
0005a9 d2a3      	RCALL SUBOPT_0x45
0005aa f019      	BREQ _0x102
0005ab 3011      	CPI  R17,1
0005ac f008      	BRLO _0x103
0005ad 5011      	SUBI R17,1
                 _0x103:
                 ; 0000 0291         showString(2,alHour1,1);
                 _0x102:
0005ae d21e      	RCALL SUBOPT_0x26
0005af 931a      	ST   -Y,R17
0005b0 e0a1      	LDI  R26,LOW(1)
0005b1 dc57      	RCALL _showString
                 ; 0000 0292     }
0005b2 cfee      	RJMP _0xFD
                 _0xFF:
                 ; 0000 0293     resetClickState();
0005b3 d28c      	RCALL SUBOPT_0x41
                 ; 0000 0294     blinkEditNumber(2);
                 ; 0000 0295     while (clickState==0 & runnigState==MENU)
                 _0x104:
0005b4 d28e      	RCALL SUBOPT_0x42
0005b5 d290      	RCALL SUBOPT_0x43
0005b6 f071      	BREQ _0x106
                 ; 0000 0296     {
                 ; 0000 0297         volumeCheck();
0005b7 d291      	RCALL SUBOPT_0x44
                 ; 0000 0298         if(checkVolumeRight()){if(alMinute1<59)alMinute1++;}
0005b8 f019      	BREQ _0x107
0005b9 330b      	CPI  R16,59
0005ba f408      	BRSH _0x108
0005bb 5f0f      	SUBI R16,-1
                 _0x108:
                 ; 0000 0299         if(checkVolumeLeft()){if(alMinute1>0)alMinute1--;}
                 _0x107:
0005bc d290      	RCALL SUBOPT_0x45
0005bd f019      	BREQ _0x109
0005be 3001      	CPI  R16,1
0005bf f008      	BRLO _0x10A
0005c0 5001      	SUBI R16,1
                 _0x10A:
                 ; 0000 029A         showString(2,alMinute1,2);
                 _0x109:
0005c1 d20b      	RCALL SUBOPT_0x26
0005c2 930a      	ST   -Y,R16
0005c3 d21b      	RCALL SUBOPT_0x2B
                 ; 0000 029B     }
0005c4 cfef      	RJMP _0x104
                 _0x106:
                 ; 0000 029C     alHour=alHour1;alMinute=alMinute1;
0005c5 2fe1      	MOV  R30,R17
0005c6 e0a1      	LDI  R26,LOW(_alHour)
0005c7 e0b0      	LDI  R27,HIGH(_alHour)
0005c8 d3cf      	RCALL __EEPROMWRB
0005c9 2fe0      	MOV  R30,R16
0005ca e0a0      	LDI  R26,LOW(_alMinute)
0005cb e0b0      	LDI  R27,HIGH(_alMinute)
0005cc d3cb      	RCALL __EEPROMWRB
                 ; 0000 029D     }
                 ; 0000 029E     exitMenu();
                 _0xFC:
                 _0x20A0008:
0005cd de43      	RCALL _exitMenu
                 ; 0000 029F }
0005ce 9109      	LD   R16,Y+
0005cf 9119      	LD   R17,Y+
0005d0 9508      	RET
                 ; .FEND
                 ;void setMuteMenu(){
                 ; 0000 02A0 void setMuteMenu(){
                 _setMuteMenu:
                 ; .FSTART _setMuteMenu
                 ; 0000 02A1     resetClickState();
0005d1 dc95      	RCALL _resetClickState
                 ; 0000 02A2     while (clickState==0 & runnigState==MENU)
                 _0x10B:
0005d2 d270      	RCALL SUBOPT_0x42
0005d3 d272      	RCALL SUBOPT_0x43
0005d4 f0d1      	BREQ _0x10D
                 ; 0000 02A3     {   switch (muteState)
0005d5 91e0 016e 	LDS  R30,_muteState
0005d7 d21a      	RCALL SUBOPT_0x2E
                 ; 0000 02A4          {
                 ; 0000 02A5         case 0:
0005d8 f449      	BRNE _0x111
                 ; 0000 02A6         showStringReady(OFF);
0005d9 d276      	RCALL SUBOPT_0x46
                 ; 0000 02A7         if(checkVolumeRight()){muteState=1;}
0005da f011      	BREQ _0x112
0005db e0e1      	LDI  R30,LOW(1)
0005dc d27f      	RCALL SUBOPT_0x49
                 ; 0000 02A8         if(checkVolumeLeft()){muteState=1;}
                 _0x112:
0005dd d26f      	RCALL SUBOPT_0x45
0005de f011      	BREQ _0x113
0005df e0e1      	LDI  R30,LOW(1)
0005e0 d27b      	RCALL SUBOPT_0x49
                 ; 0000 02A9         break;
                 _0x113:
0005e1 c00b      	RJMP _0x110
                 ; 0000 02AA         case 1:
                 _0x111:
0005e2 d1a9      	RCALL SUBOPT_0x16
0005e3 f449      	BRNE _0x110
                 ; 0000 02AB         showStringReady(ON);
0005e4 e0ad      	LDI  R26,LOW(13)
0005e5 d272      	RCALL SUBOPT_0x48
                 ; 0000 02AC         if(checkVolumeRight()){muteState=0;}
0005e6 f011      	BREQ _0x115
0005e7 e0e0      	LDI  R30,LOW(0)
0005e8 d273      	RCALL SUBOPT_0x49
                 ; 0000 02AD         if(checkVolumeLeft()){muteState=0;}
                 _0x115:
0005e9 d263      	RCALL SUBOPT_0x45
0005ea f011      	BREQ _0x116
0005eb e0e0      	LDI  R30,LOW(0)
0005ec d26f      	RCALL SUBOPT_0x49
                 ; 0000 02AE         break;
                 _0x116:
                 ; 0000 02AF         }
                 _0x110:
                 ; 0000 02B0         volumeCheck();
0005ed dc87      	RCALL _volumeCheck
                 ; 0000 02B1     }
0005ee cfe3      	RJMP _0x10B
                 _0x10D:
                 ; 0000 02B2     muteState1=muteState;
0005ef 91e0 016e 	LDS  R30,_muteState
0005f1 e0a4      	LDI  R26,LOW(_muteState1)
0005f2 e0b0      	LDI  R27,HIGH(_muteState1)
                 _0x20A0007:
0005f3 d3a4      	RCALL __EEPROMWRB
                 ; 0000 02B3      exitMenu();
                 _0x20A0006:
0005f4 de1c      	RCALL _exitMenu
                 ; 0000 02B4 }
0005f5 9508      	RET
                 ; .FEND
                 ;void fastEditBrightnessMenu(){
                 ; 0000 02B5 void fastEditBrightnessMenu(){
                 _fastEditBrightnessMenu:
                 ; .FSTART _fastEditBrightnessMenu
                 ; 0000 02B6             dotBlink(OFF);
0005f6 d1c3      	RCALL SUBOPT_0x20
                 ; 0000 02B7             if(checkVolumeRight()){fastEditBrightness(SUM);}
0005f7 d267      	RCALL SUBOPT_0x4A
0005f8 f011      	BREQ _0x117
0005f9 e0ab      	LDI  R26,LOW(11)
0005fa dcab      	RCALL _fastEditBrightness
                 ; 0000 02B8             if(checkVolumeLeft()){fastEditBrightness(MINUS);}
                 _0x117:
0005fb d251      	RCALL SUBOPT_0x45
0005fc f011      	BREQ _0x118
0005fd e0ac      	LDI  R26,LOW(12)
0005fe dca7      	RCALL _fastEditBrightness
                 ; 0000 02B9 }
                 _0x118:
0005ff 9508      	RET
                 ; .FEND
                 ;void showMenu(){
                 ; 0000 02BA void showMenu(){
                 _showMenu:
                 ; .FSTART _showMenu
                 ; 0000 02BB     dotBlink(OFF);
000600 d1b9      	RCALL SUBOPT_0x20
                 ; 0000 02BC     switch (menuPosition)
000601 2ded      	MOV  R30,R13
000602 e0f0      	LDI  R31,0
                 ; 0000 02BD     {
                 ; 0000 02BE     case SETTIME:
000603 d184      	RCALL SUBOPT_0x15
000604 f469      	BRNE _0x11C
                 ; 0000 02BF         showStringReady(CLOCK);
000605 e0af      	LDI  R26,LOW(15)
000606 d25b      	RCALL SUBOPT_0x4B
                 ; 0000 02C0         if(clickState)setTimeMenu();
000607 f009      	BREQ _0x11D
000608 deb4      	RCALL _setTimeMenu
                 ; 0000 02C1         if(checkVolumeRight())menuPosition=SETDATE;
                 _0x11D:
000609 d255      	RCALL SUBOPT_0x4A
00060a f011      	BREQ _0x11E
00060b e0e5      	LDI  R30,LOW(5)
00060c 2ede      	MOV  R13,R30
                 ; 0000 02C2         if(checkVolumeLeft())menuPosition=EXIT;
                 _0x11E:
00060d d23f      	RCALL SUBOPT_0x45
00060e f011      	BREQ _0x11F
00060f e0e7      	LDI  R30,LOW(7)
000610 2ede      	MOV  R13,R30
                 ; 0000 02C3         break;
                 _0x11F:
000611 c050      	RJMP _0x11B
                 ; 0000 02C4     case SETDATE:
                 _0x11C:
000612 30e5      	CPI  R30,LOW(0x5)
000613 e0a0      	LDI  R26,HIGH(0x5)
000614 07fa      	CPC  R31,R26
000615 f469      	BRNE _0x120
                 ; 0000 02C5         showStringReady(SHOWDATE);
000616 e0a2      	LDI  R26,LOW(2)
000617 d24a      	RCALL SUBOPT_0x4B
                 ; 0000 02C6         if(clickState)setDateMenu();
000618 f009      	BREQ _0x121
000619 ded6      	RCALL _setDateMenu
                 ; 0000 02C7         if(checkVolumeRight())menuPosition=SETALARM;
                 _0x121:
00061a d244      	RCALL SUBOPT_0x4A
00061b f011      	BREQ _0x122
00061c e0e6      	LDI  R30,LOW(6)
00061d 2ede      	MOV  R13,R30
                 ; 0000 02C8         if(checkVolumeLeft())menuPosition=SETTIME;
                 _0x122:
00061e d22e      	RCALL SUBOPT_0x45
00061f f011      	BREQ _0x123
000620 e0e4      	LDI  R30,LOW(4)
000621 2ede      	MOV  R13,R30
                 ; 0000 02C9         break;
                 _0x123:
000622 c03f      	RJMP _0x11B
                 ; 0000 02CA     case SETALARM:
                 _0x120:
000623 30e6      	CPI  R30,LOW(0x6)
000624 e0a0      	LDI  R26,HIGH(0x6)
000625 07fa      	CPC  R31,R26
000626 f469      	BRNE _0x124
                 ; 0000 02CB         showStringReady(ALARM);
000627 e0a9      	LDI  R26,LOW(9)
000628 d239      	RCALL SUBOPT_0x4B
                 ; 0000 02CC         if(clickState)setAlarmMenu();
000629 f009      	BREQ _0x125
00062a df3b      	RCALL _setAlarmMenu
                 ; 0000 02CD         if(checkVolumeRight())menuPosition=BRIGHTNESS;
                 _0x125:
00062b d233      	RCALL SUBOPT_0x4A
00062c f011      	BREQ _0x126
00062d e0e8      	LDI  R30,LOW(8)
00062e 2ede      	MOV  R13,R30
                 ; 0000 02CE         if(checkVolumeLeft())menuPosition=SETDATE;
                 _0x126:
00062f d21d      	RCALL SUBOPT_0x45
000630 f011      	BREQ _0x127
000631 e0e5      	LDI  R30,LOW(5)
000632 2ede      	MOV  R13,R30
                 ; 0000 02CF         break;
                 _0x127:
000633 c02e      	RJMP _0x11B
                 ; 0000 02D0     case BRIGHTNESS:
                 _0x124:
000634 d15f      	RCALL SUBOPT_0x18
000635 f469      	BRNE _0x128
                 ; 0000 02D1         showStringReady(BRIGHTNESS);
000636 e0a8      	LDI  R26,LOW(8)
000637 d22a      	RCALL SUBOPT_0x4B
                 ; 0000 02D2         if(clickState)setBrightnessMenu();
000638 f009      	BREQ _0x129
000639 de66      	RCALL _setBrightnessMenu
                 ; 0000 02D3         if(checkVolumeRight())menuPosition=MUTE;
                 _0x129:
00063a d224      	RCALL SUBOPT_0x4A
00063b f011      	BREQ _0x12A
00063c e0ea      	LDI  R30,LOW(10)
00063d 2ede      	MOV  R13,R30
                 ; 0000 02D4         if(checkVolumeLeft())menuPosition=SETALARM;
                 _0x12A:
00063e d20e      	RCALL SUBOPT_0x45
00063f f011      	BREQ _0x12B
000640 e0e6      	LDI  R30,LOW(6)
000641 2ede      	MOV  R13,R30
                 ; 0000 02D5         break;
                 _0x12B:
000642 c01f      	RJMP _0x11B
                 ; 0000 02D6         case MUTE:
                 _0x128:
000643 30ea      	CPI  R30,LOW(0xA)
000644 e0a0      	LDI  R26,HIGH(0xA)
000645 07fa      	CPC  R31,R26
000646 f469      	BRNE _0x12C
                 ; 0000 02D7         showStringReady(BIP);
000647 e1a1      	LDI  R26,LOW(17)
000648 d219      	RCALL SUBOPT_0x4B
                 ; 0000 02D8         if(clickState)setMuteMenu();
000649 f009      	BREQ _0x12D
00064a df86      	RCALL _setMuteMenu
                 ; 0000 02D9         if(checkVolumeRight())menuPosition=EXIT;
                 _0x12D:
00064b d213      	RCALL SUBOPT_0x4A
00064c f011      	BREQ _0x12E
00064d e0e7      	LDI  R30,LOW(7)
00064e 2ede      	MOV  R13,R30
                 ; 0000 02DA         if(checkVolumeLeft())menuPosition=BRIGHTNESS;
                 _0x12E:
00064f d1fd      	RCALL SUBOPT_0x45
000650 f011      	BREQ _0x12F
000651 e0e8      	LDI  R30,LOW(8)
000652 2ede      	MOV  R13,R30
                 ; 0000 02DB         break;
                 _0x12F:
000653 c00e      	RJMP _0x11B
                 ; 0000 02DC     case EXIT:
                 _0x12C:
000654 d13b      	RCALL SUBOPT_0x17
000655 f461      	BRNE _0x11B
                 ; 0000 02DD         showStringReady(EXIT);
000656 e0a7      	LDI  R26,LOW(7)
000657 d20a      	RCALL SUBOPT_0x4B
                 ; 0000 02DE         if(clickState)exitMenu();
000658 f009      	BREQ _0x131
000659 ddb7      	RCALL _exitMenu
                 ; 0000 02DF         if(checkVolumeRight())menuPosition=SETTIME;
                 _0x131:
00065a d204      	RCALL SUBOPT_0x4A
00065b f011      	BREQ _0x132
00065c e0e4      	LDI  R30,LOW(4)
00065d 2ede      	MOV  R13,R30
                 ; 0000 02E0         if(checkVolumeLeft())menuPosition=MUTE;
                 _0x132:
00065e d1ee      	RCALL SUBOPT_0x45
00065f f011      	BREQ _0x133
000660 e0ea      	LDI  R30,LOW(10)
000661 2ede      	MOV  R13,R30
                 ; 0000 02E1         break;
                 _0x133:
                 ; 0000 02E2     }
                 _0x11B:
                 ; 0000 02E3 }
000662 9508      	RET
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 02E6 {
                 _main:
                 ; .FSTART _main
                 ; 0000 02E7 portConfig();
000663 d051      	RCALL _portConfig
                 ; 0000 02E8 startTimers();
000664 d028      	RCALL _startTimers
                 ; 0000 02E9 startIntrupts();
000665 d047      	RCALL _startIntrupts
                 ; 0000 02EA #asm("sei")
000666 9478      	sei
                 ; 0000 02EB i2c_init();
000667 d226      	RCALL _i2c_init
                 ; 0000 02EC rtc_init(0,0,0);
000668 e0e0      	LDI  R30,LOW(0)
000669 93ea      	ST   -Y,R30
00066a 93ea      	ST   -Y,R30
00066b e0a0      	LDI  R26,LOW(0)
00066c d05c      	RCALL _rtc_init
                 ; 0000 02ED brightness(brightnessMem);
00066d e0a2      	LDI  R26,LOW(_brightnessMem)
00066e e0b0      	LDI  R27,HIGH(_brightnessMem)
00066f d31c      	RCALL __EEPROMRDB
000670 2fae      	MOV  R26,R30
000671 dcbc      	RCALL _brightness
                 ; 0000 02EE brightnessSet=brightnessMem;
000672 e0a2      	LDI  R26,LOW(_brightnessMem)
000673 e0b0      	LDI  R27,HIGH(_brightnessMem)
000674 d317      	RCALL __EEPROMRDB
000675 d154      	RCALL SUBOPT_0x25
                 ; 0000 02EF 
                 ; 0000 02F0 while (1)
                 _0x134:
                 ; 0000 02F1       {
                 ; 0000 02F2             volumeCheck();
000676 dbfe      	RCALL _volumeCheck
                 ; 0000 02F3             switch (runnigState)
000677 2dea      	MOV  R30,R10
000678 d179      	RCALL SUBOPT_0x2E
                 ; 0000 02F4             {
                 ; 0000 02F5             case HOME:
000679 f411      	BRNE _0x13A
                 ; 0000 02F6             showClock();
00067a dd0d      	RCALL _showClock
                 ; 0000 02F7             break;
00067b c00f      	RJMP _0x139
                 ; 0000 02F8             case MENU:
                 _0x13A:
00067c d107      	RCALL SUBOPT_0x14
00067d f411      	BRNE _0x13B
                 ; 0000 02F9             showMenu();
00067e df81      	RCALL _showMenu
                 ; 0000 02FA             break;
00067f c00b      	RJMP _0x139
                 ; 0000 02FB             case ALARM:
                 _0x13B:
000680 d117      	RCALL SUBOPT_0x19
000681 f411      	BRNE _0x13C
                 ; 0000 02FC             playAlarm();
000682 dd74      	RCALL _playAlarm
                 ; 0000 02FD             break;
000683 c007      	RJMP _0x139
                 ; 0000 02FE             case BRIGHTNESSHOME :
                 _0x13C:
000684 d107      	RCALL SUBOPT_0x16
000685 f411      	BRNE _0x13D
                 ; 0000 02FF             fastEditBrightnessMenu();
000686 df6f      	RCALL _fastEditBrightnessMenu
                 ; 0000 0300             break;
000687 c003      	RJMP _0x139
                 ; 0000 0301             case SHOWDATE:
                 _0x13D:
000688 d0f7      	RCALL SUBOPT_0x13
000689 f409      	BRNE _0x139
                 ; 0000 0302             showDate();
00068a dd45      	RCALL _showDate
                 ; 0000 0303             break;
                 ; 0000 0304             }
                 _0x139:
                 ; 0000 0305       }
00068b cfea      	RJMP _0x134
                 ; 0000 0306 }
                 _0x13F:
00068c cfff      	RJMP _0x13F
                 ; .FEND
                 ;
                 ;void stopTimers(){
                 ; 0000 0308 void stopTimers(){
                 ; 0000 0309 ASSR=0<<AS2;
                 ; 0000 030A TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
                 ; 0000 030B TCNT2=0x00;
                 ; 0000 030C TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
                 ; 0000 030D }
                 ;void startTimers(){
                 ; 0000 030E void startTimers(){
                 _startTimers:
                 ; .FSTART _startTimers
                 ; 0000 030F ASSR=0<<AS2;
00068d e0e0      	LDI  R30,LOW(0)
00068e bde2      	OUT  0x22,R30
                 ; 0000 0310 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (1<<CS21) | (1<<CS20);
00068f e0e3      	LDI  R30,LOW(3)
000690 bde5      	OUT  0x25,R30
                 ; 0000 0311 TCNT2=0x00;
000691 e0e0      	LDI  R30,LOW(0)
000692 bde4      	OUT  0x24,R30
                 ; 0000 0312 OCR2=0xff;
000693 efef      	LDI  R30,LOW(255)
000694 bde3      	OUT  0x23,R30
                 ; 0000 0313 TIMSK=(1<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<TOIE0);
000695 ece4      	LDI  R30,LOW(196)
000696 bfe9      	OUT  0x39,R30
                 ; 0000 0314 }
000697 9508      	RET
                 ; .FEND
                 ;void startCounterTimer(){
                 ; 0000 0315 void startCounterTimer(){
                 _startCounterTimer:
                 ; .FSTART _startCounterTimer
                 ; 0000 0316 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000698 e0e0      	LDI  R30,LOW(0)
000699 bdef      	OUT  0x2F,R30
                 ; 0000 0317 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
00069a e0e3      	LDI  R30,LOW(3)
00069b bdee      	OUT  0x2E,R30
                 ; 0000 0318 TCNT1H=0x9E;
00069c e9ee      	LDI  R30,LOW(158)
00069d bded      	OUT  0x2D,R30
                 ; 0000 0319 TCNT1L=0x58;
00069e e5e8      	LDI  R30,LOW(88)
00069f c004      	RJMP _0x20A0005
                 ; 0000 031A ICR1H=0x00;
                 ; 0000 031B ICR1L=0x00;
                 ; 0000 031C OCR1AH=0x00;
                 ; 0000 031D OCR1AL=0x00;
                 ; 0000 031E OCR1BH=0x00;
                 ; 0000 031F OCR1BL=0x00;
                 ; 0000 0320 }
                 ; .FEND
                 ;void stopCounterTimer(){
                 ; 0000 0321 void stopCounterTimer(){
                 _stopCounterTimer:
                 ; .FSTART _stopCounterTimer
                 ; 0000 0322 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0006a0 e0e0      	LDI  R30,LOW(0)
0006a1 bdef      	OUT  0x2F,R30
                 ; 0000 0323 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
0006a2 bdee      	OUT  0x2E,R30
                 ; 0000 0324 TCNT1H=0x00;
0006a3 bded      	OUT  0x2D,R30
                 ; 0000 0325 TCNT1L=0x00;
                 _0x20A0005:
0006a4 bdec      	OUT  0x2C,R30
                 ; 0000 0326 ICR1H=0x00;
0006a5 e0e0      	LDI  R30,LOW(0)
0006a6 bde7      	OUT  0x27,R30
                 ; 0000 0327 ICR1L=0x00;
0006a7 bde6      	OUT  0x26,R30
                 ; 0000 0328 OCR1AH=0x00;
0006a8 bdeb      	OUT  0x2B,R30
                 ; 0000 0329 OCR1AL=0x00;
0006a9 bdea      	OUT  0x2A,R30
                 ; 0000 032A OCR1BH=0x00;
0006aa bde9      	OUT  0x29,R30
                 ; 0000 032B OCR1BL=0x00;
0006ab bde8      	OUT  0x28,R30
                 ; 0000 032C }
0006ac 9508      	RET
                 ; .FEND
                 ;void startIntrupts(){
                 ; 0000 032D void startIntrupts(){
                 _startIntrupts:
                 ; .FSTART _startIntrupts
                 ; 0000 032E GICR|=(1<<INT1) | (1<<INT0);
0006ad b7eb      	IN   R30,0x3B
0006ae 6ce0      	ORI  R30,LOW(0xC0)
0006af bfeb      	OUT  0x3B,R30
                 ; 0000 032F MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
0006b0 e0ea      	LDI  R30,LOW(10)
0006b1 bfe5      	OUT  0x35,R30
                 ; 0000 0330 GIFR=(1<<INTF1) | (1<<INTF0);
0006b2 ece0      	LDI  R30,LOW(192)
0006b3 bfea      	OUT  0x3A,R30
                 ; 0000 0331 }
0006b4 9508      	RET
                 ; .FEND
                 ;void stopIntrupts(){
                 ; 0000 0332 void stopIntrupts(){
                 ; 0000 0333  GICR|=(0<<INT1) | (0<<INT0);
                 ; 0000 0334 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
                 ; 0000 0335 GIFR=(0<<INTF1) | (0<<INTF0);
                 ; 0000 0336 }
                 ;void portConfig(){
                 ; 0000 0337 void portConfig(){
                 _portConfig:
                 ; .FSTART _portConfig
                 ; 0000 0338 DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
0006b5 e7ef      	LDI  R30,LOW(127)
0006b6 bbe7      	OUT  0x17,R30
                 ; 0000 0339 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0006b7 e0e0      	LDI  R30,LOW(0)
0006b8 bbe8      	OUT  0x18,R30
                 ; 0000 033A DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
0006b9 e0ef      	LDI  R30,LOW(15)
0006ba bbe4      	OUT  0x14,R30
                 ; 0000 033B PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0006bb e0e0      	LDI  R30,LOW(0)
0006bc bbe5      	OUT  0x15,R30
                 ; 0000 033C DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (1<<DDD1) | (0<<DDD0);
0006bd e0e2      	LDI  R30,LOW(2)
0006be bbe1      	OUT  0x11,R30
                 ; 0000 033D PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (0<<PORTD1) | (1<<PORTD0);
0006bf e0ed      	LDI  R30,LOW(13)
0006c0 bbe2      	OUT  0x12,R30
                 ; 0000 033E }
0006c1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _rtc_write:
                 ; .FSTART _rtc_write
0006c2 d1a2      	RCALL SUBOPT_0x4C
0006c3 81a9      	LDD  R26,Y+1
0006c4 d202      	RCALL _i2c_write
0006c5 81a8      	LD   R26,Y
0006c6 d1a2      	RCALL SUBOPT_0x4D
                 _0x20A0004:
0006c7 9622      	ADIW R28,2
0006c8 9508      	RET
                 ; .FEND
                 _rtc_init:
                 ; .FSTART _rtc_init
0006c9 93aa      	ST   -Y,R26
0006ca 81ea      	LDD  R30,Y+2
0006cb 70e3      	ANDI R30,LOW(0x3)
0006cc 83ea      	STD  Y+2,R30
0006cd 81e9      	LDD  R30,Y+1
0006ce 30e0      	CPI  R30,0
0006cf f019      	BREQ _0x2000003
0006d0 81ea      	LDD  R30,Y+2
0006d1 61e0      	ORI  R30,0x10
0006d2 83ea      	STD  Y+2,R30
                 _0x2000003:
0006d3 81e8      	LD   R30,Y
0006d4 30e0      	CPI  R30,0
0006d5 f019      	BREQ _0x2000004
0006d6 81ea      	LDD  R30,Y+2
0006d7 68e0      	ORI  R30,0x80
0006d8 83ea      	STD  Y+2,R30
                 _0x2000004:
0006d9 d191      	RCALL SUBOPT_0x4E
0006da e0a7      	LDI  R26,LOW(7)
0006db d1eb      	RCALL _i2c_write
0006dc 81aa      	LDD  R26,Y+2
0006dd c014      	RJMP _0x20A0002
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
0006de d04d      	RCALL SUBOPT_0x1
0006df d18b      	RCALL SUBOPT_0x4E
0006e0 e0a0      	LDI  R26,LOW(0)
0006e1 d187      	RCALL SUBOPT_0x4D
0006e2 d18b      	RCALL SUBOPT_0x4F
0006e3 d18f      	RCALL SUBOPT_0x50
0006e4 d092      	RCALL SUBOPT_0x11
0006e5 d18f      	RCALL SUBOPT_0x51
0006e6 d192      	RCALL SUBOPT_0x52
0006e7 81ac      	LDD  R26,Y+4
0006e8 81bd      	LDD  R27,Y+4+1
0006e9 93ec      	ST   X,R30
0006ea d1b7      	RCALL _i2c_stop
0006eb 9626      	ADIW R28,6
0006ec 9508      	RET
                 ; .FEND
                 _rtc_set_time:
                 ; .FSTART _rtc_set_time
0006ed d177      	RCALL SUBOPT_0x4C
0006ee e0a0      	LDI  R26,LOW(0)
0006ef d18f      	RCALL SUBOPT_0x53
0006f0 d193      	RCALL SUBOPT_0x54
0006f1 d197      	RCALL SUBOPT_0x55
                 _0x20A0002:
0006f2 d1d4      	RCALL _i2c_write
0006f3 d1ae      	RCALL _i2c_stop
                 _0x20A0003:
0006f4 9623      	ADIW R28,3
0006f5 9508      	RET
                 ; .FEND
                 _rtc_get_date:
                 ; .FSTART _rtc_get_date
0006f6 d035      	RCALL SUBOPT_0x1
0006f7 d173      	RCALL SUBOPT_0x4E
0006f8 e0a3      	LDI  R26,LOW(3)
0006f9 d16f      	RCALL SUBOPT_0x4D
0006fa d173      	RCALL SUBOPT_0x4F
0006fb 81ae      	LDD  R26,Y+6
0006fc 81bf      	LDD  R27,Y+6+1
0006fd d177      	RCALL SUBOPT_0x51
0006fe 81ac      	LDD  R26,Y+4
0006ff 81bd      	LDD  R27,Y+4+1
000700 d174      	RCALL SUBOPT_0x51
000701 d177      	RCALL SUBOPT_0x52
000702 d074      	RCALL SUBOPT_0x11
000703 93ec      	ST   X,R30
000704 d19d      	RCALL _i2c_stop
000705 9628      	ADIW R28,8
000706 9508      	RET
                 ; .FEND
                 _rtc_set_date:
                 ; .FSTART _rtc_set_date
000707 d15d      	RCALL SUBOPT_0x4C
000708 e0a3      	LDI  R26,LOW(3)
000709 d1bd      	RCALL _i2c_write
00070a 81ab      	LDD  R26,Y+3
00070b d17d      	RCALL SUBOPT_0x55
00070c d177      	RCALL SUBOPT_0x54
00070d d171      	RCALL SUBOPT_0x53
00070e d15a      	RCALL SUBOPT_0x4D
                 _0x20A0001:
00070f 9624      	ADIW R28,4
000710 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
000711 93aa      	ST   -Y,R26
000712 81e8          ld   r30,y
000713 95e2          swap r30
000714 70ef          andi r30,0xf
000715 2fae          mov  r26,r30
000716 0faa          lsl  r26
000717 0faa          lsl  r26
000718 0fea          add  r30,r26
000719 0fee          lsl  r30
00071a 91a9          ld   r26,y+
00071b 70af          andi r26,0xf
00071c 0fea          add  r30,r26
00071d 9508          ret
                 ; .FEND
                 _bin2bcd:
                 ; .FSTART _bin2bcd
00071e 93aa      	ST   -Y,R26
00071f 91a9          ld   r26,y+
000720 27ee          clr  r30
                 bin2bcd0:
000721 50aa          subi r26,10
000722 f012          brmi bin2bcd1
000723 5fe0          subi r30,-16
000724 cffc          rjmp bin2bcd0
                 bin2bcd1:
000725 5fa6          subi r26,-10
000726 0fea          add  r30,r26
000727 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.ESEG
                 _alMinute:
000000           	.BYTE 0x1
                 _alHour:
000001           	.BYTE 0x1
                 _brightnessMem:
000002           	.BYTE 0x1
                 _alarmSet:
000003           	.BYTE 0x1
                 _muteState1:
000004           	.BYTE 0x1
                 
                 	.DSEG
                 _segmentPinState:
000160           	.BYTE 0x4
                 _disabeHomeTempState:
000164           	.BYTE 0x1
                 _seqNumber:
000165           	.BYTE 0x1
                 _counterBlinkNumber:
000166           	.BYTE 0x1
                 _blinkNumberChageState:
000167           	.BYTE 0x1
                 _portEnable:
000168           	.BYTE 0x5
                 _brightnessSet:
00016d           	.BYTE 0x1
                 _muteState:
00016e           	.BYTE 0x1
                 _ym:
00016f           	.BYTE 0x1
                 _mm:
000170           	.BYTE 0x1
                 _dm:
000171           	.BYTE 0x1
                 _w:
000172           	.BYTE 0x1
                 _tempSecondBip:
000173           	.BYTE 0x1
                 _ys:
000174           	.BYTE 0x2
                 _ms:
000176           	.BYTE 0x2
                 _ds:
000178           	.BYTE 0x2
                 _counterSecondTime:
00017a           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
000728 93aa      	ST   -Y,R26
000729 81e8      	LD   R30,Y
00072a e0f0      	LDI  R31,0
00072b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00072c 93ba      	ST   -Y,R27
00072d 93aa      	ST   -Y,R26
00072e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00072f 8dee      	LDD  R30,Y+30
000730 8dff      	LDD  R31,Y+30+1
000731 53e0      	SUBI R30,LOW(-2000)
000732 4ff8      	SBCI R31,HIGH(-2000)
000733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
000734 d1c2      	RCALL __CWD1
000735 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x4:
                +
000736 87ec     +STD Y + 12 , R30
000737 87fd     +STD Y + 12 + 1 , R31
000738 876e     +STD Y + 12 + 2 , R22
000739 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00073a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
                +
00073b 85ec     +LDD R30 , Y + 12
00073c 85fd     +LDD R31 , Y + 12 + 1
00073d 856e     +LDD R22 , Y + 12 + 2
00073e 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00073f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
000740 8dac      	LDD  R26,Y+28
000741 8dbd      	LDD  R27,Y+28+1
000742 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x7:
                +
000743 85ac     +LDD R26 , Y + 12
000744 85bd     +LDD R27 , Y + 12 + 1
000745 858e     +LDD R24 , Y + 12 + 2
000746 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000747 dfec      	RCALL SUBOPT_0x3
000748 d1a0      	RCALL __ADDD12
000749 cfec      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
                +
00074a 89a8     +LDD R26 , Y + 16
00074b 89b9     +LDD R27 , Y + 16 + 1
00074c 898a     +LDD R24 , Y + 16 + 2
00074d 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00074e e6ed     +LDI R30 , LOW ( 0x16D )
00074f e0f1     +LDI R31 , HIGH ( 0x16D )
000750 e060     +LDI R22 , BYTE3 ( 0x16D )
000751 e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
000752 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000753 8da8      	LDD  R26,Y+24
000754 8db9      	LDD  R27,Y+24+1
000755 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000756 93ed      	ST   X+,R30
000757 93fc      	ST   X,R31
000758 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
000759 87ea      	STD  Y+10,R30
00075a 87fb      	STD  Y+10+1,R31
00075b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
00075c 83ee      	STD  Y+6,R30
00075d 83ff      	STD  Y+6+1,R31
00075e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xD:
00075f 85aa      	LDD  R26,Y+10
000760 85bb      	LDD  R27,Y+10+1
000761 9790      	SBIW R26,32
000762 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0xE:
000763 81ee      	LDD  R30,Y+6
000764 81ff      	LDD  R31,Y+6+1
000765 9631      	ADIW R30,1
000766 dff5      	RCALL SUBOPT_0xC
000767 85ea      	LDD  R30,Y+10
000768 85fb      	LDD  R31,Y+10+1
000769 977f      	SBIW R30,31
00076a cfee      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xF:
00076b 85aa      	LDD  R26,Y+10
00076c 85bb      	LDD  R27,Y+10+1
00076d 975f      	SBIW R26,31
00076e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x10:
00076f 81ee      	LDD  R30,Y+6
000770 81ff      	LDD  R31,Y+6+1
000771 9631      	ADIW R30,1
000772 dfe9      	RCALL SUBOPT_0xC
000773 85ea      	LDD  R30,Y+10
000774 85fb      	LDD  R31,Y+10+1
000775 977e      	SBIW R30,30
000776 cfe2      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000777 81a8      	LD   R26,Y
000778 81b9      	LDD  R27,Y+1
000779 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
00077a 81e8      	LD   R30,Y
00077b e0f0      	LDI  R31,0
00077c 30e1      	CPI  R30,LOW(0x1)
00077d e0a0      	LDI  R26,HIGH(0x1)
00077e 07fa      	CPC  R31,R26
00077f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x13:
000780 30e2      	CPI  R30,LOW(0x2)
000781 e0a0      	LDI  R26,HIGH(0x2)
000782 07fa      	CPC  R31,R26
000783 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x14:
000784 30e3      	CPI  R30,LOW(0x3)
000785 e0a0      	LDI  R26,HIGH(0x3)
000786 07fa      	CPC  R31,R26
000787 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
000788 30e4      	CPI  R30,LOW(0x4)
000789 e0a0      	LDI  R26,HIGH(0x4)
00078a 07fa      	CPC  R31,R26
00078b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x16:
00078c 30e1      	CPI  R30,LOW(0x1)
00078d e0a0      	LDI  R26,HIGH(0x1)
00078e 07fa      	CPC  R31,R26
00078f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
000790 30e7      	CPI  R30,LOW(0x7)
000791 e0a0      	LDI  R26,HIGH(0x7)
000792 07fa      	CPC  R31,R26
000793 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
000794 30e8      	CPI  R30,LOW(0x8)
000795 e0a0      	LDI  R26,HIGH(0x8)
000796 07fa      	CPC  R31,R26
000797 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x19:
000798 30e9      	CPI  R30,LOW(0x9)
000799 e0a0      	LDI  R26,HIGH(0x9)
00079a 07fa      	CPC  R31,R26
00079b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
00079c 81e8      	LD   R30,Y
00079d e0f0      	LDI  R31,0
00079e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
00079f 5ae0      	SUBI R30,LOW(-_segmentPinState)
0007a0 4ffe      	SBCI R31,HIGH(-_segmentPinState)
0007a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1C:
0007a2 81a9      	LDD  R26,Y+1
0007a3 e0b0      	LDI  R27,0
0007a4 e0ea      	LDI  R30,LOW(10)
0007a5 e0f0      	LDI  R31,HIGH(10)
0007a6 d197      	RCALL __DIVW21
0007a7 2fae      	MOV  R26,R30
0007a8 c9cc      	RJMP _digitalWritePort
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1D:
0007a9 81a9      	LDD  R26,Y+1
0007aa 27bb      	CLR  R27
0007ab e0ea      	LDI  R30,LOW(10)
0007ac e0f0      	LDI  R31,HIGH(10)
0007ad d1ba      	RCALL __MODW21
0007ae 2fae      	MOV  R26,R30
0007af c9c5      	RJMP _digitalWritePort
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1E:
0007b0 bbe8      	OUT  0x18,R30
0007b1 2da5      	MOV  R26,R5
0007b2 c98c      	RJMP _changePositionNumber
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1F:
0007b3 e6e4      	LDI  R30,LOW(100)
0007b4 e0f0      	LDI  R31,HIGH(100)
0007b5 93fa      	ST   -Y,R31
0007b6 93ea      	ST   -Y,R30
0007b7 e0a0      	LDI  R26,LOW(0)
0007b8 e0b0      	LDI  R27,0
0007b9 c974      	RJMP _buzzer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x20:
0007ba e0ae      	LDI  R26,LOW(14)
0007bb c8a3      	RJMP _dotBlink
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
0007bc 91a0 017a 	LDS  R26,_counterSecondTime
0007be 91b0 017b 	LDS  R27,_counterSecondTime+1
0007c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x22:
0007c1 d13a      	RCALL __EQB12
0007c2 2e0e      	MOV  R0,R30
0007c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
0007c4 91a0 016d 	LDS  R26,_brightnessSet
0007c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x24:
0007c7 91e0 016d 	LDS  R30,_brightnessSet
0007c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x25:
0007ca 93e0 016d 	STS  _brightnessSet,R30
0007cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x26:
0007cd e0e2      	LDI  R30,LOW(2)
0007ce 93ea      	ST   -Y,R30
0007cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
0007d0 dff6      	RCALL SUBOPT_0x24
0007d1 93ea      	ST   -Y,R30
0007d2 e0a2      	LDI  R26,LOW(2)
0007d3 ca35      	RJMP _showString
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 48 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x28:
0007d4 e0e1      	LDI  R30,LOW(1)
0007d5 93ea      	ST   -Y,R30
0007d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x29:
0007d7 e6e2      	LDI  R30,LOW(98)
0007d8 93ea      	ST   -Y,R30
0007d9 e0a1      	LDI  R26,LOW(1)
0007da da2e      	RCALL _showString
0007db cff8      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0007dc e7e2      	LDI  R30,LOW(114)
0007dd 93ea      	ST   -Y,R30
0007de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x2B:
0007df e0a2      	LDI  R26,LOW(2)
0007e0 ca28      	RJMP _showString
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2C:
0007e1 93fa      	ST   -Y,R31
0007e2 93ea      	ST   -Y,R30
0007e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:46 WORDS
                 SUBOPT_0x2D:
0007e4 920a      	ST   -Y,R0
0007e5 921a      	ST   -Y,R1
0007e6 92fa      	ST   -Y,R15
0007e7 936a      	ST   -Y,R22
0007e8 937a      	ST   -Y,R23
0007e9 938a      	ST   -Y,R24
0007ea 939a      	ST   -Y,R25
0007eb 93aa      	ST   -Y,R26
0007ec 93ba      	ST   -Y,R27
0007ed 93ea      	ST   -Y,R30
0007ee 93fa      	ST   -Y,R31
0007ef b7ef      	IN   R30,SREG
0007f0 93ea      	ST   -Y,R30
0007f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2E:
0007f2 e0f0      	LDI  R31,0
0007f3 9730      	SBIW R30,0
0007f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2F:
0007f5 91e0 0166 	LDS  R30,_counterBlinkNumber
0007f7 5fef      	SUBI R30,-LOW(1)
0007f8 93e0 0166 	STS  _counterBlinkNumber,R30
0007fa 91e0 0165 	LDS  R30,_seqNumber
0007fc e0f0      	LDI  R31,0
0007fd cf8e      	RJMP SUBOPT_0x16
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
0007fe e0e1      	LDI  R30,LOW(1)
                +
0007ff 93e0 0169+STS _portEnable + ( 1 ) , R30
                 	__PUTB1MN _portEnable,1
                +
000801 93e0 016a+STS _portEnable + ( 2 ) , R30
                 	__PUTB1MN _portEnable,2
000803 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
000804 e0e1      	LDI  R30,LOW(1)
                +
000805 93e0 016b+STS _portEnable + ( 3 ) , R30
                 	__PUTB1MN _portEnable,3
                +
000807 93e0 016c+STS _portEnable + ( 4 ) , R30
                 	__PUTB1MN _portEnable,4
000809 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x32:
00080a e0a3      	LDI  R26,LOW(_alarmSet)
00080b e0b0      	LDI  R27,HIGH(_alarmSet)
00080c d17f      	RCALL __EEPROMRDB
00080d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x33:
00080e d0ed      	RCALL __EQB12
00080f 21e0      	AND  R30,R0
000810 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x34:
000811 e0a3      	LDI  R26,LOW(_alarmSet)
000812 e0b0      	LDI  R27,HIGH(_alarmSet)
000813 e0e0      	LDI  R30,LOW(0)
000814 d183      	RCALL __EEPROMWRB
000815 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x35:
000816 924a      	ST   -Y,R4
000817 e0a1      	LDI  R26,LOW(1)
000818 d9f0      	RCALL _showString
000819 cfb3      	RJMP SUBOPT_0x26
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x36:
00081a 91e0 016f 	LDS  R30,_ym
00081c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x37:
00081d 91e0 0170 	LDS  R30,_mm
00081f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38:
000820 91e0 0171 	LDS  R30,_dm
000822 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
000823 93ea      	ST   -Y,R30
000824 e0a1      	LDI  R26,LOW(1)
000825 d9e3      	RCALL _showString
000826 cfa6      	RJMP SUBOPT_0x26
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3A:
000827 93ea      	ST   -Y,R30
000828 cfb6      	RJMP SUBOPT_0x2B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x3B:
000829 93ea      	ST   -Y,R30
00082a e0a1      	LDI  R26,LOW(1)
00082b d9dd      	RCALL _showString
00082c cfa7      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3C:
00082d e6ef      	LDI  R30,LOW(111)
00082e 93ea      	ST   -Y,R30
00082f e0a3      	LDI  R26,LOW(3)
000830 d9d8      	RCALL _showString
000831 cfa2      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x3D:
000832 93ea      	ST   -Y,R30
000833 e0a4      	LDI  R26,LOW(4)
000834 c9d4      	RJMP _showString
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3E:
000835 e6e9      	LDI  R30,LOW(105)
000836 93ea      	ST   -Y,R30
000837 e0a3      	LDI  R26,LOW(3)
000838 d9d0      	RCALL _showString
000839 cf9a      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3F:
00083a 93ea      	ST   -Y,R30
00083b e0a3      	LDI  R26,LOW(3)
00083c d9cc      	RCALL _showString
00083d cf96      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
00083e e2ee      	LDI  R30,LOW(46)
00083f cfe9      	RJMP SUBOPT_0x3B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x41:
000840 da26      	RCALL _resetClickState
000841 e0a2      	LDI  R26,LOW(2)
000842 cb2f      	RJMP _blinkEditNumber
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x42:
000843 2dac      	MOV  R26,R12
000844 e0e0      	LDI  R30,LOW(0)
000845 cf7b      	RJMP SUBOPT_0x22
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x43:
000846 2daa      	MOV  R26,R10
000847 e0e3      	LDI  R30,LOW(3)
000848 cfc5      	RJMP SUBOPT_0x33
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x44:
000849 da2b      	RCALL _volumeCheck
00084a da9c      	RCALL _checkVolumeRight
00084b 30e0      	CPI  R30,0
00084c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x45:
00084d da9d      	RCALL _checkVolumeLeft
00084e 30e0      	CPI  R30,0
00084f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000850 e0ae      	LDI  R26,LOW(14)
000851 dbc6      	RCALL _showStringReady
000852 da94      	RCALL _checkVolumeRight
000853 30e0      	CPI  R30,0
000854 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
000855 e0a3      	LDI  R26,LOW(_alarmSet)
000856 e0b0      	LDI  R27,HIGH(_alarmSet)
000857 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x48:
000858 dbbf      	RCALL _showStringReady
000859 da8d      	RCALL _checkVolumeRight
00085a 30e0      	CPI  R30,0
00085b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x49:
00085c 93e0 016e 	STS  _muteState,R30
00085e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4A:
00085f da87      	RCALL _checkVolumeRight
000860 30e0      	CPI  R30,0
000861 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4B:
000862 dbb5      	RCALL _showStringReady
000863 20cc      	TST  R12
000864 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4C:
000865 93aa      	ST   -Y,R26
000866 d02c      	RCALL _i2c_start
000867 eda0      	LDI  R26,LOW(208)
000868 c05e      	RJMP _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4D:
000869 d05d      	RCALL _i2c_write
00086a c037      	RJMP _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4E:
00086b d027      	RCALL _i2c_start
00086c eda0      	LDI  R26,LOW(208)
00086d c059      	RJMP _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4F:
00086e d024      	RCALL _i2c_start
00086f eda1      	LDI  R26,LOW(209)
000870 d056      	RCALL _i2c_write
000871 e0a1      	LDI  R26,LOW(1)
000872 c039      	RJMP _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x50:
000873 2fae      	MOV  R26,R30
000874 ce9c      	RJMP _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x51:
000875 93ec      	ST   X,R30
000876 e0a1      	LDI  R26,LOW(1)
000877 d034      	RCALL _i2c_read
000878 cffa      	RJMP SUBOPT_0x50
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x52:
000879 81aa      	LDD  R26,Y+2
00087a 81bb      	LDD  R27,Y+2+1
00087b 93ec      	ST   X,R30
00087c e0a0      	LDI  R26,LOW(0)
00087d d02e      	RCALL _i2c_read
00087e cff4      	RJMP SUBOPT_0x50
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x53:
00087f d047      	RCALL _i2c_write
000880 81a8      	LD   R26,Y
000881 de9c      	RCALL _bin2bcd
000882 2fae      	MOV  R26,R30
000883 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x54:
000884 d042      	RCALL _i2c_write
000885 81a9      	LDD  R26,Y+1
000886 de97      	RCALL _bin2bcd
000887 2fae      	MOV  R26,R30
000888 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
000889 d03d      	RCALL _i2c_write
00088a 81aa      	LDD  R26,Y+2
00088b de92      	RCALL _bin2bcd
00088c 2fae      	MOV  R26,R30
00088d 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=4
                 	.equ __scl_bit=5
                 	.equ __i2c_port=0x15 ;PORTC
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00088e 98ad      	cbi  __i2c_port,__scl_bit
00088f 98ac      	cbi  __i2c_port,__sda_bit
000890 9aa5      	sbi  __i2c_dir,__scl_bit
000891 98a4      	cbi  __i2c_dir,__sda_bit
000892 c015      	rjmp __i2c_delay2
                 _i2c_start:
000893 98a4      	cbi  __i2c_dir,__sda_bit
000894 98a5      	cbi  __i2c_dir,__scl_bit
000895 27ee      	clr  r30
000896 0000      	nop
000897 9b9c      	sbis __i2c_pin,__sda_bit
000898 9508      	ret
000899 9b9d      	sbis __i2c_pin,__scl_bit
00089a 9508      	ret
00089b d004      	rcall __i2c_delay1
00089c 9aa4      	sbi  __i2c_dir,__sda_bit
00089d d002      	rcall __i2c_delay1
00089e 9aa5      	sbi  __i2c_dir,__scl_bit
00089f e0e1      	ldi  r30,1
                 __i2c_delay1:
0008a0 e06d      	ldi  r22,13
0008a1 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
0008a2 9aa4      	sbi  __i2c_dir,__sda_bit
0008a3 9aa5      	sbi  __i2c_dir,__scl_bit
0008a4 d003      	rcall __i2c_delay2
0008a5 98a5      	cbi  __i2c_dir,__scl_bit
0008a6 dff9      	rcall __i2c_delay1
0008a7 98a4      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
0008a8 e16b      	ldi  r22,27
                 __i2c_delay2l:
0008a9 956a      	dec  r22
0008aa f7f1      	brne __i2c_delay2l
0008ab 9508      	ret
                 _i2c_read:
0008ac e078      	ldi  r23,8
                 __i2c_read0:
0008ad 98a5      	cbi  __i2c_dir,__scl_bit
0008ae dff1      	rcall __i2c_delay1
                 __i2c_read3:
0008af 9b9d      	sbis __i2c_pin,__scl_bit
0008b0 cffe      	rjmp __i2c_read3
0008b1 dfee      	rcall __i2c_delay1
0008b2 9488      	clc
0008b3 999c      	sbic __i2c_pin,__sda_bit
0008b4 9408      	sec
0008b5 9aa5      	sbi  __i2c_dir,__scl_bit
0008b6 dff1      	rcall __i2c_delay2
0008b7 1fee      	rol  r30
0008b8 957a      	dec  r23
0008b9 f799      	brne __i2c_read0
0008ba 2f7a      	mov  r23,r26
0008bb 2377      	tst  r23
0008bc f411      	brne __i2c_read1
0008bd 98a4      	cbi  __i2c_dir,__sda_bit
0008be c001      	rjmp __i2c_read2
                 __i2c_read1:
0008bf 9aa4      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
0008c0 dfdf      	rcall __i2c_delay1
0008c1 98a5      	cbi  __i2c_dir,__scl_bit
0008c2 dfe5      	rcall __i2c_delay2
0008c3 9aa5      	sbi  __i2c_dir,__scl_bit
0008c4 dfdb      	rcall __i2c_delay1
0008c5 98a4      	cbi  __i2c_dir,__sda_bit
0008c6 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
0008c7 e078      	ldi  r23,8
                 __i2c_write0:
0008c8 0faa      	lsl  r26
0008c9 f410      	brcc __i2c_write1
0008ca 98a4      	cbi  __i2c_dir,__sda_bit
0008cb c001      	rjmp __i2c_write2
                 __i2c_write1:
0008cc 9aa4      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
0008cd dfda      	rcall __i2c_delay2
0008ce 98a5      	cbi  __i2c_dir,__scl_bit
0008cf dfd0      	rcall __i2c_delay1
                 __i2c_write3:
0008d0 9b9d      	sbis __i2c_pin,__scl_bit
0008d1 cffe      	rjmp __i2c_write3
0008d2 dfcd      	rcall __i2c_delay1
0008d3 9aa5      	sbi  __i2c_dir,__scl_bit
0008d4 957a      	dec  r23
0008d5 f791      	brne __i2c_write0
0008d6 98a4      	cbi  __i2c_dir,__sda_bit
0008d7 dfc8      	rcall __i2c_delay1
0008d8 98a5      	cbi  __i2c_dir,__scl_bit
0008d9 dfce      	rcall __i2c_delay2
0008da e0e1      	ldi  r30,1
0008db 999c      	sbic __i2c_pin,__sda_bit
0008dc 27ee      	clr  r30
0008dd 9aa5      	sbi  __i2c_dir,__scl_bit
0008de cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
0008df 9610      	adiw r26,0
0008e0 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0008e1 ed80     +LDI R24 , LOW ( 0x7D0 )
0008e2 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0008e3 9701     +SBIW R24 , 1
0008e4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0008e5 95a8      	wdr
0008e6 9711      	sbiw r26,1
0008e7 f7c9      	brne __delay_ms0
                 __delay_ms1:
0008e8 9508      	ret
                 
                 __ADDD12:
0008e9 0fea      	ADD  R30,R26
0008ea 1ffb      	ADC  R31,R27
0008eb 1f68      	ADC  R22,R24
0008ec 1f79      	ADC  R23,R25
0008ed 9508      	RET
                 
                 __SUBD21:
0008ee 1bae      	SUB  R26,R30
0008ef 0bbf      	SBC  R27,R31
0008f0 0b86      	SBC  R24,R22
0008f1 0b97      	SBC  R25,R23
0008f2 9508      	RET
                 
                 __ANEGW1:
0008f3 95f1      	NEG  R31
0008f4 95e1      	NEG  R30
0008f5 40f0      	SBCI R31,0
0008f6 9508      	RET
                 
                 __CWD1:
0008f7 2f6f      	MOV  R22,R31
0008f8 0f66      	ADD  R22,R22
0008f9 0b66      	SBC  R22,R22
0008fa 2f76      	MOV  R23,R22
0008fb 9508      	RET
                 
                 __EQB12:
0008fc 17ea      	CP   R30,R26
0008fd e0e1      	LDI  R30,1
0008fe f009      	BREQ __EQB12T
0008ff 27ee      	CLR  R30
                 __EQB12T:
000900 9508      	RET
                 
                 __LTB12U:
000901 17ae      	CP   R26,R30
000902 e0e1      	LDI  R30,1
000903 f008      	BRLO __LTB12U1
000904 27ee      	CLR  R30
                 __LTB12U1:
000905 9508      	RET
                 
                 __GTB12U:
000906 17ea      	CP   R30,R26
000907 e0e1      	LDI  R30,1
000908 f008      	BRLO __GTB12U1
000909 27ee      	CLR  R30
                 __GTB12U1:
00090a 9508      	RET
                 
                 __MULD12U:
00090b 9f7a      	MUL  R23,R26
00090c 2d70      	MOV  R23,R0
00090d 9f6b      	MUL  R22,R27
00090e 0d70      	ADD  R23,R0
00090f 9ff8      	MUL  R31,R24
000910 0d70      	ADD  R23,R0
000911 9fe9      	MUL  R30,R25
000912 0d70      	ADD  R23,R0
000913 9f6a      	MUL  R22,R26
000914 2d60      	MOV  R22,R0
000915 0d71      	ADD  R23,R1
000916 9ffb      	MUL  R31,R27
000917 0d60      	ADD  R22,R0
000918 1d71      	ADC  R23,R1
000919 9fe8      	MUL  R30,R24
00091a 0d60      	ADD  R22,R0
00091b 1d71      	ADC  R23,R1
00091c 2788      	CLR  R24
00091d 9ffa      	MUL  R31,R26
00091e 2df0      	MOV  R31,R0
00091f 0d61      	ADD  R22,R1
000920 1f78      	ADC  R23,R24
000921 9feb      	MUL  R30,R27
000922 0df0      	ADD  R31,R0
000923 1d61      	ADC  R22,R1
000924 1f78      	ADC  R23,R24
000925 9fea      	MUL  R30,R26
000926 2de0      	MOV  R30,R0
000927 0df1      	ADD  R31,R1
000928 1f68      	ADC  R22,R24
000929 1f78      	ADC  R23,R24
00092a 9508      	RET
                 
                 __DIVW21U:
00092b 2400      	CLR  R0
00092c 2411      	CLR  R1
00092d e190      	LDI  R25,16
                 __DIVW21U1:
00092e 0faa      	LSL  R26
00092f 1fbb      	ROL  R27
000930 1c00      	ROL  R0
000931 1c11      	ROL  R1
000932 1a0e      	SUB  R0,R30
000933 0a1f      	SBC  R1,R31
000934 f418      	BRCC __DIVW21U2
000935 0e0e      	ADD  R0,R30
000936 1e1f      	ADC  R1,R31
000937 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000938 60a1      	SBR  R26,1
                 __DIVW21U3:
000939 959a      	DEC  R25
00093a f799      	BRNE __DIVW21U1
00093b 01fd      	MOVW R30,R26
00093c 01d0      	MOVW R26,R0
00093d 9508      	RET
                 
                 __DIVW21:
00093e d03b      	RCALL __CHKSIGNW
00093f dfeb      	RCALL __DIVW21U
000940 f40e      	BRTC __DIVW211
000941 dfb1      	RCALL __ANEGW1
                 __DIVW211:
000942 9508      	RET
                 
                 __DIVD21U:
000943 933f      	PUSH R19
000944 934f      	PUSH R20
000945 935f      	PUSH R21
000946 2400      	CLR  R0
000947 2411      	CLR  R1
000948 2744      	CLR  R20
000949 2755      	CLR  R21
00094a e230      	LDI  R19,32
                 __DIVD21U1:
00094b 0faa      	LSL  R26
00094c 1fbb      	ROL  R27
00094d 1f88      	ROL  R24
00094e 1f99      	ROL  R25
00094f 1c00      	ROL  R0
000950 1c11      	ROL  R1
000951 1f44      	ROL  R20
000952 1f55      	ROL  R21
000953 1a0e      	SUB  R0,R30
000954 0a1f      	SBC  R1,R31
000955 0b46      	SBC  R20,R22
000956 0b57      	SBC  R21,R23
000957 f428      	BRCC __DIVD21U2
000958 0e0e      	ADD  R0,R30
000959 1e1f      	ADC  R1,R31
00095a 1f46      	ADC  R20,R22
00095b 1f57      	ADC  R21,R23
00095c c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00095d 60a1      	SBR  R26,1
                 __DIVD21U3:
00095e 953a      	DEC  R19
00095f f759      	BRNE __DIVD21U1
000960 01fd      	MOVW R30,R26
000961 01bc      	MOVW R22,R24
000962 01d0      	MOVW R26,R0
000963 01ca      	MOVW R24,R20
000964 915f      	POP  R21
000965 914f      	POP  R20
000966 913f      	POP  R19
000967 9508      	RET
                 
                 __MODW21:
000968 94e8      	CLT
000969 ffb7      	SBRS R27,7
00096a c004      	RJMP __MODW211
00096b 95a0      	COM  R26
00096c 95b0      	COM  R27
00096d 9611      	ADIW R26,1
00096e 9468      	SET
                 __MODW211:
00096f fdf7      	SBRC R31,7
000970 df82      	RCALL __ANEGW1
000971 dfb9      	RCALL __DIVW21U
000972 01fd      	MOVW R30,R26
000973 f40e      	BRTC __MODW212
000974 df7e      	RCALL __ANEGW1
                 __MODW212:
000975 9508      	RET
                 
                 __MODD21U:
000976 dfcc      	RCALL __DIVD21U
000977 01fd      	MOVW R30,R26
000978 01bc      	MOVW R22,R24
000979 9508      	RET
                 
                 __CHKSIGNW:
00097a 94e8      	CLT
00097b fff7      	SBRS R31,7
00097c c002      	RJMP __CHKSW1
00097d df75      	RCALL __ANEGW1
00097e 9468      	SET
                 __CHKSW1:
00097f ffb7      	SBRS R27,7
000980 c006      	RJMP __CHKSW2
000981 95a0      	COM  R26
000982 95b0      	COM  R27
000983 9611      	ADIW R26,1
000984 f800      	BLD  R0,0
000985 9403      	INC  R0
000986 fa00      	BST  R0,0
                 __CHKSW2:
000987 9508      	RET
                 
                 __GETW1P:
000988 91ed      	LD   R30,X+
000989 91fc      	LD   R31,X
00098a 9711      	SBIW R26,1
00098b 9508      	RET
                 
                 __EEPROMRDB:
00098c 99e1      	SBIC EECR,EEWE
00098d cffe      	RJMP __EEPROMRDB
00098e 93ff      	PUSH R31
00098f b7ff      	IN   R31,SREG
000990 94f8      	CLI
000991 bbae      	OUT  EEARL,R26
000992 bbbf      	OUT  EEARH,R27
000993 9ae0      	SBI  EECR,EERE
000994 b3ed      	IN   R30,EEDR
000995 bfff      	OUT  SREG,R31
000996 91ff      	POP  R31
000997 9508      	RET
                 
                 __EEPROMWRB:
000998 9be1      	SBIS EECR,EEWE
000999 c002      	RJMP __EEPROMWRB1
00099a 95a8      	WDR
00099b cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00099c b79f      	IN   R25,SREG
00099d 94f8      	CLI
00099e bbae      	OUT  EEARL,R26
00099f bbbf      	OUT  EEARH,R27
0009a0 9ae0      	SBI  EECR,EERE
0009a1 b38d      	IN   R24,EEDR
0009a2 17e8      	CP   R30,R24
0009a3 f019      	BREQ __EEPROMWRB0
0009a4 bbed      	OUT  EEDR,R30
0009a5 9ae2      	SBI  EECR,EEMWE
0009a6 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0009a7 bf9f      	OUT  SREG,R25
0009a8 9508      	RET
                 
                 __CPW02:
0009a9 2400      	CLR  R0
0009aa 160a      	CP   R0,R26
0009ab 060b      	CPC  R0,R27
0009ac 9508      	RET
                 
                 __SAVELOCR6:
0009ad 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009ae 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009af 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009b0 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009b1 931a      	ST   -Y,R17
0009b2 930a      	ST   -Y,R16
0009b3 9508      	RET
                 
                 __LOADLOCR6:
0009b4 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009b5 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009b6 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009b7 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009b8 8119      	LDD  R17,Y+1
0009b9 8108      	LD   R16,Y
0009ba 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8A register use summary:
r0 :  39 r1 :  19 r2 :   0 r3 :   0 r4 :   5 r5 :   3 r6 :   2 r7 :   7 
r8 :   5 r9 :   5 r10:  12 r11:   3 r12:   4 r13:  14 r14:   0 r15:   2 
r16:  23 r17:  37 r18:   3 r19:   6 r20:  23 r21:  21 r22:  32 r23:  29 
r24:  31 r25:  18 r26: 312 r27:  69 r28:   9 r29:   1 r30: 544 r31: 129 
x  :  19 y  : 197 z  :   7 
Registers used: 32 out of 35 (91.4%)

ATmega8A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  14 add   :  16 
adiw  :  13 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   3 brcs  :   0 break :   0 breq  :  77 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :  13 brmi  :   1 brne  : 109 brpl  :   0 brsh  :  18 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 cbi   :  16 
cbr   :   0 clc   :   1 clh   :   0 cli   :   3 cln   :   0 clr   :  24 
cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 cp    :  10 
cpc   :  43 cpi   :  84 cpse  :   0 dec   :   7 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   9 
inc   :   1 ld    :  32 ldd   :  83 ldi   : 406 lds   :  34 lpm   :   7 
lsl   :   6 lsr   :   0 mov   :  62 movw  :  20 mul   :  11 muls  :   0 
mulsu :   0 neg   :   2 nop   :   1 or    :   2 ori   :   3 out   :  47 
pop   :  14 push  :  14 rcall : 602 ret   : 111 reti  :   1 rjmp  : 175 
rol   :  11 ror   :   0 sbc   :   8 sbci  :  13 sbi   :  20 sbic  :   4 
sbis  :   6 sbiw  :  30 sbr   :   2 sbrc  :   1 sbrs  :   3 sec   :   1 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   2 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  82 std   :  19 
sts   :  26 sub   :   3 subi  :  35 swap  :   1 tst   :   4 wdr   :   2 

Instructions used: 68 out of 114 (59.6%)

ATmega8A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001376   4918     64   4982    8192  60.8%
[.dseg] 0x000060 0x00017c      0     28     28    1024   2.7%
[.eseg] 0x000000 0x000005      0      5      5     512   1.0%

Assembly complete, 0 errors, 13 warnings
